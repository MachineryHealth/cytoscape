<!-- =================================================================== -->
<!-- Table Import plugin (tableImport.jar) build file     
			11/16/2006 Written by Keiichiro Ono (kono@ucsd.edu)       -->
<!-- =================================================================== -->

<project name="tableImport" default="tableImport" basedir=".">

	<!-- =================================================================== -->
	<!-- Initialization target                                               -->
	<!-- =================================================================== -->
	<target name="init-tableImport">
		<tstamp />
		<property name="tableImport.Name" value="tableImport" />
		<property name="tableImport.name" value="tableImport" />
		<property name="tableImport.version" value="0.5" />
		<property name="tableImport.year" value="200" />



		<echo message="Building ${tableImport.name} version ${tableImport.version}." />

		<!-- Inheritable properties -->
		<property name="debug" value="on" />
		<property name="optimize" value="off" />
		<property name="deprecation" value="on" />
		<property name="nowarn" value="true" />
		<property name="fork" value="false" />
		<property name="tableImport.root.dir" value="." />
		<property name="tableImport.lib.dir" value="${tableImport.root.dir}/lib" />

		<!-- You need to modify this line to point to Cytoscape directory.  -->
		<property name="cytoscape.dir" value="${tableImport.root.dir}/../FreshSVNTest" />

		<property name="cytoscape.lib.dir" value="${cytoscape.dir}/lib" />
		<property name="cytoscape.plugin.dir" value="${cytoscape.dir}/plugins" />
		<property name="cytoscape.build.dir" value="${cytoscape.dir}/build/cytoscape-v2.4.0" />
		<path id="project.class.path">
			<pathelement path="${java.class.path}/" />
		</path>

		<!-- Define the directories -->
		<property name="tableImport.root.dir" value="./" />
		<property name="tableImport.src.dir" value="${tableImport.root.dir}/src" />
		<property name="tableImport.classes.dir" value="${tableImport.root.dir}/classes" />
		<property name="tableImport.javadoc.dir" value="${javadoc.dir}/tableImport" />
		<property name="tableImport.resources.dir" value="${tableImport.root.dir}/resources" />
		<property name="tableImport.manifest.dir" value="${tableImport.root.dir}/manifest" />
		<property name="tableImport.packages" value="tableImport.*" />
		<!-- Subdirectory for test reports -->
		<property name="tableImport.tests.reports.dir" value="${tableImport.root.dir}/reports/tests" />
		<property name="cytoscape.lib" value="${cytoscape.dir}/lib" />

		<!-- Define the condition for compilation -->
		<property name="cytoscape.jar" value="${cytoscape.dir}/cytoscape.jar" />

		<condition property="cytoscape.present">
			<and>
				<available file="${cytoscape.jar}" />
			</and>
		</condition>

		<!-- Define excludes for tableImport compile and javadoc -->
		<property name="tableImport.excludes" value="**/notyet/*" />
		<property name="tableImport.tests.excludes" value="**/notyet/*" />
		<property name="tableImport.packages.excludes" value="**.test.*,**.notyet.*" />

		<path id="tableImport.project.class.path">
			<pathelement location="${tableImport.classes.dir}" />
			<pathelement path="${cytoscape.dir}/cytoscape.jar/" />
			<pathelement location="${cytoscape.lib.dir}/**" />
			<pathelement path="${project.class.path}/" />
		</path>


	</target>

	<!-- =================================================================== -->
	<!-- Compiles the tableImport project                                           -->
	<!-- =================================================================== -->
	<target name="compile-tableImport" depends="init-tableImport">

		<echo message=" COMPILE tableImport " />

		<mkdir dir="${tableImport.classes.dir}" />
		<javac srcdir="${tableImport.src.dir}" excludes="${tableImport.excludes}" classpathref="tableImport.project.class.path" destdir="${tableImport.classes.dir}" debug="${debug}" nowarn="${nowarn}" deprecation="${deprecation}" optimize="${optimize}" fork="${fork}" />
	</target>

	<!-- =================================================================== -->
	<!-- Creates the tableImport.jar file                                           -->
	<!-- =================================================================== -->
	<target name="tableImport" depends="compile-tableImport">
		<!-- copy over images -->
		<copy todir="${tableImport.classes.dir}/images">
			<fileset dir="${tableImport.root.dir}/images" />
		</copy>
		<jar destfile="TableImport.jar" manifest="${tableImport.manifest.dir}/tableImport.manifest">
			<fileset dir="${tableImport.classes.dir}" includes="**" />
			<fileset dir="${tableImport.root.dir}/lib" includes="resources/**" />
		</jar>
		<copy todir="${tableImport.lib.dir}" file="TableImport.jar" />
		<copy todir="${cytoscape.plugin.dir}/core" file="TableImport.jar" />
		<copy todir="${cytoscape.build.dir}/plugins" file="TableImport.jar" />
	</target>

	<!-- =================================================================== -->
	<!-- Compiles the tableImport tests                                             -->
	<!-- =================================================================== -->
	<target name="compile-tests" depends="tableImport">
		<mkdir dir="${tableImport.classes.dir}" />
		<javac srcdir="${tableImport.src.dir}" includes="**/test/*" excludes="${tableImport.tests.excludes}" classpathref="tableImport.project.class.path" destdir="${tableImport.classes.dir}" debug="${debug}" deprecation="${deprecation}" optimize="${optimize}" fork="${fork}" />
	</target>

	<!-- =================================================================== -->
	<!-- Creates the tableImport-tests.jar file                                     -->
	<!-- =================================================================== -->
	<target name="tests" depends="compile-tests">
		<jar jarfile="tableImport-tests.jar" basedir="${tableImport.classes.dir}" includes="**/test/*" />
	</target>

	<!-- =================================================================== -->
	<!-- Build all jars                                                      -->
	<!-- =================================================================== -->
	<target name="all" depends="tableImport" />

	<!-- =================================================================== -->
	<!-- Run the Plugin                                                      -->
	<!-- =================================================================== -->
	<target name="run" depends="tableImport">

		<java classname="cytoscape.cytoscape" classpathref="tableImport.project.class.path" fork="true" />
		<arg line="-p ${tableImport.lib.dir}/TableImport.jar" />


	</target>


	<!-- =================================================================== -->
	<!-- Runs the tests in tableImport-tests.jar                                    -->
	<!-- =================================================================== -->
	<target name="runtests" depends="tests">
		<mkdir dir="${tableImport.tests.reports.dir}" />
		<junit printsummary="yes" haltonfailure="no" dir="${tableImport.classes.dir}" maxmemory="1G">
			<formatter type="plain" usefile="true" />
			<classpath refid="tableImport.project.class.path" />
			<!-- The junit task doesn't support 'if' so we test for JUnit here -->
			<batchtest fork="yes" todir="${tableImport.tests.reports.dir}" if="junit.present">
				<fileset dir="${tableImport.classes.dir}" includes="**/test/*" excludes="${tableImport.tests.excludes}" />
			</batchtest>
		</junit>
	</target>

	<!-- =================================================================== -->
	<!-- Creates the API documentation                                       -->
	<!-- =================================================================== -->
	<target name="docs" depends="init-tableImport">
		<mkdir dir="${tableImport.javadoc.dir}" />
		<javadoc packagenames="${tableImport.packages}" excludepackagenames="${tableImport.packages.excludes}" sourcepath="${tableImport.src.dir}" destdir="${tableImport.javadoc.dir}" classpathref="tableImport.project.class.path" author="true" version="true" use="true" splitindex="true" noindex="false" windowtitle="${tableImport.Name} API" doctitle="${tableImport.Name}" />
	</target>

	<!-- =================================================================== -->
	<!-- Clean up, get back to original state                                -->
	<!-- =================================================================== -->
	<target name="clean" depends="init-tableImport">
		<delete dir="${tableImport.classes.dir}" />
		<delete file="TableImport.jar" />
		<delete file="${tableImport.lib.dir}/tableImport.jar" />
		<delete file="tableImport-tests.jar" />
	</target>

</project>

<!-- End of file -->
