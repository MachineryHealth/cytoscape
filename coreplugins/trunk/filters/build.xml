<!-- =================================================================== -->
<!-- filters plugin (filters.jar) build file (Eclipse 3.2)     -->
<!-- =================================================================== -->

	<project name="filters" default="filters" basedir=".">

  <!-- =================================================================== -->
  <!-- Initialization target                                               -->
  <!-- =================================================================== -->
  <target name="init-filters">
    <property name="filters.Name" value="filters"/>
    <property name="filters.name" value="filters"/>
    <property name="filters.version" value="1.1"/>
    <property name="filters.year" value="2007"/>
  	
    <echo message="Building ${filters.name} version ${filters.version}."/>

    <!-- Inheritable properties -->
    <property name="debug" value="on"/>
    <property name="optimize" value="off"/>
    <property name="deprecation" value="on"/>
    <property name="nowarn" value="true"/>
    <property name="fork" value="false"/>
    <property name="filters.root.dir" value="."/>
    <property name="filters.lib.dir" value="${filters.root.dir}/lib"/>
  	
    <property name="cytoscape.dir" value="../../cytoscape"/>
  	<property name="cytoscape.lib.dir" value="${cytoscape.dir}/lib"/>
    <property name="cytoscape.plugin.dir" value="${cytoscape.dir}/plugins"/>
  	
  	<path id="project.class.path">
      <pathelement path="${java.class.path}/"/>
    </path>

    <!-- Define the directories -->
    <property name="filters.root.dir" value="./"/>
    <property name="filters.src.dir" value="${filters.root.dir}/src"/>
    <property name="filters.classes.dir" value="${filters.root.dir}/classes"/>
    <property name="filters.javadoc.dir" value="${javadoc.dir}/filters"/>
    <property name="filters.resources.dir" value="${filters.root.dir}/resources"/>
    <property name="filters.manifest.dir" value="${filters.root.dir}/manifest"/>
    <property name="filters.packages" value="filters.*"/>
    <!-- Subdirectory for test reports -->
    <property name="filters.tests.reports.dir" value="${filters.root.dir}/reports/tests" />
    <property name="cytoscape.lib" value="${cytoscape.dir}/lib" />

    <!-- Define the condition for compilation -->
    <property name="cytoscape.jar" value="${cytoscape.dir}/cytoscape.jar"/>
    <property name="quick_find.jar" value="${cytoscape.plugin.dir}/core/quick_find.jar"/>
    
    <condition property="cytoscape.present">
      <and> 
	  		<available file="${cytoscape.jar}"/> 
				<available file="${quick_find.jar}"/> 
		  </and>
    </condition>

    <!-- Define excludes for filters compile and javadoc -->
    <property name="filters.excludes" value="**/notyet/*"/>
    <property name="filters.tests.excludes" value="**/notyet/*"/>
    <property name="filters.packages.excludes" value="**.test.*,**.notyet.*"/>

    <path id="filters.project.class.path">
      <pathelement location="${filters.classes.dir}"/>
      <pathelement location="${cytoscape.dir}/cytoscape.jar"/>
      <pathelement location="${cytoscape.plugin.dir}/core/quick_find.jar"/>
      <pathelement location="${cytoscape.lib.dir}/giny.jar"/>
      <pathelement location="${cytoscape.lib.dir}/cytoscape-task.jar"/>
      <pathelement location="${cytoscape.lib.dir}/violinstrings-1.0.2.jar"/>    	
      <pathelement path="${project.class.path}/"/>
    </path>

  </target>

  <!-- =================================================================== -->
  <!-- Compiles the filters project                                           -->
  <!-- =================================================================== -->
  <target name="compile-filters" depends="init-filters"  >

   <echo message=" COMPILE filters "/>
    
    <mkdir dir="${filters.classes.dir}"/>
    <javac srcdir="${filters.src.dir}"
           excludes="${filters.excludes}"
           classpathref="filters.project.class.path"
           destdir="${filters.classes.dir}"
           debug="${debug}"
           nowarn="${nowarn}"
           deprecation="${deprecation}" 
           optimize="${optimize}"
           fork="${fork}"/>
  </target>

  <!-- =================================================================== -->
  <!-- Creates the filters.jar file                                           -->
  <!-- =================================================================== -->
  <target name="filters" depends="compile-filters"  >
  	
	<copy todir="${filters.classes.dir}/cytoscape/filters" file="${filters.resources.dir}/plugin.props"/>
  	
    <jar destfile="filters.jar">
        <manifest>
         <attribute name="Cytoscape-Plugin" value="cytoscape.filters.FilterPlugin"/>
        </manifest>

      <fileset
        dir="${filters.classes.dir}"
        includes="**"/>

    </jar>
  	
    <copy todir="${filters.lib.dir}" file="filters.jar"/>

  </target>

  <!-- =================================================================== -->
  <!-- Compiles the filters tests                                             -->
  <!-- =================================================================== -->
  <target name="compile-tests" depends="filters"  >
    <mkdir dir="${filters.classes.dir}"/>
    <javac srcdir="${filters.src.dir}"
           includes="**/test/*"
           excludes="${filters.tests.excludes}"
           classpathref="filters.project.class.path"
           destdir="${filters.classes.dir}"
           debug="${debug}"
           deprecation="${deprecation}" 
           optimize="${optimize}"
           fork="${fork}"/>
  </target>

  <!-- =================================================================== -->
  <!-- Creates the filters-tests.jar file                                     -->
  <!-- =================================================================== -->
  <target name="tests" depends="compile-tests"  >
    <jar jarfile="filters-tests.jar"
         basedir="${filters.classes.dir}"
         includes="**/test/*"/>
  </target>

  <!-- =================================================================== -->
  <!-- Build all jars                                                      -->
  <!-- =================================================================== -->
  <target name="all" depends="filters"/>

   <!-- =================================================================== -->
  <!-- Run the Plugin                                                      -->
  <!-- =================================================================== -->
  <target name="run" depends="filters" >
     
     <java classname="cytoscape.cytoscape" 
           classpathref="filters.project.class.path"
           fork="true"/>
           <arg line = "-p ${filters.lib.dir}/filters.jar"/>
           

  </target>


  <!-- =================================================================== -->
  <!-- Runs the tests in filters-tests.jar                                    -->
  <!-- =================================================================== -->
  <target name="runtests" depends="tests"  >
    <mkdir dir="${filters.tests.reports.dir}"/>
    <junit
       printsummary="yes"
       haltonfailure="no"
       dir="${filters.classes.dir}"
       maxmemory="1G"
    >
      <formatter type="plain" usefile="true" />
      <classpath refid="filters.project.class.path"/>
      <!-- The junit task doesn't support 'if' so we test for JUnit here -->
      <batchtest fork="yes" todir="${filters.tests.reports.dir}" if="junit.present">
        <fileset
           dir="${filters.classes.dir}"
           includes="**/test/*"
           excludes="${filters.tests.excludes}"
        />
      </batchtest>
    </junit>
  </target>

  <!-- =================================================================== -->
  <!-- Creates the API documentation                                       -->
  <!-- =================================================================== -->
  <target name="docs" depends="init-filters" >
    <mkdir dir="${filters.javadoc.dir}"/>
    <javadoc packagenames="${filters.packages}"
             excludepackagenames="${filters.packages.excludes}"
             sourcepath="${filters.src.dir}"
             destdir="${filters.javadoc.dir}"
             classpathref="filters.project.class.path"
             author="true"
             version="true"
             use="true"
             splitindex="true"
             noindex="false"
             windowtitle="${filters.Name} API"
             doctitle="${filters.Name}"
    />
  </target>
 
  <!-- =================================================================== -->
  <!-- Clean up, get back to original state                                -->
  <!-- =================================================================== -->
  <target name="clean" depends="init-filters">
    <delete dir="${filters.classes.dir}"/>
    <delete file="filters.jar"/>
    <delete dir="${filters.lib.dir}"/>
    <delete file="filters-tests.jar"/>
  </target>

</project>

<!-- End of file -->
