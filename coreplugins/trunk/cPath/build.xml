<?xml version="1.0"?>
<!-- build.xml - Build file for Cytoscape Data Viewer Plug In -->
<project name="Cytoscape Data Viewer Plug In" default="jar" basedir=".">

    <!-- The name of the cPath JAR -->
    <property name="jar.name" value="cPath.jar"/>

    <!-- The directory containing library jar files -->
	<property name="lib.dir" value="lib"/>
	<property name="cytoscape.dir" value="../../cytoscape"/>
	<property name="cytoscape.lib.dir" value="${cytoscape.dir}/lib"/>

  	<!-- The directory containing source code -->
  	<property name="src.dir" value="src"/>

	<!-- The directory containing the configuration files -->
  	<property name="config.dir" value="config"/>
	
  	<!-- Temporary build directories -->
 	<property name="build.dir" value="build"/>
  	<property name="build.classes" value="${build.dir}/classes"/>

    <!-- The Plugins Dir -->
    <property name="plugins.dir" value="plugins"/>

    <!-- Global "magic" property for <javac> -->
	<property name="build.compiler" value="modern"/>

    <!-- Classpath with all lib JAR Files -->
	<path id="classpath">
		<pathelement path="${build.classes}"/>	
		<pathelement path="${basedir}"/>
		<fileset dir="${lib.dir}">
			<include name="**/*.jar"/>
		</fileset>
		<fileset dir="${cytoscape.dir}">
			<include name="*.jar"/>
		</fileset>
		<fileset dir="${cytoscape.lib.dir}">
			<include name="*.jar"/>
		</fileset>
	</path>

	<!--  Define Check Style Task -->
	<taskdef resource="checkstyletask.properties" classpath="${lib.dir}/checkstyle-all-3.0.jar"/>
	

  	<!-- Target to create the build directories prior to compilation -->
  	<target name="prepare">
    	<mkdir dir="${build.dir}"/>
	    <mkdir dir="${build.dir}/docs"/>
    	<mkdir dir="${build.classes}"/>
        <copy todir="${build.classes}/org/cytoscape/coreplugin/cpath/ui/resources">
            <fileset dir="${src.dir}/org/cytoscape/coreplugin/cpath/ui/resources"/>
        </copy>
        <mkdir dir="${plugins.dir}"/>
      </target>

	<!--  Target to clean out all directories -->
  	<target name="clean" description="Removes all generated files.">
    	<delete dir="${build.dir}"/>
        <delete dir="${plugins.dir}"/>
        <delete>
                <fileset dir="." includes="*.log"/>
        </delete>
  	</target>

	<!--  Target to compile all code -->
  	<target name="compile" depends="prepare"
          description="Compiles all source code.">
    	<javac srcdir="${src.dir}" destdir="${build.classes}"
            nowarn="on" debug="true" deprecation="yes" 
	    debuglevel="source,lines,var">
    		<classpath refid="classpath"/>
    	</javac>
  	</target>

 	<!--  Target to Run Cytoscape with DataService PlugIns -->
  	<target name="run" depends="jar"
		description="Runs Cytoscape with Sample Data.">

		<java classname="cytoscape.CyMain"
		classpathref="classpath" fork="true" maxmemory="1000M">
		<arg line="-p plugins"/>
       	</java> 
	</target>

    <!--  Target to Create PlugIn JARs -->
    <target name="jar" depends="compile" description="Creates PlugIn Jars">
        <!-- Start clean -->

        <unjar dest="${build.classes}">
            <fileset dir="${lib.dir}">
                <include name="*.jar"/>
                <exclude name="checkstyle*.jar"/>
                <exclude name="x*.jar"/>
                <exclude name="junit.jar"/>
                <exclude name="jdom.jar"/>
            </fileset>
        </unjar>
        <jar destfile="${plugins.dir}/${jar.name}">
            <fileset dir="${build.classes}"/>
            <manifest>
              <attribute name="Cytoscape-Plugin" value="org.cytoscape.coreplugin.cpath.plugin.CPathPlugIn"/>
            </manifest>
        </jar>
    </target>

	<!--  Target to Run CheckStyle on all Source Code -->
	<!--  Uses the Sun Coding Conventions Configuration -->
	<target name="check" description="Checks Sun Coding Conventions">
		<checkstyle config="${config.dir}/sun_checks.xml">
  			<fileset dir="${src.dir}">
				<include name="**/*.java"/>
			</fileset>
  		</checkstyle>
  	</target>

	<!--  Target to Run JavaDoc on all Source Code -->
	<target name="doc" description="Runs JavaDoc">
		<javadoc destdir="${build.dir}/docs" classpathref="classpath">
		</javadoc>
	</target>
</project>
