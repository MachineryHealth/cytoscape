<?xml version="1.0"?>
<!-- build.xml - Build file for Cytoscape Data Viewer Plug In -->
<project name="Cytoscape Data Viewer Plug In" default="jar" basedir=".">

	<property name="jar.name" value="cPath.jar"/>
	<!--  The directory containing library jar files -->	
	<property name="lib.dir" value="lib"/>
	<property name="cytoscape.dir" value="../../cytoscape"/>
	<property name="cytoscape.lib.dir" value="${cytoscape.dir}/lib"/>

  	<!-- The directory containing source code -->
  	<property name="src.dir" value="src"/>

	<!-- The directory containing the configuration files -->
  	<property name="config.dir" value="config"/>
	
  	<!-- Temporary build directories -->
 	<property name="build.dir" value="build"/>
  	<property name="build.classes" value="${build.dir}/classes"/>

    <!-- Release directories -->
    <property name="release.dir" value="release"/>

    <!-- Production Directories -->
    <property name="cbio_cpath.dir" value="/srv/www/htdocs/cytoscape/cpath/beta3"/>

	<!-- Global "magic" property for <javac> -->
	<property name="build.compiler" value="modern"/>

    <!-- Version Numbers -->
    <property name="cpath_version" value="beta3"/>

    <!-- Classpath with all lib JAR Files -->
	<path id="classpath">
		<pathelement path="${build.classes}"/>	
		<pathelement path="${basedir}"/>
		<fileset dir="${lib.dir}">
			<include name="**/*.jar"/>
		</fileset>
		<fileset dir="${cytoscape.dir}">
			<include name="*.jar"/>
		</fileset>
		<fileset dir="${cytoscape.lib.dir}">
			<include name="*.jar"/>
		</fileset>
	</path>

	<!--  Define Check Style Task -->
	<taskdef resource="checkstyletask.properties" classpath="${lib.dir}/checkstyle-all-3.0.jar"/>
	

  	<!-- Target to create the build directories prior to compilation -->
  	<target name="prepare">
    	<mkdir dir="${build.dir}"/>
	    <mkdir dir="${build.dir}/docs"/>
    	<mkdir dir="${build.classes}"/>
        <copy todir="${build.classes}/csplugins/dataviewer/ui/resources">
            <fileset dir="${src.dir}/csplugins/dataviewer/ui/resources"/>
        </copy>
  	</target>

	<!--  Target to clean out all directories -->
  	<target name="clean" description="Removes all generated files.">
    	<delete dir="${build.dir}"/>
        <delete dir="${release.dir}"/>
        <delete file="${jar.name}"/>
        <delete>
                <fileset dir="." includes="*.log"/>
        </delete>
  	</target>

	<!--  Target to compile all code -->
  	<target name="compile" depends="prepare"
          description="Compiles all source code.">
    	<javac srcdir="${src.dir}" destdir="${build.classes}"
            nowarn="on" debug="true" deprecation="yes" 
	    debuglevel="source,lines,var">
    		<classpath refid="classpath"/>
    	</javac>
  	</target>

 	<!--  Target to Run Cytoscape with DataService PlugIns -->
  	<target name="run" depends="jar"
		description="Runs Cytoscape with Sample Data.">

		<java classname="cytoscape.CyMain"
		classpathref="classpath" fork="true" maxmemory="1000M">
		<arg line="-p plugins"/>
       	</java> 
	</target>

    <!--  Target to Create PlugIn JARs -->
    <target name="jar" depends="compile" description="Creates PlugIn Jars">
        <!-- Start clean -->

        <unjar dest="${build.classes}">
            <fileset dir="${lib.dir}">
                <include name="*.jar"/>
                <exclude name="checkstyle*.jar"/>
                <exclude name="x*.jar"/>
                <exclude name="junit.jar"/>
                <exclude name="jdom.jar"/>
            </fileset>
        </unjar>
        <jar destfile="${jar.name}">
            <fileset dir="${build.classes}"/>
        </jar>
    </target>

	<!--  Target to Run CheckStyle on all Source Code -->
	<!--  Uses the Sun Coding Conventions Configuration -->
	<target name="check" description="Checks Sun Coding Conventions">
		<checkstyle config="${config.dir}/sun_checks.xml">
  			<fileset dir="${src.dir}">
				<include name="**/*.java"/>
			</fileset>
  		</checkstyle>
  	</target>

	<!--  Target to Run JavaDoc on all Source Code -->
	<target name="doc" description="Runs JavaDoc">
		<javadoc destdir="${build.dir}/docs" classpathref="classpath">
		</javadoc>
	</target>

	<!--  Target to Create cPath Release Files -->
    <target name="release"
        description="Creates Release Files for cPath PlugIn"
        depends="jar">

        <!-- Start clean -->
        <delete dir="${release.dir}"/>
        <mkdir dir="${release.dir}"/>

        <!-- Copy Jar Files -->
        <mkdir dir="${release.dir}/plugin"/>
        <copy file="${build.dir}/${jar.name}" todir="${release.dir}/plugin"/>

        <!-- Copy over README file -->
        <copy file="docs/CPATH_README.txt" tofile="${release.dir}/README.txt"/>

        <!-- Copy over All Licenses -->
        <mkdir dir="${release.dir}/licenses"/>
        <copy todir="${release.dir}/licenses">
            <fileset dir="licenses"/>
        </copy>

        <!-- Create a Zip File  -->
        <zip destfile="${release.dir}/cpath-${cpath_version}.zip"
            basedir="${release.dir}"/>

        <!-- Create a Tar/Gzip File -->
        <tar tarfile="${release.dir}/cpath-${cpath_version}.tar"
            basedir="${release.dir}"/>
        <gzip src="${release.dir}/cpath-${cpath_version}.tar"
            zipfile="${release.dir}/cpath-${cpath_version}.tar.gz"/>

        <!-- Delete the Tar File -->
        <delete file="${release.dir}/cpath-${cpath_version}.tar"/>
    </target>


	<!--  Target to Deploy the PlugIns to cBio -->
    <target name="deploy" description="Deploys all PlugIns to cBio Web Site">
        <!-- Include README.txt -->
        <copy file="docs/CPATH_README.txt"
            toFile="${release.dir}/README.txt"/>

        <!-- Copy cPath PlugIn via SCP -->
        <apply executable="scp">
            <srcfile/>
            <fileset dir="${release.dir}"/>
            <arg line="cerami@cbio:${cbio_cpath.dir}"/>
         </apply>

    </target>

    <target name="mapper_jar" 
 	description="Creates Jar File of Data Service to/from Cytoscape 2 Mapper Classes" 
	depends="compile">
	<jar jarfile="${build.dir}/mapper_cyto2.jar">
		<fileset dir="${build.classes}">
			<include name="csplugins/dataviewer/mapper/**"/>
			<include name="csplugins/dataviewer/util/**"/>
		</fileset>
	</jar>
    </target>
</project>
