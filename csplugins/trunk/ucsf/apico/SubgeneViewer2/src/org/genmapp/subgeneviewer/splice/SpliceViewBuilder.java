package org.genmapp.subgeneviewer.splice;

import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Frame;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.JScrollPane;

import org.jdesktop.layout.GroupLayout;
import org.jdesktop.swingx.JXPanel;

import cytoscape.Cytoscape;
import cytoscape.visual.ui.icon.VisualPropertyIcon;

/**
 * 
 */
public class SpliceViewBuilder extends JDialog {
	private static SpliceViewBuilder dab = null;

	/**
	 * Creates a new SpliceViewBuilder object.
	 * 
	 * @param parent
	 *            DOCUMENT ME!
	 * @param modal
	 *            DOCUMENT ME!
	 */
	public SpliceViewBuilder(Frame parent, boolean modal) {
		//super(parent, modal);
		System.out.println("SpliceViewBuilder check!");
		initComponents();

		this.addComponentListener(new ComponentAdapter() {
			public void componentResized(ComponentEvent e) {
				mainView.updateView();
			}
		});
	}

	/**
	 * DOCUMENT ME!
	 * 
	 * @param parent
	 *            DOCUMENT ME!
	 * 
	 * @return DOCUMENT ME!
	 */
	public static JPanel showDialog(Frame parent) {
		buildDefaultViewDialog(parent);
		dab.setLocationRelativeTo(parent);
		dab.setSize(500, 200);
		dab.mainView.updateView();
		dab.layoutComponents();
		dab.setVisible(false);

		return dab.getPanel();
	}

	private static void buildDefaultViewDialog(Frame component) {
		dab = new SpliceViewBuilder(component, false);
		dab.mainView.createDummyNetworkView();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */

	// <editor-fold defaultstate="collapsed" desc=" Generated Code ">
	private void initComponents() {
		jXPanel1 = new org.jdesktop.swingx.JXPanel();
		mainView = new SpliceViewPanel();
	}
	
	public void layoutComponents() {
		globalScrollPane = new javax.swing.JScrollPane(mainView);
		closeButton = new javax.swing.JButton();

		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		setTitle("Exon Splice Viewer");
		mainView.setBorder(new javax.swing.border.LineBorder(
				java.awt.Color.darkGray, 1, true));

		GroupLayout jXPanel2Layout = new GroupLayout(
				mainView);
		mainView.setLayout(jXPanel2Layout);
		jXPanel2Layout.setHorizontalGroup(jXPanel2Layout.createParallelGroup(
				GroupLayout.LEADING).add(0, mainView.getPanelWidth(), Short.MAX_VALUE));
		jXPanel2Layout.setVerticalGroup(jXPanel2Layout.createParallelGroup(
				GroupLayout.LEADING).add(0, mainView.getPanelHeight(), Short.MAX_VALUE));
		
//		globalScrollPane.setPreferredSize(((DGraphView) mainView.getView()).getCanvas().getSize());
//		globalScrollPane.setPreferredSize(new Dimension(mainView.getPanelWidth(), mainView.getPanelHeight()));	
		globalScrollPane.setPreferredSize(new Dimension(500, mainView.getPanelHeight() + 25));
		

		closeButton.setText("Close");
		closeButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				// mainView.clean();
				dispose();

			}
		});

		GroupLayout jXPanel1Layout = new GroupLayout(
				jXPanel1);
		jXPanel1.setLayout(jXPanel1Layout);
		jXPanel1Layout.setAutocreateContainerGaps(true);
		jXPanel1Layout.setAutocreateGaps(true);
		jXPanel1Layout.setHorizontalGroup(jXPanel1Layout.createParallelGroup(GroupLayout.CENTER)
				.add(globalScrollPane).add(closeButton));
		jXPanel1Layout.setVerticalGroup(jXPanel1Layout.createSequentialGroup()
				.add(globalScrollPane).add(closeButton));

		GroupLayout layout = new GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(
				GroupLayout.LEADING).add(jXPanel1,
				GroupLayout.DEFAULT_SIZE,
				GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));
		layout.setVerticalGroup(layout.createParallelGroup(
				GroupLayout.LEADING).add(jXPanel1,
				GroupLayout.DEFAULT_SIZE,
				GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));
		pack();
	} // </editor-fold>

	// Variables declaration - do not modify
	private JButton closeButton;

	private JScrollPane globalScrollPane;

	private JXPanel jXPanel1;

	// End of variables declaration
	protected SpliceViewPanel mainView;

	// End of variables declaration
	private JPanel getPanel() {
		return mainView;
	}

	
	/*
	 * Draw global color icon
	 */
	class GlobalIcon extends VisualPropertyIcon {
		public GlobalIcon(String name, Color color) {
			super(name, color);
		}

		public void paintIcon(Component c, Graphics g, int x, int y) {
			Graphics2D g2d = (Graphics2D) g;

			g2d.setColor(color);
			g2d.fillRect(5, 3, 50, 32);

			g2d.setStroke(new BasicStroke(1f));
			g2d.setColor(Color.DARK_GRAY);
			g2d.drawRect(5, 3, 50, 32);
		}
	}
}
