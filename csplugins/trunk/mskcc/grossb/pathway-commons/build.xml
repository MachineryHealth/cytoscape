<?xml version="1.0"?>
<!-- build.xml - Build file for Cytoscape Pathway Commons Plug In -->
<project  default="all" name="Cytoscape Pathway Commons PlugIn">
    <!-- Project Name -->
    <property name="project_name" value="pathway_commons"/>
    <!-- Version Numbers -->
    <property name="version" value="1_0"/>
    <!--  Define Check Style Task -->
    <taskdef resource="checkstyletask.properties"/>
    <!-- The directory containing source code -->
    <property name="src.dir" value="src"/>
	<!-- The Cytoscape lib directory -->
	<property name="cytoscape_lib_dir" value="../../../../cytoscape/lib"/>
	<!-- The Cytoscape jar directory -->
	<property name="cytoscape_jar_dir" value="../../../../cytoscape"/>
	<!-- The Cytoscape plugin directory (core) -->
	<property name="cytoscape_plugin_dir" value="../../../../cytoscape/plugins/core"/>
    <!-- The directory containing the configuration files -->
    <property name="config.dir" value="config"/>
    <!-- Temporary build directories -->
    <property name="build.dir" value="build"/>
    <property name="build.classes" value="${build.dir}/classes"/>
    <!-- Jars directory -->
    <property name="jars.dir" value="${build.dir}/jars"/>
	<!-- Jar file -->
    <property name="project_jar" value="${project_name}.jar"/>
    <!-- PlugIns directory -->
    <property name="plugins.dir" value="plugins"/>
    <!-- Styles Directory -->
    <property name="style.dir" value="style"/>
    <!-- Release directories -->
    <property name="release.dir" value="${build.dir}/release"/>
    <!-- Versioned Release Directory -->
    <property name="version_release.dir"
        value="${release.dir}/${project_name}_${version}"/>
    <!-- Zip Release directories -->
    <property name="zip.dir" value="${build.dir}/zip_release"/>
    <!-- Global "magic" property for <javac> -->
    <property name="build.compiler" value="modern"/>
    <!-- Junit Directory -->
    <property name="junit.dir" value="${build.dir}/junit"/>
    <!-- Temp Directory -->
    <property name="temp.dir" value="temp"/>

    <!-- Classpath with all lib JAR Files -->
    <path id="classpath">
        <pathelement path="${build.classes}"/>
        <fileset dir="${cytoscape_lib_dir}">
             <include name="*.jar"/>
        </fileset>
        <fileset dir="${cytoscape_lib_dir}/build-libs">
             <include name="*.jar"/>
        </fileset>
         <fileset dir="${cytoscape_jar_dir}">
             <include name="cytoscape.jar"/>
         </fileset>
        <fileset dir="${cytoscape_plugin_dir}">
             <include name="biopax.jar"/>
        </fileset>
        <fileset dir="lib">
             <include name="*.jar"/>
        </fileset>
    </path>

    <!-- For XJC compiler task -->
    <taskdef name="xjc" classname="com.sun.tools.xjc.XJCTask">
        <classpath refid="classpath" />
    </taskdef>

    <!-- Target to create the build directories prior to compilation -->
    <target name="prepare">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${build.dir}/docs"/>
        <mkdir dir="${build.classes}"/>
        <mkdir dir="${jars.dir}"/>
	    <echo>"basedir ${basedir}"</echo>
    </target>

    <!-- Generate package using XJC compiler            -->
    <target name="bind" depends="prepare" description="Run XJC to generate new packages.">
        <mkdir dir="${src.dir}/org/mskcc/pathway_commons/schemas/search_response"/>
        <xjc schema="xml/SearchResponse.xsd"
             destdir="${src.dir}"
             package="org.mskcc.pathway_commons.schemas.search_response">
            <produces dir="${src.dir}/org/mskcc/pathway_commons/schemas/search_response"/>
            <arg value="-nv"/>
        </xjc>
        <mkdir dir="${src.dir}/org/mskcc/pathway_commons/schemas/summary_response"/>
        <xjc schema="xml/SummaryResponse.xsd"
             destdir="${src.dir}"
             package="org.mskcc.pathway_commons.schemas.summary_response">
            <produces dir="${src.dir}/org/mskcc/pathway_commons/schemas/summary_response"/>
            <arg value="-nv"/>
        </xjc>
    </target>

    <!--  Target to clean out all directories -->
    <target description="Removes all generated files." name="clean">
        <delete dir="${build.dir}"/>
        <delete dir="${jars.dir}"/>
        <delete dir="${plugins.dir}"/>
        <delete dir="${junit.dir}"/>
        <delete dir="${temp.dir}"/>
        <delete>
            <fileset dir="." includes="*.log"/>
            <fileset dir="." includes="*.gz"/>
        </delete>
        <delete dir="${src.dir}/org/mskcc/pathway_commons/schemas/search_response"/>
        <delete dir="${src.dir}/org/mskcc/pathway_commons/schemas/summary_response"/>
    </target>

    <!--  Target to compile all code -->
    <target depends="bind" description="Compiles all source code."
        name="compile">
        <javac debug="true" debuglevel="source,lines,var"
            destdir="${build.classes}" nowarn="on" srcdir="${src.dir}" deprecation="true">
            <classpath refid="classpath"/>
        </javac>

        <!-- Copy all resources -->
        <copy todir="${build.classes}">
            <fileset dir="${src.dir}">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>

    <!--  Target to Run Cytoscape with PathwayCommons PlugIn -->
    <target depends="jar" description="Runs Cytoscape with PathwayCommons Data."
        name="run">
        <copy todir="${plugins.dir}">
            <fileset dir="${jars.dir}">
			  <include name="${project_jar}"/>
			</fileset>
        </copy>
        <java classname="cytoscape.CyMain" classpathref="classpath"
            fork="true" maxmemory="1000M">
		  <arg line="-p plugins"/>
		  <arg line="-p ${cytoscape_plugin_dir}/biopax.jar"/>
		  <arg line="-p ${cytoscape_plugin_dir}/yLayouts.jar"/>
        </java>
    </target>

    <!--  Target to Create PlugIn JAR -->
    <target depends="compile" description="Creates PlugIn JAR" name="jar">

        <!-- Start clean -->
        <delete dir="${jars.dir}"/>
        <mkdir dir="${jars.dir}"/>

        <!-- Unjar Third Party Libs -->
        <mkdir dir="temp"/>
        <unjar dest="${temp.dir}">
            <fileset dir="lib">
                <include name="*.jar"/>
            </fileset>
        </unjar>

        <!--  Create PathwayCommons Jar -->
        <jar destfile="${jars.dir}/${project_jar}">
            <fileset dir="${build.classes}"/>
            <fileset dir="${temp.dir}"/>
        <manifest>
	    	<attribute name="Cytoscape-Plugin" value="org.mskcc.pathway_commons.plugin.PathwayCommonsPlugin"/>
	    </manifest>
        </jar>
        <delete dir="${temp.dir}"/>
    </target>

    <!--  Target to Run CheckStyle on all Source Code -->
    <!--  Uses the Sun Coding Conventions Configuration -->
    <target description="Checks Sun Coding Conventions" name="check">
        <checkstyle config="${config.dir}/sun_checks.xml">
            <fileset dir="${src.dir}/org">
                <include name="**/*.java"/>
            </fileset>
        </checkstyle>
    </target>

    <!--  Target to Run All JUnit Tests -->
    <target depends="compile" description="Runs all JUnit Tests" name="test">
        <delete dir="${junit.dir}"/>
        <mkdir dir="${junit.dir}"/>
        <mkdir dir="${junit.dir}/reports"/>
        <junit printsummary="yes" fork="yes" haltonfailure="yes" dir="${basedir}">
            <formatter type="plain" usefile="false"/>
            <test name="org.mskcc.test.AllTest"/>
            <classpath refid="classpath"/>
        </junit>
    </target>

    <!--  Builds and tests everything -->
    <target depends="jar" description="Builds and tests everything" name="all"/>

</project>
