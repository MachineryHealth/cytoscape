<?xml version = "1.0"?>
<project name = "biomodules" default = "compile" basedir = ".">
    <description>
    This build.xml file compiles the biomodules plug-in.
    </description>

    <!-- Set the global properties for this build -->
    <property name = "src" location = "src"/>
    <property name = "build" location = "build"/>
    <property name = "build.compiler" value = "modern"/>

    <!-- CHANGE THIS TO YOUR CYTOSCAPE PATHS: -->
    <property name = "cytoscape" value="../../../../cytoscape/"/>
    <property name = "cytoscape.plugins" value ="../../../../cytoscape/plugins/core"/>

    <property name = "local.lib" value="lib"/>
    <property name = "jar"  location = "jar"/>
    <property name = "dist" location = "dist"/>
	
    <!-- classpath for compiling -->
    <path id = "classpath_compile">
       <fileset dir = "${cytoscape}">
          <include name = "**/*.jar"/>
       </fileset>
        <fileset dir = "${local.lib}">
          <include name = "**/*.jar"/>
       </fileset>
    </path>

    <!-- prepare target, creates necessary directories for building -->
    <target name = "prepare">
       <!-- Create a time stamp -->
       <tstamp/>
       <!-- Create the build directory used by compile -->
       <mkdir dir = "${build}"/>
    </target>
    
    <!-- compile target -->
    <target name="compile" depends="prepare" description="Compiles biomodules.">
       <javac srcdir="${src}"
              destdir="${build}"
              nowarn="off"
              debug="true"
              debuglevel="source"
              source="1.4"
              optimize="on"
              includeAntRuntime="false"
              deprecation="on">
              <classpath refid="classpath_compile"/>
       </javac>
    </target>

    <!-- clean target -->
    <target name="clean">
       <delete dir="${build}"/>
    </target>

    <!-- jar target -->
    <target name="jar" depends="compile" description="Creates a jar that contains only biomodules classes">
    	<unjar overwrite="Yes" dest = "${build}">
    		<fileset dir = "${local.lib}">
    		  <include name="**/*.jar"/>
    		</fileset>
    	</unjar>
    	<jar destfile = "${jar}/biomodules.jar">
    		<fileset dir = "${build}"/>
    </jar>
    	<copy file="${jar}/biomodules.jar" todir="${cytoscape.plugins}"/>
    	<echo message="biomodules.jar is complete, it is located in ${jar} and in ${cytoscape.plugins}"/> 
    	</target>
	
	<!-- dist target, DOES NOT WORK!!!!-->
	<target name = "dist" depends="compile" description="Makes stand-alone jar of the plug-in for distribution, NOT WORKING">
	 <mkdir dir = "${dist}"/>
     
	 <!-- unjar all of the jars that are in the local library -->
     <unjar dest="${local.lib}/temp">
	  <fileset dir="${local.lib}">
	   <include name="**/*.jar"/>
	  </fileset>
	 </unjar>
		
	 <jar jarfile="${dist}/biomodules.jar"> 	
	 	
	 	<fileset dir="${local.lib}/temp">
	      <include name="**/*.*"/>
	    </fileset>
	 	
	 	<fileset dir="${build}">
	 	  <include name="**/*.*"/>
	 	</fileset>
	 
	 </jar>
	 
	 <delete dir = "${local.lib}/temp"/>
	</target>

    <!-- run target, loads yeast annotations database  -->
    <target name = "run" depends="jar" description = "Runs cytoscape and loads biomodules">
      <java classname = "cytoscape.CyMain" classpathref = "classpath_compile"
          fork = "true" maxmemory = "1g">
          <arg line = "--JLD"/>
          <arg file = "${jar}/biomodules.jar"/>
          <arg line = "--JLD"/>
          <arg file = "${cytoscape.plugins}/core"/>
          <arg file = "--JLD"/>
          <arg file = "${local.lib}/metanode.jar"/>
          <arg line = "-c"/>
      	  <arg line = "-b"/>
      	  <arg line = "../../../../C2.1/source/testData/annotation/manifest"/>
      </java>
    </target>

     <!-- Target to Run JavaDoc -->
    <target name="doc" description="Runs JavaDoc.">
        <javadoc packagenames="biomodules.*" sourcepath="src" source="1.4" destdir="doc"> 
        <link href = "http://java.sun.com/j2se/1.4.2/docs/api/"/>
        <link href = "http://csbi.sourceforge.net/API/"/>
        </javadoc>
    </target>
</project>
