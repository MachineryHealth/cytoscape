<project name = "xmlRpc" default = "compile" basedir = ".">
    <description>
    This build.xml file compiles xmlRpc
    </description>

    <!-- Set the global properties for this build -->
    <property name = "src" location = "src"/>
    <property name = "build" location = "build"/>
    <property name = "build.compiler" value = "modern"/>

    <!-- CHANGE THIS TO YOUR CYTOSCAPE PATHS: -->
   
	<property name = "cytoscape21" value="../../../../C2.1/source"/>
	<property name = "cytoscapeCVS" value ="../../../../cytoscape"/>
	<property name = "cytoscape21.plugins" value ="../../../../C2.1/source/plugins"/>
    <property name = "cytoscapeCVS.plugins" value ="../../../../cytoscape/plugins"/>
		
    <property name = "cytoscape" value = "${cytoscapeCVS}"/>
	<property name = "cytoscape.plugins" value = "${cytoscapeCVS.plugins}"/>
	
	
    <property name = "local.lib" value="lib"/>
    <property name = "jar"  location = "jar"/>
    <property name = "dist" location = "dist"/>
	<property name = "server.class" value="org.isb.xmlrpc.server.MyWebServer"/>
	<property name = "server.args" value = "8081"/>
	
    <!-- classpath for compiling -->
    <path id = "classpath">
        <fileset dir = "${local.lib}">
          <include name = "**/*.jar"/>
       </fileset>
    	   <fileset dir = "${jar}">
    	   	 <include name = "**/*.jar"/>
    	   </fileset>
    </path>

    <!-- prepare target, creates necessary directories for building -->
    <target name = "prepare">
       <!-- Create a time stamp -->
       <tstamp/>
       <!-- Create the build directory used by compile -->
    	<mkdir dir = "${jar}"/>
       <mkdir dir = "${build}"/>
    </target>
    
    <!-- compile target -->
    <target name="compile" depends="prepare" description="Compiles xmlRpc">
       <javac srcdir="${src}"
              destdir="${build}"
              nowarn="off"
              debug="true"
              debuglevel="source"
              source="1.4"
              optimize="on"
              includeAntRuntime="false"
              deprecation="on">
              <classpath refid="classpath"/>
       </javac>
    </target>

    <!-- clean target -->
    <target name="clean">
       <delete dir="${build}"/>
    </target>

    <!-- jar target -->
    <target name="jar" description="Creates a jar that contains only xmlRpc classes">
     <mkdir dir="${jar}"/>
     <jar jarfile="${jar}/xmlrpc.jar">
       <fileset dir="${build}"/>
     </jar>
    </target>
	
	<!-- dist target, DOES NOT WORK!!!!-->
	<target name = "dist" depends="compile" description="Makes stand-alone jar of the plug-in for distribution, NOT WORKING">
	 <mkdir dir = "${dist}"/>
     
	 <!-- unjar all of the jars that are in the local library -->
     <unjar dest="${local.lib}/temp">
	  <fileset dir="${local.lib}">
	   <include name="**/*.jar"/>
	  </fileset>
	 </unjar>
		
	 <jar jarfile="${dist}/xmlrpc.jar"> 	
	 	
	 	<fileset dir="${local.lib}/temp">
	      <include name="**/*.*"/>
	    </fileset>
	 	
	 	<fileset dir="${build}">
	 	  <include name="**/*.*"/>
	 	</fileset>
	 
	 </jar>
	 
	 <delete dir = "${local.lib}/temp"/>
	</target>

	<!-- Run a class MYCLASS (from the ${build} directory) with the command line 'MY ARGS' via:
	             ant run -Dclass=${class} -Dargs='MY ARGS' -->
	<target name="runserver" depends="jar">
	    <echo message="${server.class} ${server.args}"/>
	    <java classname="${server.class}" fork="no" failonerror="no">
	         <classpath refid="classpath"/>
	         <arg line="${server.args}"/>
	    </java>
	</target>
	
	<target name="runtest">
		    <echo message="---------- TESTING ----------"/>
		    <echo message="Calling server.listServices..."/>
		    <java classname="org.apache.xmlrpc.XmlRpcClientLite" fork="no" failonerror="no">
		         <classpath refid="classpath"/>
		    	     <arg line = "http://localhost:${server.args}"/>
		         <arg line="server.listServices"/>
		    </java>
			<echo message="Calling server.listServiceCommands server..."/>
		    <java classname="org.apache.xmlrpc.XmlRpcClientLite" fork="no" failonerror="no">
				  <classpath refid="classpath"/>
				  <arg line = "http://localhost:${server.args}"/>
				  <arg line="server.listServiceCommands"/>
			      <arg line = "server"/>
		    </java>
		    
		    <echo message="Calling server.hasService interactions..."/>
	        <java classname="org.apache.xmlrpc.XmlRpcClientLite" fork="no" failonerror="no">
			      <classpath refid="classpath"/>
				  <arg line = "http://localhost:${server.args}"/>
				  <arg line="server.hasService"/>
				  <arg line = "interactions"/>
		    </java>
		    <echo message="Calling server.listServiceCommands interactions..."/>
				    <java classname="org.apache.xmlrpc.XmlRpcClientLite" fork="no" failonerror="no">
					     <classpath refid="classpath"/>
						 <arg line = "http://localhost:${server.args}"/>
						 <arg line="server.listServiceCommands"/>
						 <arg line = "interactions"/>
				    </java>    
		 	
			<echo message="Calling interactions.addSource org.isb.xmlrpc.handler.interactions.ProlinksInteractionsSource..."/>
	          <java classname="org.apache.xmlrpc.XmlRpcClientLite" fork="no" failonerror="no">
			     <classpath refid="classpath"/>
				 <arg line = "http://localhost:${server.args}"/>
				 <arg line="interactions.addSource"/>
				 <arg line = "org.isb.xmlrpc.handler.interactions.ProlinksInteractionsSource"/>
			  </java>
		
		<echo message="Calling interactions.printDebug"/>
			          <java classname="org.apache.xmlrpc.XmlRpcClientLite" fork="no" failonerror="no">
					     <classpath refid="classpath"/>
						 <arg line = "http://localhost:${server.args}"/>
						 <arg line="interactions.printDebug"/>
					  </java>
		
		      <echo message="Calling interactions.getSources ..."/>
			          <java classname="org.apache.xmlrpc.XmlRpcClientLite" fork="no" failonerror="no">
					     <classpath refid="classpath"/>
						 <arg line = "http://localhost:${server.args}"/>
						 <arg line="interactions.getSources"/>
					  </java>
		
		<echo message="Calling interactions.getSupportedSpecies ..."/>
					          <java classname="org.apache.xmlrpc.XmlRpcClientLite" fork="no" failonerror="no">
							     <classpath refid="classpath"/>
								 <arg line = "http://localhost:${server.args}"/>
								 <arg line="interactions.getSupportedSpecies"/>
							  </java>
		
		<echo message="Calling interactions.test ..."/>
							          <java classname="org.apache.xmlrpc.XmlRpcClientLite" fork="no" failonerror="no">
									     <classpath refid="classpath"/>
										 <arg line = "http://localhost:${server.args}"/>
										 <arg line="interactions.test"/>
									  </java>
		
		<echo message="Calling interactions.getVersion org.isb.xmlrpc.handler.interactions.ProlinksInteractionsSource ..."/>
							          <java classname="org.apache.xmlrpc.XmlRpcClientLite" fork="no" failonerror="no">
									     <classpath refid="classpath"/>
										 <arg line = "http://localhost:${server.args}"/>
										 <arg line="interactions.getVersion org.isb.xmlrpc.handler.interactions.ProlinksInteractionsSource"/>
									  </java>
		
		
		
		<echo message="Calling interactions.removeSource org.isb.xmlrpc.handler.interactions.ProlinksInteractionsSource..."/>
			          <java classname="org.apache.xmlrpc.XmlRpcClientLite" fork="no" failonerror="no">
					     <classpath refid="classpath"/>
						 <arg line = "http://localhost:${server.args}"/>
						 <arg line="interactions.removeSource"/>
						 <arg line = "org.isb.xmlrpc.handler.interactions.ProlinksInteractionsSource"/>
					  </java>
				
				      <echo message="Calling interactions.getSources ..."/>
					          <java classname="org.apache.xmlrpc.XmlRpcClientLite" fork="no" failonerror="no">
							     <classpath refid="classpath"/>
								 <arg line = "http://localhost:${server.args}"/>
								 <arg line="interactions.getSources"/>
							  </java>
		
		    <echo message="Calling server.shutdown..."/>
			<java classname="org.apache.xmlrpc.XmlRpcClientLite" fork="no" failonerror="no">
				 <classpath refid="classpath"/>
				 <arg line = "http://localhost:${server.args}"/>
			     <arg line="server.shutdown"/>
			</java>
		    <echo message = "---------- Done testing ----------"/>
	</target>
    
	<!-- Target to Run JavaDoc -->
    <target name="doc" description="Runs JavaDoc.">
        <javadoc packagenames="org.*" sourcepath="src" source="1.4" destdir="doc"> 
        <link href = "http://java.sun.com/j2se/1.4.2/docs/api/"/>
        </javadoc>
    </target>

</project>
