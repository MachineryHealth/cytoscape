package csplugins.isb.dreiss.httpdata.client;

import java.util.*;
import java.io.IOException;
import org.apache.xmlrpc.*;

import csplugins.isb.dreiss.httpdata.xmlrpc.*;

/**
 * Class InteractionClient automatically generated by
 * csplugins.isb.dreiss.httpdata.xmlrpc.WriteXmlRpcClient based on class
 * DBInteractionHandler by dreiss (dreiss@systemsbiology.org)
 **/

public class InteractionClient extends AuthenticatedDataClient {
   public InteractionClient( String url ) throws XmlRpcException,
						 java.net.MalformedURLException {
      super( url );
      SERVICE_NAME = "interaction";
   }

   public boolean addSource( String arg0, String arg1 ) throws XmlRpcException, IOException {
      Object out = call( SERVICE_NAME + ".addSource", arg0, arg1 );
      return ( (Boolean) out ).booleanValue();
   }

   public boolean hasSource( String arg0 ) throws XmlRpcException, IOException {
      Object out = call( SERVICE_NAME + ".hasSource", arg0 );
      return ( (Boolean) out ).booleanValue();
   }

   public Hashtable getSources( int arg0 ) throws XmlRpcException, IOException {
      Object out = call( SERVICE_NAME + ".getSources", new Integer( arg0 ) );
      return (Hashtable) out;
   }

   public boolean put( String arg0, String arg1, String arg2, double arg3, String arg4, String arg5 ) throws XmlRpcException, IOException {
      Object out = call( SERVICE_NAME + ".put", arg0, arg1, arg2, new Double( arg3 ), arg4, arg5 );
      return ( (Boolean) out ).booleanValue();
   }

   public boolean put( String arg0, String arg1, String arg2, String arg3, String arg4 ) throws XmlRpcException, IOException {
      Object out = call( SERVICE_NAME + ".put", arg0, arg1, arg2, arg3, arg4 );
      return ( (Boolean) out ).booleanValue();
   }

   public boolean put( String arg0, String arg1, String arg2, String arg3 ) throws XmlRpcException, IOException {
      Object out = call( SERVICE_NAME + ".put", arg0, arg1, arg2, arg3 );
      return ( (Boolean) out ).booleanValue();
   }

   public boolean put( String arg0, String arg1, String arg2, double arg3, String arg4, String arg5, String arg6 ) throws XmlRpcException, IOException {
      Object out = call( SERVICE_NAME + ".put", arg0, arg1, arg2, new Double( arg3 ), arg4, arg5, arg6 );
      return ( (Boolean) out ).booleanValue();
   }

   public boolean put( String arg0, String arg1, String arg2, double arg3, String arg4 ) throws XmlRpcException, IOException {
      Object out = call( SERVICE_NAME + ".put", arg0, arg1, arg2, new Double( arg3 ), arg4 );
      return ( (Boolean) out ).booleanValue();
   }

   public boolean hasInteraction( String arg0, String arg1, String arg2 ) throws XmlRpcException, IOException {
      Object out = call( SERVICE_NAME + ".hasInteraction", arg0, arg1, arg2 );
      return ( (Boolean) out ).booleanValue();
   }

   public Vector getAllInteractors( String arg0, String arg1, String arg2 ) throws XmlRpcException, IOException {
      Object out = call( SERVICE_NAME + ".getAllInteractors", arg0, arg1, arg2 );
      return (Vector) out;
   }

   public Vector getAllInteractors( String arg0, String arg1, String arg2, boolean arg3 ) throws XmlRpcException, IOException {
      Object out = call( SERVICE_NAME + ".getAllInteractors", arg0, arg1, arg2, new Boolean( arg3 ) );
      return (Vector) out;
   }

   public Vector getAllInteractions( String arg0, String arg1, String arg2 ) throws XmlRpcException, IOException {
      Object out = call( SERVICE_NAME + ".getAllInteractions", arg0, arg1, arg2 );
      return (Vector) out;
   }

   public Vector getAllInteractions( String arg0, String arg1, String arg2, boolean arg3 ) throws XmlRpcException, IOException {
      Object out = call( SERVICE_NAME + ".getAllInteractions", arg0, arg1, arg2, new Boolean( arg3 ) );
      return (Vector) out;
   }

   public Vector getAllInteractionsAndInfo( String arg0, String arg1, String arg2 ) throws XmlRpcException, IOException {
      Object out = call( SERVICE_NAME + ".getAllInteractionsAndInfo", arg0, arg1, arg2 );
      return (Vector) out;
   }

   public Vector getAllInteractionsAndInfo( String arg0, String arg1, String arg2, boolean arg3 ) throws XmlRpcException, IOException {
      Object out = call( SERVICE_NAME + ".getAllInteractionsAndInfo", arg0, arg1, arg2, new Boolean( arg3 ) );
      return (Vector) out;
   }

   public Vector getAllInteractionsAndInfo( String arg0, String arg1, String arg2, String arg3, boolean arg4 ) throws XmlRpcException, IOException {
      Object out = call( SERVICE_NAME + ".getAllInteractionsAndInfo", arg0, arg1, arg2, arg3, new Boolean( arg4 ) );
      return (Vector) out;
   }

   public void test() throws Exception { };

   public static void main( String args[] ) {
      try {
	 InteractionClient client = new InteractionClient( args[ 0 ] );

	 //... do your stuff here...

      } catch( Exception e ) { e.printStackTrace(); }
   }
}

