package csplugins.isb.dreiss.httpdata.client;

import java.util.*;
import java.io.IOException;
import org.apache.xmlrpc.*;

import csplugins.isb.dreiss.httpdata.xmlrpc.*;

/**
 * Class SequenceClient automatically generated by
 * csplugins.isb.dreiss.httpdata.xmlrpc.WriteXmlRpcClient based on class
 * SequenceHandler by dreiss (dreiss@systemsbiology.org)
 **/

public class SequenceClient extends AuthenticatedDataClient {
   public SequenceClient( String url ) throws XmlRpcException,
						     java.net.MalformedURLException {
      super( url );
      SERVICE_NAME = "sequence";
   }

   public boolean put( String arg0, String arg1, String arg2 ) throws Exception {
      Object out = call( SERVICE_NAME + ".put", arg0, arg1, arg2 );
      return ( (Boolean) out ).booleanValue();
   }

   public boolean put( String arg0, String arg1, String arg2, String arg3 ) throws Exception {
      Object out = call( SERVICE_NAME + ".put", arg0, arg1, arg2, arg3 );
      return ( (Boolean) out ).booleanValue();
   }

   public boolean contains( String arg0, String arg1, String arg2 ) throws Exception {
      Object out = call( SERVICE_NAME + ".contains", arg0, arg1, arg2 );
      return ( (Boolean) out ).booleanValue();
   }

   public boolean contains( String arg0, String arg1 ) throws Exception {
      Object out = call( SERVICE_NAME + ".contains", arg0, arg1 );
      return ( (Boolean) out ).booleanValue();
   }

   public String get( String arg0, String arg1 ) throws Exception {
      Object out = call( SERVICE_NAME + ".get", arg0, arg1 );
      return (String) out;
   }

   public String get( String arg0, String arg1, String arg2 ) throws Exception {
      Object out = call( SERVICE_NAME + ".get", arg0, arg1, arg2 );
      return (String) out;
   }

   public Vector get( Vector arg0, String arg1, String arg2 ) throws Exception {
      Object out = call( SERVICE_NAME + ".get", arg0, arg1, arg2 );
      return (Vector) out;
   }

   public Vector get( Vector arg0, String arg1 ) throws Exception {
      Object out = call( SERVICE_NAME + ".get", arg0, arg1 );
      return (Vector) out;
   }

   public Vector get( Vector arg0, Vector arg1, String arg2 ) throws Exception {
      Object out = call( SERVICE_NAME + ".get", arg0, arg1, arg2 );
      return (Vector) out;
   }

   public Vector get( Vector arg0, Vector arg1 ) throws Exception {
      Object out = call( SERVICE_NAME + ".get", arg0, arg1 );
      return (Vector) out;
   }

   public boolean delete( String arg0, String arg1 ) throws Exception {
      Object out = call( SERVICE_NAME + ".delete", arg0, arg1 );
      return ( (Boolean) out ).booleanValue();
   }

   public boolean delete( String arg0, String arg1, String arg2 ) throws Exception {
      Object out = call( SERVICE_NAME + ".delete", arg0, arg1, arg2 );
      return ( (Boolean) out ).booleanValue();
   }

   public void test() throws Exception {
      put( "seq1", "yeast", 
	   "msdnddievesdeeqprfqsaadkrahhnalerkrrdhikdsfhslrdsvpslqgekasr" +
	   "aqildkateyiqymrrknhthqqdiddlkrqnalleqqvralekarssaqlqtnypssdn" +
	   "slytnakgstisafdggsdsssesepeepqsrkklrmeas" );
      System.out.println( "CONTAINS = " + contains( "seq1", "yeast" ) );
      System.out.println( "SEQ = " + get( "seq1", "yeast" ) );
   }

   public static void main( String args[] ) {
      try {
	 SequenceClient client = new SequenceClient( args[ 0 ] );
	 client.test();
      } catch( Exception e ) { e.printStackTrace(); }
   }
}

      
