<project name="mdnodes" default="mdnodes" basedir=".">

  <!-- =================================================================== -->
  <!-- Initialization target                                               -->
  <!-- =================================================================== -->
  <target name="init-mdnodes">
    <tstamp/>
    <property name="mdnodes.Name" value="mdnodes"/>
    <property name="mdnodes.name" value="mdnodes"/>
    <property name="mdnodes.version" value="0.1"/>
    <property name="mdnodes.year" value="200"/>

    <echo message="Building ${mdnodes.name} version ${mdnodes.version}."/>

    <!-- Inheritable properties -->
    <property name="debug" value="on"/>
    <property name="optimize" value="off"/>
    <property name="deprecation" value="on"/>
    <property name="nowarn" value="true"/>
    <property name="fork" value="false"/>
    <property name="mdnodes.root.dir" value="."/>
    <property name="mdnodes.lib.dir" value="${mdnodes.root.dir}/lib"/>
    <property name="cytoscape.lib.dir" value="${mdnodes.root.dir}/../../../../cytoscape/lib"/>
    <property name="cytoscape.plugin.dir" value="${mdnodes.root.dir}/../../../../cytoscape/plugins"/>
    <path id="project.class.path">
      <pathelement path="${java.class.path}/"/>
    </path>

    <!-- Define the directories -->
    <property name="mdnodes.root.dir" value="./"/>
    <property name="mdnodes.src.dir" value="${mdnodes.root.dir}/src"/>
    <property name="mdnodes.classes.dir" value="${mdnodes.root.dir}/classes"/>
    <property name="mdnodes.javadoc.dir" value="${javadoc.dir}/mdnodes"/>
    <property name="mdnodes.resources.dir" value="${mdnodes.root.dir}/resources"/>
    <property name="mdnodes.manifest.dir" value="${mdnodes.root.dir}/manifest"/>
    <property name="mdnodes.packages" value="mdnodes.*"/>
    <!-- Subdirectory for test reports -->
    <property name="mdnodes.tests.reports.dir" value="${mdnodes.root.dir}/reports/tests" />
    <property name="cytoscape.lib" value="../../cytoscape/lib" />

    <!-- Define the condition for compilation -->
    <property name="cytoscape.jar" value="${mdnodes.lib.dir}/cytoscape.jar"/>
    <property name="colt.jar" value="${mdnodes.lib.dir}/colt.jar"/>
    

    <condition property="cytoscape.present">
      <and> 
	  		<available file="${cytoscape.jar}"/> 
				<available file="${colt.jar}"/> 
		  </and>
    </condition>

    <!-- Define excludes for mdnodes compile and javadoc -->
    <property name="mdnodes.excludes" value="**/notyet/*"/>
    <property name="mdnodes.tests.excludes" value="**/notyet/*"/>
    <property name="mdnodes.packages.excludes" value="**.test.*,**.notyet.*"/>

    <path id="mdnodes.project.class.path">
      <pathelement location="${mdnodes.classes.dir}"/>
      <pathelement location="${cytoscape.lib.dir}/colt.jar"/>
      <pathelement location="${cytoscape.lib.dir}/cytoscape.jar"/>
      <pathelement location="${cytoscape.lib.dir}/y.jar"/>
      <pathelement location="${cytoscape.lib.dir}/giny.jar"/>
      <pathelement location="${cytoscape.lib.dir}/phoebe.jar"/>
      <pathelement location="${cytoscape.lib.dir}/coltginy.jar"/>
      <pathelement location="${cytoscape.lib.dir}/piccolo.jar"/>
       <pathelement location="${cytoscape.lib.dir}/piccolox.jar"/>
      <pathelement path="${project.class.path}/"/>
    </path>

    <filter token="year" value="${year}"/>
    <filter token="version" value="${version}"/>
    <filter token="date" value="${TODAY}"/>

  </target>

  <!-- =================================================================== -->
  <!-- Compiles the mdnodes project                                           -->
  <!-- =================================================================== -->
  <target name="compile-mdnodes" depends="init-mdnodes"  >

   <echo message=" COMPILE mdnodes "/>

    <mkdir dir="${mdnodes.classes.dir}"/>
    <javac srcdir="${mdnodes.src.dir}"
           excludes="${mdnodes.excludes}"
           classpathref="mdnodes.project.class.path"
           destdir="${mdnodes.classes.dir}"
           debug="${debug}"
           nowarn="${nowarn}"
           deprecation="${deprecation}" 
           optimize="${optimize}"
           fork="${fork}"/>
  </target>

  <!-- =================================================================== -->
  <!-- Creates the mdnodes.jar file                                           -->
  <!-- =================================================================== -->
  <target name="mdnodes" depends="compile-mdnodes"  >
    <jar destfile="mdnodes.jar" manifest="${mdnodes.manifest.dir}/mdnodes.manifest">
      <fileset
        dir="${mdnodes.classes.dir}"
        includes="**"/>
      <fileset
        dir="${mdnodes.root.dir}/lib"
        includes="resources/**"/>
      <fileset 
        dir="${mdnodes.root.dir}/images"/>
    </jar>
    <copy todir="${mdnodes.lib.dir}" file="mdnodes.jar"/>
    <copy todir="${cytoscape.plugin.dir}" file="mdnodes.jar"/>
  </target>

  <!-- =================================================================== -->
  <!-- Compiles the mdnodes tests                                             -->
  <!-- =================================================================== -->
  <target name="compile-tests" depends="mdnodes"  >
    <mkdir dir="${mdnodes.classes.dir}"/>
    <javac srcdir="${mdnodes.src.dir}"
           includes="**/test/*"
           excludes="${mdnodes.tests.excludes}"
           classpathref="mdnodes.project.class.path"
           destdir="${mdnodes.classes.dir}"
           debug="${debug}"
           deprecation="${deprecation}" 
           optimize="${optimize}"
           fork="${fork}"/>
  </target>

  <!-- =================================================================== -->
  <!-- Creates the mdnodes-tests.jar file                                     -->
  <!-- =================================================================== -->
  <target name="tests" depends="compile-tests"  >
    <jar jarfile="mdnodes-tests.jar"
         basedir="${mdnodes.classes.dir}"
         includes="**/test/*"/>
  </target>

  <!-- =================================================================== -->
  <!-- Build all jars                                                      -->
  <!-- =================================================================== -->
  <target name="all" depends="mdnodes"/>

   <!-- =================================================================== -->
  <!-- Run the Plugin                                                      -->
  <!-- =================================================================== -->
  <target name="run" depends="mdnodes" >
     
     <java classname="cytoscape.cytoscape" 
           classpathref="mdnodes.project.class.path"
           fork="true"/>
           <arg line = "-y giny"/>
           <arg line = "--JLD"/>
           <arg line = "${mdnodes.lib.dir}/mdnodes.jar"/>
           

  </target>



  <!-- =================================================================== -->
  <!-- Runs the tests in mdnodes-tests.jar                                    -->
  <!-- =================================================================== -->
  <target name="runtests" depends="tests"  >
    <mkdir dir="${mdnodes.tests.reports.dir}"/>
    <junit
       printsummary="yes"
       haltonfailure="no"
       dir="${mdnodes.classes.dir}"
       maxmemory="1G"
    >
      <formatter type="plain" usefile="true" />
      <classpath refid="mdnodes.project.class.path"/>
      <!-- The junit task doesn't support 'if' so we test for JUnit here -->
      <batchtest fork="yes" todir="${mdnodes.tests.reports.dir}" if="junit.present">
        <fileset
           dir="${mdnodes.classes.dir}"
           includes="**/test/*"
           excludes="${mdnodes.tests.excludes}"
        />
      </batchtest>
    </junit>
  </target>

  <!-- =================================================================== -->
  <!-- Creates the API documentation                                       -->
  <!-- =================================================================== -->
  <target name="docs" depends="init-mdnodes" >
    <mkdir dir="${mdnodes.javadoc.dir}"/>
    <javadoc packagenames="${mdnodes.packages}"
             excludepackagenames="${mdnodes.packages.excludes}"
             sourcepath="${mdnodes.src.dir}"
             destdir="${mdnodes.javadoc.dir}"
             classpathref="mdnodes.project.class.path"
             author="true"
             version="true"
             use="true"
             splitindex="true"
             noindex="false"
             windowtitle="${mdnodes.Name} API"
             doctitle="${mdnodes.Name}"
    />
  </target>
 
  <!-- =================================================================== -->
  <!-- Clean up, get back to original state                                -->
  <!-- =================================================================== -->
  <target name="clean" depends="init-mdnodes">
    <delete dir="${mdnodes.classes.dir}"/>
    <delete file="mdnodes.jar"/>
    <delete file="mdnodes-tests.jar"/>
  </target>

</project>

<!-- End of file -->
