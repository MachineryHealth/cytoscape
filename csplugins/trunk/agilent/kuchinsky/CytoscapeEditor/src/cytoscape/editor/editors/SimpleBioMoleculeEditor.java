/*
 * Created on Jul 16, 2005
 *
 */
package cytoscape.editor.editors;

import java.util.List;

import javax.swing.ImageIcon;

import cytoscape.Cytoscape;
import cytoscape.editor.event.PaletteNetworkEditEventHandler;
import cytoscape.editor.impl.ShapePalette;


/**
 * An example "BioPAX-like" editor that extends the basic Cytoscape editor and is based upon
 * a drag-and-drop and palette framework into which developers plug in semantics. The framework consists of
 * <ul> 
 * <li> a palette, from which the user drags and drops shapes onto the canvas
 * <li> an extensible shape class for the palette, 
 * <li> a drawing canvas upon which shapes are dropped, and
 * <li> event handlers which respond to drop events generated by the canvas. 
 * </ul>
 * <p>
 * The dropping of shapes onto the canvas results in the addition of nodes and edges to the current Cytoscape 
 * network, as defined by the behavior of the event handler that responds to the drop events.  In the 
 * simple "BioPAX-like" editor, there are node types for proteins, catalysis, small molecules, and biochemical 
 * reactions, as well as a directed edge type.
 * <p>
 * This functionality is not available in Cytoscape 2.2
 *
 * @author Allan Kuchinsky
 * @version 1.0
 * @see PaletteNetworkEditEventHandler
 * 
 */
public class SimpleBioMoleculeEditor extends BasicCytoscapeEditor {


	private ShapePalette shapePalette;
	private static final String ICONS_REL_LOC = "images/";
	
	public SimpleBioMoleculeEditor() {
		super();		
	}
	
	/**
	 * specialized initialization code for editor, called by
	 * CytoscapeEditorManager when a new editor is built.
	 * @param args an arbitrary list of arguments passed to initialization routine.  Not used in this editor
	 */
	public void initializeControls(List args)
	{
		
		shapePalette = new ShapePalette();

		ImageIcon img = new ImageIcon(getClass().getResource(
		ICONS_REL_LOC + "edgeIcon1.gif"));
		shapePalette.addShape("EdgeType", "DirectedEdge", img, "Directed Edge");		
		
		
		img = new ImageIcon(getClass().getResource(
				ICONS_REL_LOC + "BioPAX_protein.gif"));
		shapePalette.addShape("BIOPAX_NODE_TYPE", "protein", img, "Protein");

		img = new ImageIcon(getClass().getResource(
				ICONS_REL_LOC + "BioPAX_catalysis.gif"));
		shapePalette.addShape("BIOPAX_NODE_TYPE", "catalysis", img, "Catalysis");

		img = new ImageIcon(getClass().getResource
				(ICONS_REL_LOC + "BioPAX_small_molecule.gif"));
		shapePalette.addShape("BIOPAX_NODE_TYPE", "smallMolecule", img, "Small Molecule");

		img = new ImageIcon(getClass().getResource
				(ICONS_REL_LOC + "BioPAX_biochemicalReaction.gif"));
		shapePalette.addShape("BIOPAX_NODE_TYPE", "biochemicalReaction",
				img, "Biochemical Reaction");

		shapePalette.showPalette();
		
		super.initializeControls(null);

	}

	/**
	 * sets controls invisible when editor type is switched
	 * @param args args an arbitrary list of arguments (not used in this editor)
	 */
	public void disableControls (List args)
	{
		super.disableControls(args);
		shapePalette.setVisible(false);	
	}
	
	/**
	 * sets controls visible when editor type is switched back to this editor
	 * @param args args an arbitrary list of arguments (not used in this editor)	 * 
	 */
	public void enableControls (List args)
	{
		super.enableControls(args);
		shapePalette.setVisible(true);
		
	}	
	
}