<?xml version="1.0"?>
<!-- build.xml - Build file for Sample Cytoscape Plugin -->
<project name="SelectShortestPathsPlugin" default="jar" basedir=".">
	
 	<!-- The directory containing source code -->
  	<property name="src.dir" value="src"/>

  	<!-- Temporary build directories -->
 	<property name="build.dir" value="build"/>
  	<property name="build.classes.dir" value="${build.dir}/classes"/>

	<property name="pluginlib.dir" value="lib"/>

  	<property name="root.dir" value="."/>
	<property name="jarlib.dir" value="${root.dir}/lib"/>
 	<property name="build.dir" value="${root.dir}/build"/>
	<property name="apidocs.dir" location="${build.dir}/api-docs" />
	<property name="cytoscape.dir" value="../cytoscape-2.6"/>
	<property name="cytoscape.lib.dir" value = "${cytoscape.dir}/lib"/>
	<property name="cytoscape.plugins.dir" value = "${cytoscape.dir}/plugins"/>
	<property name="plugin.name" value="${ant.project.name}" />
	<property name="plugin.jar.name" value="${ant.project.name}.jar" />
	<property name="plugin.loc" value = "${build.dir}/${plugin.jar.name}"/>


	<!-- Global "magic" property for <javac> -->
	<property name="build.compiler" value="modern"/>
	
	<!-- Classpath with all lib JAR Files and all Cytoscape Core classes -->
	<path id="plugin.classpath">
		<fileset dir="${jarlib.dir}">
			<include name="*.jar"/>
		</fileset>
		
		<fileset dir="${cytoscape.lib.dir}">
			<include name="*.jar"/>
		</fileset>
		<fileset dir="${cytoscape.dir}">
			<include name="*.jar"/>
		</fileset>
	</path>

  	<!-- Target to create the build directories prior to compilation -->
  	<target name="prepare">
    		<mkdir dir="${build.dir}"/>
    		<mkdir dir="${build.classes.dir}"/>
		<!-- <mkdir dir="${test.dir}" />
		<mkdir dir="${test.data.dir}" />
		<mkdir dir="${test.reports.dir}" /> -->
		<echo message="Finished prepare." />
  	</target>

	<!--  Target to clean out all directories -->
  	<target name="clean" description="Removes all generated files.">
    		<delete dir="${build.classes.dir}"/>
		<delete dir="${plugin.loc}" />
		<!-- <delete dir="${test.dir}" /> -->
  	</target>
	
	<target name="clean-docs"
	        description="Removes all generated jars, test, and class files. Leaves API docs.">
		<delete dir="${apidocs.dir}" />
	</target>

	<!--  Target to compile all Plug In Code -->
  	<target name="compile" depends="prepare" 
		description="Compiles all PlugIn source code.">
                <javac debug="Yes" srcdir="${src.dir}" destdir="${build.classes.dir}">
			<classpath refid="plugin.classpath"/>
		</javac>
		<echo message="Finished compile." />
	</target>
  	
	<target name="add-data-files">
	   <!-- nothing to add now. -->
	</target>

	<!--  Create PlugIn Jar File (Unobfuscated) -->
   	<target name="jar"
	        depends="clean,compile,add-data-files"
		description="Compile code and create plugin ${plugin.name} jar.">
           <unjar dest="${build.dir}">
                <fileset dir="${jarlib.dir}">
	      	     <include name="*.jar"/>
                </fileset>
           </unjar>

	   <jar destfile="${plugin.loc}">
	   			<fileset dir="${build.classes.dir}">
 				<!-- skip items from the test directory: -->
 				<!-- <exclude name="${test.subdir}/" /> -->
 			</fileset>
	    </jar>

  	    <antcall target="release-plugin-to-cytoscape" />
            <echo message="${plugin.loc} is now complete." />
	</target>

	<!--  Target to create the javadoc information -->
	<target name="doc" 
	        depends="clean-docs"> 
		<mkdir dir="${apidocs.dir}"/>
		<javadoc destdir="${apidocs.dir}" 
		         classpathref="plugin.classpath"
			 Windowtitle="${plugin.name} API Docs"
		         header="${plugin.name}"
		         Private="yes"> 
			<fileset dir="${src.dir}" defaultexcludes="yes"> 
				<exclude name="${test.subdir}/**" />
				<include name="**/*.java" />
			</fileset>
			<doctitle>${plugin.name} API Docs</doctitle>
		</javadoc> 

	</target>

	<target name="release-plugin-to-cytoscape"  description="copy plugin jar to cytoscape, when desired (based on repository.release property).">
		<copy file="${plugin.loc}" todir="${cytoscape.plugins.dir}/extras" preservelastmodified="true" />
  	        <echo message="Copied ${plugin.jar.name} to ${cytoscape.plugins.dir}/extras/${plugin.jar.name}." />
	</target>

</project>
