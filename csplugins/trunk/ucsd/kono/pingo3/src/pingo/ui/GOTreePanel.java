/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * GOTreePanel.java
 *
 * Created on 2010/11/23, 15:22:41
 */

package pingo.ui;

import java.awt.Window;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.IOException;
import java.net.URL;
import java.text.ParseException;
import java.util.Map;
import java.util.SortedSet;
import java.util.TreeSet;

import javax.swing.table.DefaultTableModel;

/**
 * 
 */
public class GOTreePanel extends javax.swing.JPanel {

	private DefaultTableModel model;

	private final IndexedTermModel indexer;

	private final Window parent;

	private String terms = null;

	/**
	 * Creates new form GOTreePanel
	 * 
	 * @throws IOException
	 */
	public GOTreePanel(Window parent, final URL ontologySource) throws IOException {
		this.parent = parent;
		initComponents();
		this.indexer = new IndexedTermModel(ontologySource);

		// Setup table
		this.searchResultTable.getColumnModel().setColumnSelectionAllowed(false);
		this.searchResultTable.getTableHeader().setReorderingAllowed(false);
	}

	public String getTerms() {
		return terms;
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed"
	// <editor-fold defaultstate="collapsed"
	// desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		queryPanel = new javax.swing.JPanel();
		titleLabel = new javax.swing.JLabel();
		queryTextField = new javax.swing.JTextField();
		searchButton = new javax.swing.JButton();
		searchResultPanel = new javax.swing.JPanel();
		searchResultScrollPane = new javax.swing.JScrollPane();
		searchResultTable = new javax.swing.JTable();
		buttonPanel = new javax.swing.JPanel();
		addButton = new javax.swing.JButton();
		selectButton = new javax.swing.JButton();
		unselectButton = new javax.swing.JButton();

		queryPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

		titleLabel.setFont(new java.awt.Font("SansSerif", 0, 14));
		titleLabel.setText("Search GO Categories");

		queryTextField.setText("Enter search keyword...");

		searchButton.setText("Search");
		searchButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				searchButtonActionPerformed(evt);
			}
		});

		org.jdesktop.layout.GroupLayout queryPanelLayout = new org.jdesktop.layout.GroupLayout(queryPanel);
		queryPanel.setLayout(queryPanelLayout);
		queryPanelLayout.setHorizontalGroup(queryPanelLayout.createParallelGroup(
				org.jdesktop.layout.GroupLayout.LEADING).add(
				queryPanelLayout
						.createSequentialGroup()
						.addContainerGap()
						.add(queryPanelLayout
								.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
								.add(queryPanelLayout
										.createSequentialGroup()
										.add(queryTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 359,
												Short.MAX_VALUE)
										.addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED).add(searchButton))
								.add(titleLabel)).addContainerGap()));
		queryPanelLayout.setVerticalGroup(queryPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
				.add(queryPanelLayout
						.createSequentialGroup()
						.addContainerGap()
						.add(titleLabel)
						.addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
						.add(queryPanelLayout
								.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
								.add(queryTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
										org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
										org.jdesktop.layout.GroupLayout.PREFERRED_SIZE).add(searchButton))
						.addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

		searchResultScrollPane.setViewportView(searchResultTable);

		buttonPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

		addButton.setText("Add");
		addButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				addButtonActionPerformed(evt);
			}
		});

		selectButton.setText("Select All");
		selectButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				selectButtonActionPerformed(evt);
			}
		});

		unselectButton.setText("Unselect All");
		unselectButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				unselectButtonActionPerformed(evt);
			}
		});

		org.jdesktop.layout.GroupLayout buttonPanelLayout = new org.jdesktop.layout.GroupLayout(buttonPanel);
		buttonPanel.setLayout(buttonPanelLayout);
		buttonPanelLayout.setHorizontalGroup(buttonPanelLayout.createParallelGroup(
				org.jdesktop.layout.GroupLayout.LEADING).add(
				org.jdesktop.layout.GroupLayout.TRAILING,
				buttonPanelLayout.createSequentialGroup().addContainerGap().add(selectButton)
						.addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED).add(unselectButton)
						.addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 160, Short.MAX_VALUE).add(addButton)
						.addContainerGap()));
		buttonPanelLayout.setVerticalGroup(buttonPanelLayout.createParallelGroup(
				org.jdesktop.layout.GroupLayout.LEADING).add(
				org.jdesktop.layout.GroupLayout.TRAILING,
				buttonPanelLayout
						.createSequentialGroup()
						.addContainerGap(17, Short.MAX_VALUE)
						.add(buttonPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
								.add(addButton).add(selectButton).add(unselectButton)).addContainerGap()));

		org.jdesktop.layout.GroupLayout searchResultPanelLayout = new org.jdesktop.layout.GroupLayout(searchResultPanel);
		searchResultPanel.setLayout(searchResultPanelLayout);
		searchResultPanelLayout
				.setHorizontalGroup(searchResultPanelLayout
						.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
						.add(buttonPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
								org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.add(searchResultPanelLayout
								.createSequentialGroup()
								.add(20, 20, 20)
								.add(searchResultScrollPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 454,
										Short.MAX_VALUE).add(20, 20, 20)));
		searchResultPanelLayout.setVerticalGroup(searchResultPanelLayout.createParallelGroup(
				org.jdesktop.layout.GroupLayout.LEADING)
				.add(org.jdesktop.layout.GroupLayout.TRAILING,
						searchResultPanelLayout
								.createSequentialGroup()
								.addContainerGap()
								.add(searchResultScrollPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 377,
										Short.MAX_VALUE)
								.add(18, 18, 18)
								.add(buttonPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 59,
										org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)));

		org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
		this.setLayout(layout);
		layout.setHorizontalGroup(layout
				.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
				.add(queryPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
						org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
				.add(searchResultPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
						org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));
		layout.setVerticalGroup(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING).add(
				layout.createSequentialGroup()
						.add(queryPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
								org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
								org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
						.add(searchResultPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
								org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
	}// </editor-fold>//GEN-END:initComponents


	private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_searchButtonActionPerformed

		Map<String, String> result = null;
		try {
			result = this.indexer.query(this.queryTextField.getText());
		} catch (org.apache.lucene.queryParser.ParseException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		} catch (IOException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		

		final Object[][] data = new Object[result.size()][];
		int i = 0;
		final SortedSet<String> sortedKeys = new TreeSet<String>(result.keySet());
		for (String key : sortedKeys) {
			final Object[] row = new Object[3];
			row[0] = false;
			row[1] = key;
			row[2] = result.get(key);
			data[i] = row;
			i++;
		}

		model = new ResultTableModel(data);
		final ResultTableSortFilterModel sorter = new ResultTableSortFilterModel(model);
		searchResultTable.setModel(sorter);
		searchResultTable.setCellSelectionEnabled(true);
		searchResultTable.repaint();
		System.out.println("##### Found: " + result.size());

		// Set column appearance
		searchResultTable.getColumnModel().getColumn(0).setMaxWidth(50);
		searchResultTable.getColumnModel().getColumn(0).setResizable(false);
		searchResultTable.getColumnModel().getColumn(1).setMaxWidth(70);
		searchResultTable.getColumnModel().getColumn(1).setResizable(false);
		searchResultTable.getColumnModel().getColumn(2).setPreferredWidth(550);

		searchResultTable.getTableHeader().addMouseListener(new MouseAdapter() {
			public void mouseClicked(MouseEvent e) {
				if (e.getClickCount() < 2)
					return;
				int tableColumn = searchResultTable.columnAtPoint(e.getPoint());
				int modelColumn = searchResultTable.convertColumnIndexToModel(tableColumn);
				sorter.sort(modelColumn);
			}
		});

	}// GEN-LAST:event_searchButtonActionPerformed

	private void selectButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_selectButtonActionPerformed
		final int rowCount = model.getRowCount();
		for (int i = 0; i < rowCount; i++) {
			model.setValueAt(true, i, 0);
		}
		repaint();
	}// GEN-LAST:event_selectButtonActionPerformed

	private void unselectButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_unselectButtonActionPerformed
		final int rowCount = model.getRowCount();
		for (int i = 0; i < rowCount; i++) {
			model.setValueAt(false, i, 0);
		}
		repaint();
	}// GEN-LAST:event_unselectButtonActionPerformed

	private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_addButtonActionPerformed
		parent.setVisible(false);
		final int rowCount = model.getRowCount();
		final StringBuilder builder = new StringBuilder();

		for (int i = 0; i < rowCount; i++) {
			Boolean val = (Boolean) model.getValueAt(i, 0);
			if (val)
				builder.append(model.getValueAt(i, 1) + " ");
		}
		terms = builder.toString();

	}// GEN-LAST:event_addButtonActionPerformed

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton addButton;
	private javax.swing.JPanel buttonPanel;
	private javax.swing.JPanel queryPanel;
	private javax.swing.JTextField queryTextField;
	private javax.swing.JButton searchButton;
	private javax.swing.JPanel searchResultPanel;
	private javax.swing.JScrollPane searchResultScrollPane;
	private javax.swing.JTable searchResultTable;
	private javax.swing.JButton selectButton;
	private javax.swing.JLabel titleLabel;
	private javax.swing.JButton unselectButton;
	// End of variables declaration//GEN-END:variables

}
