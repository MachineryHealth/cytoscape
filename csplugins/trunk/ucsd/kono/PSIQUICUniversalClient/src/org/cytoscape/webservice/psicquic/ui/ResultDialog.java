package org.cytoscape.webservice.psicquic.ui;

import java.awt.Frame;
import java.net.URI;
import java.util.Map;

import javax.swing.table.DefaultTableModel;

import cytoscape.util.CyNetworkNaming;

/**
 * Display result of the query.
 * 
 * @author kono
 */
public class ResultDialog extends javax.swing.JDialog {

	private static final long serialVersionUID = 6996385373168492882L;
	private Map<URI, String> dbNames;
	private DefaultTableModel model;

	private boolean mergeNetworks;

	/** Creates new form PSICQUICResultDialog */
	public ResultDialog(Frame parent, boolean modal, Map<URI, String> dbNames) {
		super(parent, modal);
		this.dbNames = dbNames;
		setTableModel();
		initComponents();
		mergeNetworks = false;
	}

	private void setTableModel() {
		resultTable = new javax.swing.JTable(new DefaultTableModel() {
			@Override
			public boolean isCellEditable(int row, int column) {
				if (column == 0)
					return false;
				else
					return true;
			}
		});

		model = (DefaultTableModel) resultTable.getModel();
		model.addColumn("Source", dbNames.keySet().toArray());
		model.addColumn("Network Name (Please edit these if necessary)");
		for (int i = 0; i < model.getRowCount(); i++) {
			model.setValueAt(dbNames.get(model.getValueAt(i, 0)), i, 1);
		}

		resultTable.getTableHeader().setReorderingAllowed(false);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {
		setTitle("PSICQUIC Import Result");

		titlePanel = new javax.swing.JPanel();
		titleLabel = new javax.swing.JLabel();
		resultScrollPane = new javax.swing.JScrollPane();

		buttonPanel = new javax.swing.JPanel();
		okButton = new javax.swing.JButton();
		mergeButton = new javax.swing.JButton();
		mergeButton = new javax.swing.JButton();

		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

		titlePanel.setBackground(java.awt.Color.white);

		titleLabel.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
		titleLabel.setText("PSICQUIC Data Import Result");

		org.jdesktop.layout.GroupLayout titlePanelLayout = new org.jdesktop.layout.GroupLayout(
				titlePanel);
		titlePanel.setLayout(titlePanelLayout);
		titlePanelLayout.setHorizontalGroup(titlePanelLayout
				.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
				.add(
						titlePanelLayout.createSequentialGroup()
								.addContainerGap().add(titleLabel)
								.addContainerGap(390, Short.MAX_VALUE)));
		titlePanelLayout.setVerticalGroup(titlePanelLayout.createParallelGroup(
				org.jdesktop.layout.GroupLayout.LEADING).add(
				titlePanelLayout.createSequentialGroup().addContainerGap().add(
						titleLabel).addContainerGap(
						org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
						Short.MAX_VALUE)));

		resultScrollPane.setBackground(java.awt.Color.white);

		resultScrollPane.setViewportView(resultTable);

		buttonPanel.setBackground(java.awt.Color.white);

		okButton.setText("OK");
		okButton.setPreferredSize(new java.awt.Dimension(70, 26));
		okButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				okButtonActionPerformed(evt);
			}
		});

		mergeButton.setText("Merge");
		mergeButton.setPreferredSize(new java.awt.Dimension(70, 26));
		mergeButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				mergeButtonActionPerformed(evt);
			}
		});

		org.jdesktop.layout.GroupLayout buttonPanelLayout = new org.jdesktop.layout.GroupLayout(
				buttonPanel);
		buttonPanel.setLayout(buttonPanelLayout);
		buttonPanelLayout
				.setHorizontalGroup(buttonPanelLayout
						.createParallelGroup(
								org.jdesktop.layout.GroupLayout.LEADING)
						.add(
								org.jdesktop.layout.GroupLayout.TRAILING,
								buttonPanelLayout
										.createSequentialGroup()
										.addContainerGap(491, Short.MAX_VALUE)
										.add(
												mergeButton,
												org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
												org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
												org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(
												org.jdesktop.layout.LayoutStyle.RELATED)
										.add(
												okButton,
												org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
												55,
												org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
										.addContainerGap()));
		buttonPanelLayout
				.setVerticalGroup(buttonPanelLayout
						.createParallelGroup(
								org.jdesktop.layout.GroupLayout.LEADING)
						.add(
								org.jdesktop.layout.GroupLayout.TRAILING,
								buttonPanelLayout
										.createSequentialGroup()
										.addContainerGap(
												org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
												Short.MAX_VALUE)
										.add(
												buttonPanelLayout
														.createParallelGroup(
																org.jdesktop.layout.GroupLayout.BASELINE)
														.add(
																okButton,
																org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
																org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
														.add(
																mergeButton,
																org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
																org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
										.addContainerGap()));

		org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(
				org.jdesktop.layout.GroupLayout.LEADING).add(titlePanel,
				org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
				org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
				.add(resultScrollPane,
						org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 614,
						Short.MAX_VALUE).add(buttonPanel,
						org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
						org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
						Short.MAX_VALUE));
		layout
				.setVerticalGroup(layout
						.createParallelGroup(
								org.jdesktop.layout.GroupLayout.LEADING)
						.add(
								layout
										.createSequentialGroup()
										.add(
												titlePanel,
												org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
												org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
												org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(
												org.jdesktop.layout.LayoutStyle.RELATED)
										.add(
												resultScrollPane,
												org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
												173, Short.MAX_VALUE)
										.addPreferredGap(
												org.jdesktop.layout.LayoutStyle.RELATED)
										.add(
												buttonPanel,
												org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
												org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
												org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)));

		pack();
	}// </editor-fold>

	private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {
		this.dispose();
	}

	private void mergeButtonActionPerformed(java.awt.event.ActionEvent evt) {
		mergeNetworks = true;
		this.dispose();
	}

	public boolean isMerge() {
		return mergeNetworks;
	}

	public Map<URI, String> getNewNames() {

		for (int i = 0; i < resultTable.getModel().getRowCount(); i++) {
			dbNames.put((URI) resultTable.getModel().getValueAt(i, 0),
					CyNetworkNaming.getSuggestedNetworkTitle(resultTable
							.getModel().getValueAt(i, 1).toString()));
		}
		return dbNames;
	}

	// Variables declaration - do not modify
	private javax.swing.JPanel buttonPanel;
	private javax.swing.JButton mergeButton;
	private javax.swing.JButton okButton;
	private javax.swing.JScrollPane resultScrollPane;
	private javax.swing.JTable resultTable;
	private javax.swing.JLabel titleLabel;
	private javax.swing.JPanel titlePanel;
	// End of variables declaration

}
