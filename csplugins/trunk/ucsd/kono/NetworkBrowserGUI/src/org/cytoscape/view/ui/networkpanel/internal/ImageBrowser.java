package org.cytoscape.view.ui.networkpanel.internal;

import giny.model.GraphPerspective;

import java.awt.Image;
import java.awt.Rectangle;
import java.io.IOException;

import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JViewport;
import javax.swing.table.TableColumn;

import org.cytoscape.view.ui.networkpanel.NetworkBrowserPlugin;
import org.cytoscape.view.ui.networkpanel.internal.cellrenderer.ImageCellRenderer;

import cytoscape.CyNetwork;
import cytoscape.Cytoscape;
import cytoscape.groups.CyGroup;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * NetworkImageBrowserPanel.java
 *
 * Created on 2009/07/17, 15:53:51
 */

/**
 * 
 * @author kono
 */
public class ImageBrowser extends javax.swing.JPanel {

	private ImageTableModel model;
	
	private static final int IMAGE_W = 250;
	private static final int IMAGE_H = 150;
	
	private ImageCellRenderer renderer;
	
	/** Creates new form NetworkImageBrowserPanel */
	public ImageBrowser() {
		initComponents();
		model = new ImageTableModel();
		renderer = new ImageCellRenderer();
		imageTable.setModel(model);
		imageTable.setDefaultRenderer(Image.class, renderer);
		imageTable.setRowHeight(IMAGE_H+20);
		imageTable.setColumnSelectionAllowed(true);
		
		System.out.println("Total cells = " + imageTable.getColumnCount());
	}
	
	private void loadImage() {
		try {
			Image image = ImageIO.read(NetworkBrowserPlugin.class.getResource(
						"images/def_networkicon.png"));
			
			for(int i =0; i<10; i++) {
				model.addImage(image, "Foo " + i);
			}
			
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	private GraphPerspective toGP(CyNetwork network, CyGroup cluster) {
		int[] nodes = new int[cluster.getNodes().size()];
		for (int i = 0; i < cluster.getNodes().size(); i++) {
			nodes[i] = cluster.getNodes().get(i).getRootGraphIndex();
		}
		return network.createGraphPerspective(nodes);
	}

	public void addGroup(CyGroup group) {
		CyNetwork network = Cytoscape.getCurrentNetwork();
		
		Image groupImage = MCODEUtil.convertNetworkToImage(toGP(network, group),
				IMAGE_H, IMAGE_W, null, true);
		if(groupImage != null)
			System.out.println("############### Image = "  + groupImage);
		model.addImage(groupImage, group.getGroupName());
		model.addTableModelListener(imageTable);
		System.out.println("############### tabel size = "  + imageTable.getColumnCount());
		System.out.println("############### model size = "  + imageTable.getModel().getColumnCount());
		imageTable.addColumn(new TableColumn(model.getColumnCount()-1, IMAGE_W));
		
	}
	
	public void scrollToCenter(int vColIndex) {
        
         JViewport viewport = imageScrollPane.getViewport();
    
        // This rectangle is relative to the table where the
        // northwest corner of cell (0,0) is always (0,0).
        Rectangle rect = imageTable.getCellRect(0, vColIndex, true);
    
        // Translate the cell location so that it is relative
        // to the view, assuming the northwest corner of the
        // view is (0,0).
        //rect.setLocation(rect.x-viewRect.x, viewRect.y);
        viewport.setViewPosition(rect.getLocation());
        this.imageScrollPane.repaint();
    }

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		imageScrollPane = new javax.swing.JScrollPane();
        imageTable = new javax.swing.JTable();

        imageScrollPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        imageTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        imageTable.setAutoscrolls(false);
        imageTable.setRowHeight(100);
        imageTable.setRowMargin(20);
        imageTable.setRowSelectionAllowed(false);
        imageTable.setSelectionBackground(new java.awt.Color(204, 255, 255));
        imageTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        imageTable.setCellSelectionEnabled(true);
        imageTable.setShowHorizontalLines(false);
        imageTable.setShowVerticalLines(false);
        imageTable.setIntercellSpacing(new java.awt.Dimension(10, 10));
        imageScrollPane.setViewportView(imageTable);
        

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(imageScrollPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 840, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(imageScrollPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
        );
	}// </editor-fold>

	// Variables declaration - do not modify
	private javax.swing.JScrollPane imageScrollPane;
	private javax.swing.JTable imageTable;
	// End of variables declaration

}
