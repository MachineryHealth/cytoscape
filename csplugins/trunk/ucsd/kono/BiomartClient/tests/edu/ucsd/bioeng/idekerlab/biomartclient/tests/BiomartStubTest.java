package edu.ucsd.bioeng.idekerlab.biomartclient.tests;

import edu.ucsd.bioeng.idekerlab.biomartclient.BiomartStub;
import edu.ucsd.bioeng.idekerlab.biomartclient.utils.Attribute;
import edu.ucsd.bioeng.idekerlab.biomartclient.utils.Dataset;
import edu.ucsd.bioeng.idekerlab.biomartclient.utils.Filter;
import edu.ucsd.bioeng.idekerlab.biomartclient.utils.XMLQueryBuilder;
import junit.framework.TestCase;

public class BiomartStubTest extends TestCase {

	BiomartStub stub;
	
	protected void setUp() throws Exception {
		super.setUp();
		stub = new BiomartStub();
	}

	protected void tearDown() throws Exception {
		super.tearDown();
	}

	public void testGetDatabaseList() throws Exception {
		assertNotNull(stub.getDatabaseList());
	}
	
	public void testGetAvailableDatasets() throws Exception {
		stub.getAvailableDatasets("ensembl");
		stub.getAvailableDatasets("vega");
		stub.getAvailableDatasets("pepseekerGOLD_mart");
	}
	
	public void testGetAvailableAttributes() throws Exception {
		stub.getAvailableAttributes("oanatinus_gene_ensembl");
	}
	
	

	public void testSendQuery() throws Exception {
		
		Dataset dataset;
		Attribute[] attrs;
		Filter[] filters;
		
		dataset = new Dataset("hsapiens_gene_ensembl");
		attrs = new Attribute[3];
		attrs[0] = new Attribute("hgnc_symbol");
		attrs[1] = new Attribute("entrezgene");
		attrs[2] = new Attribute("uniprot_swissprot");
	
		filters = new Filter[1];
		filters[0] = new Filter("entrezgene", "7341,7718,6252,140691,5465,8535,23062,467,284403,1602,9467,1977,578,23650,3091,9013,10127,3603,5092,3866,8841,1020,6996,64112,7913,9112,6871,8517,2966,2885,51726,6256,5928,1054,80125,10054,51246,598,10262,6606,6613,5663,127557,25804,8900,4591,55165,823,5451,11033,4286,328,2810,147339,7027,4331,204851,27258,10474,58500,3065,9314,7157,7917,4093,801,4595,6714,6477,23493,56911,5371,3001,26036,2768,5511,5925,3611,7041,4792,1649,79869,5905,5914,9600,10445,9589,23645,5743,1856,407,23228,2071,1857,23658,30008,5499,9093,572,5327,8907,6759,642,902,7991,581,89797,10248,51224,117144,27301,27101,84708,3312,93487,7417,57088,10320,11338,84894,2670,83596,3320,114823,79843,1615,5830,5187,5894,8575,1482,64689,5867,3005,4691,5859,7132,92610,6271,5347,468,3428,23085,7329,1316,996,6135,7327,6672,6241,842,4869,6285,27332,5170,3855,1877,5933,1385,5359,26578,7323,7337,7251,6449,3146,7278,84168,90268,1870,79036,10492,51147,3198,8208,8945,54843,23640,7490,597,332,11200,84080,26354,3303,2697,23291,7088,5757,6774,2908,5515,160140,2580,23411,8078,7067,23075,11030,1639,10953,4175,55093,128866,10376,6277,5108,79370,9015,51160,2176,55738,57142,3297,1432,6612,7186,10477,1164,11157,3313,79173,3190,3164,7319,10273,79720,90678,81566,10318,2553,3329,2932,26150,8204,8027,8812,637,10174,900,1026,638,22806,10236,79760,4176,5452,23770,55145,81628,1936,1601,1876,9129,3183,23386,358,9908,9618,11319,22893,5932,2068,83985,8878,7704,8161,7416,896,55367,9189,64754,901,3932,286514,2035,79753,665,5300,1647,54557,9260,9765,4089,2353,26119,5245,4830,983,5763,5494,6304,857,1263,9246,5705,5970,9747,2237,11201,8495,9146,6794,29979,10921,112869,6615,26508,83637,57819,5111,9319,2272,1454,2534,1911,1459,55660,9531,5236,3557,309,57821,4188,11267,10912,355,7184,811,1295,2288,100,8837,4924,573,6446,5524,6195,2547,302,10539,207,10743,84289,79088,84528,4001,5664,11170,25788,27257,2624,10397,23678,8533,2874,5747,6282,2113,3087,414301,6776,8863,6772,114822,6789,10059,7020,6767,408,9883,2972,80817,54433,664,1173,151871,26092,7321,3337,9063,9726,55662,2073,4088,5579,7597,2246,29883,1407,291,3838,114790,5590,4841,54205,1163,6240,4192,5770,3726,7326,5601,995,6602,51567,3148,9372,10919,10600,84904,6418,2114,8991,862,1453,5883,8767,5612");
		
		String query2 = XMLQueryBuilder.getQueryString(dataset, attrs, filters);
		
		//stub.sendQuery(query2);
	
	}

}
