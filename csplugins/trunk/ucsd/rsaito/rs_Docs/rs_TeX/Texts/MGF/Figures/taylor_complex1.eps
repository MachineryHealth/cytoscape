%!PS-Adobe-3.0 EPSF-3.0
%%Title: WMF2EPS 1.32  : WMF->EPS conversion for taylor_complex1.emf
%%Creator: PScript5.dll Version 5.2.2
%%CreationDate: 10/22/2010 12:49:58
%%For: rsaito
%%BoundingBox: 56 56 312 313
%%Pages: 1
%%Orientation: Portrait
%%PageOrder: Ascend
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentData: Clean7Bit
%%TargetDevice: (WMF2EPS Color PS) (2010.0) 2
%%LanguageLevel: 2
%%EndComments

%%BeginDefaults
%%PageBoundingBox: 0 0 312 313
%%ViewingOrientation: 1 0 0 1
%%EndDefaults

%%BeginProlog
%%BeginResource: file Pscript_WinNT_ErrorHandler 5.0 0
/currentpacking where{pop/oldpack currentpacking def/setpacking where{pop false
setpacking}if}if/$brkpage 64 dict def $brkpage begin/prnt{dup type/stringtype
ne{=string cvs}if dup length 6 mul/tx exch def/ty 10 def currentpoint/toy exch
def/tox exch def 1 setgray newpath tox toy 2 sub moveto 0 ty rlineto tx 0
rlineto 0 ty neg rlineto closepath fill tox toy moveto 0 setgray show}bind def
/nl{currentpoint exch pop lmargin exch moveto 0 -10 rmoveto}def/=={/cp 0 def
typeprint nl}def/typeprint{dup type exec}readonly def/lmargin 72 def/rmargin 72
def/tprint{dup length cp add rmargin gt{nl/cp 0 def}if dup length cp add/cp
exch def prnt}readonly def/cvsprint{=string cvs tprint( )tprint}readonly def
/integertype{cvsprint}readonly def/realtype{cvsprint}readonly def/booleantype
{cvsprint}readonly def/operatortype{(--)tprint =string cvs tprint(-- )tprint}
readonly def/marktype{pop(-mark- )tprint}readonly def/dicttype{pop
(-dictionary- )tprint}readonly def/nulltype{pop(-null- )tprint}readonly def
/filetype{pop(-filestream- )tprint}readonly def/savetype{pop(-savelevel- )
tprint}readonly def/fonttype{pop(-fontid- )tprint}readonly def/nametype{dup
xcheck not{(/)tprint}if cvsprint}readonly def/stringtype{dup rcheck{(\()tprint
tprint(\))tprint}{pop(-string- )tprint}ifelse}readonly def/arraytype{dup rcheck
{dup xcheck{({)tprint{typeprint}forall(})tprint}{([)tprint{typeprint}forall(])
tprint}ifelse}{pop(-array- )tprint}ifelse}readonly def/packedarraytype{dup
rcheck{dup xcheck{({)tprint{typeprint}forall(})tprint}{([)tprint{typeprint}
forall(])tprint}ifelse}{pop(-packedarray- )tprint}ifelse}readonly def/courier
/Courier findfont 10 scalefont def end errordict/handleerror{systemdict begin
$error begin $brkpage begin newerror{/newerror false store vmstatus pop pop 0
ne{grestoreall}if errorname(VMerror)ne{showpage}if initgraphics courier setfont
lmargin 720 moveto errorname(VMerror)eq{userdict/ehsave known{clear userdict
/ehsave get restore 2 vmreclaim}if vmstatus exch pop exch pop PrtVMMsg}{
(ERROR: )prnt errorname prnt nl(OFFENDING COMMAND: )prnt/command load prnt
$error/ostack known{nl nl(STACK:)prnt nl nl $error/ostack get aload length{==}
repeat}if}ifelse systemdict/showpage get exec(%%[ Error: )print errorname
=print(; OffendingCommand: )print/command load =print( ]%%)= flush}if end end
end}dup 0 systemdict put dup 4 $brkpage put bind readonly put/currentpacking
where{pop/setpacking where{pop oldpack setpacking}if}if
%%EndResource
userdict /Pscript_WinNT_Incr 230 dict dup begin put
%%BeginResource: file Pscript_FatalError 5.0 0
userdict begin/FatalErrorIf{{initgraphics findfont 1 index 0 eq{exch pop}{dup
length dict begin{1 index/FID ne{def}{pop pop}ifelse}forall/Encoding
{ISOLatin1Encoding}stopped{StandardEncoding}if def currentdict end
/ErrFont-Latin1 exch definefont}ifelse exch scalefont setfont counttomark 3 div
cvi{moveto show}repeat showpage quit}{cleartomark}ifelse}bind def end
%%EndResource
userdict begin/PrtVMMsg{vmstatus exch sub exch pop gt{[
(This job requires more memory than is available in this printer.)100 500
(Try one or more of the following, and then print again:)100 485
(For the output format, choose Optimize For Portability.)115 470
(In the Device Settings page, make sure the Available PostScript Memory is accurate.)
115 455(Reduce the number of fonts in the document.)115 440
(Print the document in parts.)115 425 12/Times-Roman[/GothicBBB-Medium-RKSJ-H
dup{findfont}stopped{cleartomark}{/FontName get eq{pop cleartomark[
<82B182CC83578387837582CD8CBB8DDD82B182CC8376838A8393835E82C59798977082C582AB82
E988C88FE382CC83818382838A82F0954B977682C682B582DC82B7814288C889BA82CC8A6590DD9
2E8>90 500<82CC88EA82C2814182DC82BD82CD82BB82CC916782DD8D8782ED82B982F08E7792
E882B582BD8CE381418376838A8393836782B592BC82B582C482DD82C482AD82BE82B382A28142>
90 485<A5506F73745363726970748376838D8370836583428356815B836782A982E7814183478
389815B82AA8C798CB882B782E982E682A482C98DC5934B89BB2082F0914991F082B782E98142>
90 455<A58366836F83438358834983768356838783938376838D8370836583428356815B83678
2CC209798977082C582AB82E98376838A8393835E83818382838A2082CC926C82AA90B382B582A2
82B182C682F08A6D944682B782E98142>90 440<A58368834C8385838183938367928682C58E6
7977082B382EA82C482A282E9837483488393836782CC909482F08CB882E782B78142>90 425
<A58368834C838583818393836782F095AA8A8482B582C48376838A8393836782B782E98142>90
410 10 0/GothicBBB-Medium-RKSJ-H}{cleartomark}ifelse}ifelse showpage
(%%[ PrinterError: Low Printer VM ]%%)= true FatalErrorIf}if}bind def end
version cvi 2016 ge{/VM?{pop}bind def}{/VM? userdict/PrtVMMsg get def}ifelse
%%BeginResource: file Pscript_Win_Basic 5.0 0
/d/def load def/,/load load d/~/exch , d/?/ifelse , d/!/pop , d/`/begin , d/^
/index , d/@/dup , d/+/translate , d/$/roll , d/U/userdict , d/M/moveto , d/-
/rlineto , d/&/currentdict , d/:/gsave , d/;/grestore , d/F/false , d/T/true ,
d/N/newpath , d/E/end , d/Ac/arc , d/An/arcn , d/A/ashow , d/D/awidthshow , d/C
/closepath , d/V/div , d/O/eofill , d/L/fill , d/I/lineto , d/-c/curveto , d/-M
/rmoveto , d/+S/scale , d/Ji/setfont , d/Lc/setlinecap , d/Lj/setlinejoin , d
/Lw/setlinewidth , d/Lm/setmiterlimit , d/sd/setdash , d/S/show , d/LH/showpage
, d/K/stroke , d/W/widthshow , d/R/rotate , d/L2? false/languagelevel where{pop
languagelevel 2 ge{pop true}if}if d L2?{/xS/xshow , d/yS/yshow , d/zS/xyshow ,
d}if/b{bind d}bind d/bd{bind d}bind d/xd{~ d}bd/ld{, d}bd/bn/bind ld/lw/Lw ld
/lc/Lc ld/lj/Lj ld/sg/setgray ld/ADO_mxRot null d/self & d/OrgMx matrix
currentmatrix d/reinitialize{: OrgMx setmatrix[/TextInit/GraphInit/UtilsInit
counttomark{@ where{self eq}{F}?{cvx exec}{!}?}repeat cleartomark ;}b
/initialize{`{/Pscript_Win_Data where{!}{U/Pscript_Win_Data & put}?/ADO_mxRot ~
d/TextInitialised? F d reinitialize E}{U/Pscript_Win_Data 230 dict @ ` put
/ADO_mxRot ~ d/TextInitialised? F d reinitialize}?}b/terminate{!{& self eq
{exit}{E}?}loop E}b/suspend/terminate , d/resume{` Pscript_Win_Data `}b U `
/lucas 21690 d/featurebegin{countdictstack lucas[}b/featurecleanup{stopped
{cleartomark @ lucas eq{! exit}if}loop countdictstack ~ sub @ 0 gt{{E}repeat}
{!}?}b E/snap{transform 0.25 sub round 0.25 add ~ 0.25 sub round 0.25 add ~
itransform}b/dsnap{dtransform round ~ round ~ idtransform}b/nonzero_round{@ 0.5
ge{round}{@ -0.5 lt{round}{0 ge{1}{-1}?}?}?}b/nonzero_dsnap{dtransform
nonzero_round ~ nonzero_round ~ idtransform}b U<04>cvn{}put/rr{1 ^ 0 - 0 ~ -
neg 0 - C}b/irp{4 -2 $ + +S fx 4 2 $ M 1 ^ 0 - 0 ~ - neg 0 -}b/rp{4 2 $ M 1 ^ 0
- 0 ~ - neg 0 -}b/solid{[]0 sd}b/g{@ not{U/DefIf_save save put}if U/DefIf_bool
2 ^ put}b/DefIf_El{if U/DefIf_bool get not @{U/DefIf_save get restore}if}b/e
{DefIf_El !}b/UDF{L2?{undefinefont}{!}?}b/UDR{L2?{undefineresource}{! !}?}b
/freeVM{/Courier findfont[40 0 0 -40 0 0]makefont Ji 2 vmreclaim}b/hfRedefFont
{findfont @ length dict `{1 ^/FID ne{d}{! !}?}forall & E @ ` ~{/CharStrings 1
dict `/.notdef 0 d & E d}if/Encoding 256 array 0 1 255{1 ^ ~/.notdef put}for d
E definefont !}bind d/hfMkCIDFont{/CIDFont findresource @ length 2 add dict `{1
^ @/FID eq ~ @/XUID eq ~/UIDBase eq or or{! !}{d}?}forall/CDevProc ~ d/Metrics2
16 dict d/CIDFontName 1 ^ d & E 1 ^ ~/CIDFont defineresource ![~]composefont !}
bind d
%%EndResource
%%BeginResource: file Pscript_Win_Utils_L2 5.0 0
/rf/rectfill , d/fx{1 1 dtransform @ 0 ge{1 sub 0.5}{1 add -0.5}? 3 -1 $ @ 0 ge
{1 sub 0.5}{1 add -0.5}? 3 1 $ 4 1 $ idtransform 4 -2 $ idtransform}b/BZ{4 -2 $
snap + +S fx rf}b/rs/rectstroke , d/rc/rectclip , d/UtilsInit{currentglobal{F
setglobal}if}b/scol{! setcolor}b/colspA/DeviceGray d/colspABC/DeviceRGB d
/colspRefresh{colspABC setcolorspace}b/SetColSpace{colspABC setcolorspace}b
/resourcestatus where{!/ColorRendering/ProcSet resourcestatus{! ! T}{F}?}{F}?
not{/ColorRendering<</GetHalftoneName{currenthalftone @/HalftoneName known{
/HalftoneName get}{!/none}?}bn/GetPageDeviceName{currentpagedevice @
/PageDeviceName known{/PageDeviceName get @ null eq{!/none}if}{!/none}?}bn
/GetSubstituteCRD{!/DefaultColorRendering/ColorRendering resourcestatus{! !
/DefaultColorRendering}{(DefaultColorRendering*){cvn exit}127 string
/ColorRendering resourceforall}?}bn>>/defineresource where{!/ProcSet
defineresource !}{! !}?}if/buildcrdname{/ColorRendering/ProcSet findresource `
mark GetHalftoneName @ type @/nametype ne ~/stringtype ne and{!/none}if(.)
GetPageDeviceName @ type @/nametype ne ~/stringtype ne and{!/none}if(.)5 ^ 0 5
-1 1{^ length add}for string 6 1 $ 5 ^ 5{~ 1 ^ cvs length 1 ^ length 1 ^ sub
getinterval}repeat ! cvn 3 1 $ ! ! E}b/definecolorrendering{~ buildcrdname ~
/ColorRendering defineresource !}b/findcolorrendering where{!}{
/findcolorrendering{buildcrdname @/ColorRendering resourcestatus{! ! T}{
/ColorRendering/ProcSet findresource ` GetSubstituteCRD E F}?}b}?
/selectcolorrendering{findcolorrendering !/ColorRendering findresource
setcolorrendering}b/G2UBegin{findresource/FontInfo get/GlyphNames2Unicode get
`}bind d/G2CCBegin{findresource/FontInfo get/GlyphNames2HostCode get `}bind d
/G2UEnd{E}bind d/AddFontInfoBegin{/FontInfo 8 dict @ `}bind d/AddFontInfo{
/GlyphNames2Unicode 16 dict d/GlyphNames2HostCode 16 dict d}bind d
/AddFontInfoEnd{E d}bind d/T0AddCFFMtx2{/CIDFont findresource/Metrics2 get ` d
E}bind d
%%EndResource
end
%%EndProlog

%%BeginSetup
[ 1 0 0 1 0 0 ] false Pscript_WinNT_Incr dup /initialize get exec
1 setlinecap 1 setlinejoin
/mysetup [ 72 600 V 0 0 -72 600 V 0 313.22833 ] def 
%%EndSetup

%%Page: 1 1
%%PageBoundingBox: 0 0 312 313
%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
%%EndPageSetup

Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_Win_GdiObject 5.0 0
/SavedCTM null d/CTMsave{/SavedCTM SavedCTM currentmatrix d}b/CTMrestore
{SavedCTM setmatrix}b/mp null d/ADO_mxRot null d/GDIHMatrix null d
/GDIHPatternDict 22 dict d GDIHPatternDict `/PatternType 1 d/PaintType 2 d/Reps
L2?{1}{5}? d/XStep 8 Reps mul d/YStep XStep d/BBox[0 0 XStep YStep]d/TilingType
1 d/PaintProc{` 1 Lw[]0 sd PaintData , exec E}b/FGnd null d/BGnd null d
/HS_Horizontal{horiz}b/HS_Vertical{vert}b/HS_FDiagonal{fdiag}b/HS_BDiagonal
{biag}b/HS_Cross{horiz vert}b/HS_DiagCross{fdiag biag}b/MaxXYStep XStep YStep
gt{XStep}{YStep}? d/horiz{Reps{0 4 M XStep 0 - 0 8 +}repeat 0 -8 Reps mul + K}b
/vert{Reps{4 0 M 0 YStep - 8 0 +}repeat 0 -8 Reps mul + K}b/biag{Reps{0 0 M
MaxXYStep @ - 0 YStep neg M MaxXYStep @ - 0 8 +}repeat 0 -8 Reps mul + 0 YStep
M 8 8 - K}b/fdiag{Reps{0 0 M MaxXYStep @ neg - 0 YStep M MaxXYStep @ neg - 0 8
+}repeat 0 -8 Reps mul + MaxXYStep @ M 8 -8 - K}b E/makehatch{4 -2 $/yOrg ~ d
/xOrg ~ d GDIHPatternDict/PaintData 3 -1 $ put CTMsave GDIHMatrix setmatrix
GDIHPatternDict matrix xOrg yOrg + mp CTMrestore ~ U ~ 2 ^ put}b/h0{/h0
/HS_Horizontal makehatch}b/h1{/h1/HS_Vertical makehatch}b/h2{/h2/HS_FDiagonal
makehatch}b/h3{/h3/HS_BDiagonal makehatch}b/h4{/h4/HS_Cross makehatch}b/h5{/h5
/HS_DiagCross makehatch}b/GDIBWPatternMx null d/pfprep{save 8 1 $
/PatternOfTheDay 8 1 $ GDIBWPatternDict `/yOrg ~ d/xOrg ~ d/PaintData ~ d/yExt
~ d/Width ~ d/BGnd ~ d/FGnd ~ d/Height yExt RepsV mul d/mx[Width 0 0 Height 0
0]d E build_pattern ~ !}b/pfbf{/fEOFill ~ d pfprep hbf fEOFill{O}{L}? restore}b
/GraphInit{GDIHMatrix null eq{/SavedCTM matrix d : ADO_mxRot concat 0 0 snap +
: 0.48 @ GDIHPatternDict ` YStep mul ~ XStep mul ~ nonzero_dsnap YStep V ~
XStep V ~ E +S/GDIHMatrix matrix currentmatrix readonly d ; : 0.24 -0.24 +S
GDIBWPatternDict ` Width Height E nonzero_dsnap +S/GDIBWPatternMx matrix
currentmatrix readonly d ; ;}if}b
%%EndResource
%%BeginResource: file Pscript_Win_GdiObject_L2 5.0 0
/GDIBWPatternDict 25 dict @ `/PatternType 1 d/PaintType 1 d/RepsV 1 d/RepsH 1 d
/BBox[0 0 RepsH 1]d/TilingType 1 d/XStep 1 d/YStep 1 d/Height 8 RepsV mul d
/Width 8 d/mx[Width 0 0 Height neg 0 Height]d/FGnd null d/BGnd null d
/SetBGndFGnd{BGnd null ne{BGnd aload ! scol BBox aload ! 2 ^ sub ~ 3 ^ sub ~
rf}if FGnd null ne{FGnd aload ! scol}if}b/PaintProc{` SetBGndFGnd RepsH{Width
Height F mx PaintData imagemask Width 0 +}repeat E}b E d/mp/makepattern , d
/build_pattern{CTMsave GDIBWPatternMx setmatrix/nupangle where{! nupangle -90
eq{nupangle R}if}if GDIBWPatternDict @ ` Width Height ne{Width Height gt{Width
Height V 1}{1 Height Width V}? +S}if xOrg yOrg E matrix + mp CTMrestore}b/hbf
{setpattern}b/hf{:/fEOFill ~ d ~ ! setpattern fEOFill{O}{L}? ;}b/pbf{: !
/fEOFill ~ d GDIBWPatternDict `/yOrg ~ d/xOrg ~ d/PaintData ~ d/OutputBPP ~ d
/Height ~ d/Width ~ d/PaintType 1 d/PatternType 1 d/TilingType 1 d/BBox[0 0
Width Height]d/XStep Width d/YStep Height d/mx xOrg yOrg matrix + d 20 dict @ `
/ImageType 1 d/Width Width d/Height Height d/ImageMatrix[1 0 0 1 0 0]d
/BitsPerComponent 8 d OutputBPP 24 eq{/Decode[0 1 0 1 0 1]d}{OutputBPP 8 eq{
/Decode[0 1]d}{/Decode[0 1 0 1 0 1 0 1]d}?}?/DataSource{PaintData}d E/ImageDict
~ d/PaintProc{` ImageDict image E}b & mx makepattern setpattern E fEOFill{O}{L}
? ;}b/mask_pbf{:/fEOFill ~ d 20 dict `/yOrg ~ d/xOrg ~ d/PaintData ~ d/Height ~
d/Width ~ d/PatternType 1 d/PaintType 2 d/TilingType 1 d/BBox[0 0 Width Height]
d/XStep Width d/YStep Height d/mx xOrg yOrg matrix + d/PaintProc{` Width Height
T 1 1 dtransform abs ~ abs ~ 0 0 3 -1 $ 0 0 6 array astore{PaintData}imagemask
E}b & mx makepattern setpattern E fEOFill{O}{L}? ;}b
%%EndResource
end reinitialize
: 472 0 2126 2138 rc N 471 -1 M 471 2139 I 2599 2139 I 2599 -1 I 471 -1 I C 
1 1 1 1 scol  O ; N 588 1068 M 588 546 1012 123 1534 123 -c 2056 123 2480 546 2480 1068 -c 2480 1591 2056 2014 1534 2014 -c 1012 2014 588 1591 588 1068 -c C 
0.754 0.754 0.754 1 scol  O 0 0 0 1 scol 1 Lj 0 Lc solid N 587 1117 M 586 1092 I 592 1092 I 593 1117 I 587 1117 I C 
585 1073 M 585 1068 I 586 1048 I 592 1048 I 592 1068 I 592 1073 I 585 1073 I C 
586 1029 M 587 1020 I 588 1004 I 594 1005 I 593 1020 I 593 1029 I 586 1029 I C 
589 986 M 590 971 I 592 960 I 598 961 I 596 972 I 595 986 I 589 986 I C 
594 942 M 596 924 I 598 917 I 604 918 I 602 925 I 600 943 I 594 942 I C 
601 898 M 605 877 I 605 874 I 612 875 I 611 878 I 607 900 I 601 898 I C 
610 855 M 615 831 I 615 831 I 621 833 I 621 833 I 616 857 I 610 855 I C 
620 813 M 627 789 I 633 790 I 626 815 I 620 813 I C 
633 771 M 641 747 I 647 749 I 639 773 I 633 771 I C 
648 729 M 657 706 I 663 708 I 654 732 I 648 729 I C 
665 689 M 675 666 I 680 669 I 670 691 I 665 689 I C 
683 649 M 694 627 I 700 629 I 689 652 I 683 649 I C 
703 610 M 716 588 I 721 591 I 709 613 I 703 610 I C 
726 572 M 739 551 I 744 554 I 731 575 I 726 572 I C 
749 535 M 764 515 I 769 518 I 754 539 I 749 535 I C 
775 499 M 790 480 I 795 483 I 780 503 I 775 499 I C 
802 465 M 802 465 I 818 446 I 823 450 I 807 469 I 807 469 I 802 465 I C 
831 432 M 832 430 I 848 413 I 853 418 I 836 435 I 835 436 I 831 432 I C 
861 400 M 863 398 I 879 382 I 883 387 I 868 402 I 866 404 I 861 400 I C 
893 369 M 896 366 I 911 353 I 916 357 I 900 371 I 897 374 I 893 369 I C 
926 340 M 930 336 I 945 325 I 949 330 I 935 341 I 930 345 I 926 340 I C 
960 313 M 966 308 I 980 298 I 984 303 I 970 313 I 964 318 I 960 313 I C 
996 287 M 1004 282 I 1017 273 I 1020 279 I 1007 287 I 999 292 I 996 287 I C 
1032 263 M 1042 257 I 1054 250 I 1057 256 I 1045 262 I 1036 268 I 1032 263 I C 
1070 241 M 1082 234 I 1092 229 I 1095 234 I 1085 239 I 1073 246 I 1070 241 I C 
1109 220 M 1123 213 I 1132 209 I 1134 215 I 1126 219 I 1112 226 I 1109 220 I C 
1149 201 M 1165 194 I 1172 191 I 1174 197 I 1167 200 I 1151 207 I 1149 201 I C 
1189 184 M 1208 177 I 1213 176 I 1215 181 I 1210 183 I 1192 190 I 1189 184 I C 
1231 170 M 1252 162 I 1254 162 I 1256 168 I 1254 168 I 1233 175 I 1231 170 I C 
1272 156 M 1297 150 I 1298 156 I 1274 162 I 1272 156 I C 
1315 145 M 1339 140 I 1341 146 I 1316 151 I 1315 145 I C 
1358 136 M 1383 132 I 1384 138 I 1359 142 I 1358 136 I C 
1401 129 M 1426 126 I 1427 132 I 1402 135 I 1401 129 I C 
1445 124 M 1470 122 I 1470 128 I 1445 130 I 1445 124 I C 
1489 121 M 1514 120 I 1514 126 I 1489 127 I 1489 121 I C 
1533 120 M 1534 120 I 1558 120 I 1558 126 I 1534 126 I 1533 126 I 1533 120 I C 
1576 121 M 1583 121 I 1602 122 I 1601 129 I 1583 127 I 1576 127 I 1576 121 I C 
1620 124 M 1631 125 I 1645 126 I 1645 133 I 1631 131 I 1620 130 I 1620 124 I C 
1664 129 M 1679 131 I 1689 132 I 1688 139 I 1678 137 I 1663 135 I 1664 129 I C 
1707 136 M 1725 139 I 1732 140 I 1731 147 I 1724 145 I 1706 142 I 1707 136 I C 
1750 145 M 1771 149 I 1775 151 I 1773 157 I 1770 156 I 1749 151 I 1750 145 I C 
1793 156 M 1816 162 I 1817 163 I 1815 168 I 1815 168 I 1791 162 I 1793 156 I C 
1835 169 M 1859 177 I 1857 183 I 1833 174 I 1835 169 I C 
1876 183 M 1900 193 I 1897 198 I 1874 189 I 1876 183 I C 
1917 200 M 1940 210 I 1937 216 I 1914 206 I 1917 200 I C 
1957 219 M 1979 230 I 1976 236 I 1954 224 I 1957 219 I C 
1996 239 M 2017 252 I 2014 257 I 1992 245 I 1996 239 I C 
2033 262 M 2054 275 I 2051 280 I 2030 267 I 2033 262 I C 
2070 286 M 2091 300 I 2087 305 I 2067 291 I 2070 286 I C 
2106 311 M 2126 327 I 2122 332 I 2102 316 I 2106 311 I C 
2140 338 M 2159 355 I 2155 360 I 2136 343 I 2140 338 I C 
2174 367 M 2192 385 I 2187 389 I 2169 372 I 2174 367 I C 
2205 398 M 2222 416 I 2218 420 I 2201 402 I 2205 398 I C 
2235 429 M 2236 430 I 2252 448 I 2247 452 I 2232 435 I 2231 434 I 2235 429 I C 
2264 462 M 2266 465 I 2280 482 I 2275 486 I 2262 469 I 2260 467 I 2264 462 I C 
2292 497 M 2294 501 I 2306 517 I 2301 521 I 2290 504 I 2287 501 I 2292 497 I C 
2317 533 M 2321 538 I 2331 554 I 2326 557 I 2316 541 I 2312 536 I 2317 533 I C 
2341 569 M 2346 576 I 2354 591 I 2349 594 I 2340 580 I 2336 573 I 2341 569 I C 
2363 607 M 2368 616 I 2375 629 I 2370 632 I 2363 619 I 2358 610 I 2363 607 I C 
2384 646 M 2390 657 I 2395 669 I 2389 671 I 2384 660 I 2378 649 I 2384 646 I C 
2403 686 M 2408 699 I 2412 709 I 2407 711 I 2403 702 I 2397 689 I 2403 686 I C 
2419 727 M 2425 742 I 2428 750 I 2422 752 I 2420 744 I 2414 729 I 2419 727 I C 
2434 768 M 2440 786 I 2442 792 I 2436 794 I 2434 788 I 2428 770 I 2434 768 I C 
2447 810 M 2453 831 I 2454 834 I 2448 836 I 2447 833 I 2441 812 I 2447 810 I C 
2458 852 M 2464 877 I 2458 878 I 2452 854 I 2458 852 I C 
2467 895 M 2471 920 I 2465 921 I 2461 897 I 2467 895 I C 
2474 939 M 2477 964 I 2471 964 I 2468 940 I 2474 939 I C 
2479 983 M 2481 1007 I 2475 1008 I 2473 983 I 2479 983 I C 
2482 1026 M 2483 1051 I 2476 1051 I 2476 1026 I 2482 1026 I C 
2483 1070 M 2482 1095 I 2476 1095 I 2477 1070 I 2483 1070 I C 
2482 1114 M 2482 1117 I 2480 1139 I 2474 1139 I 2475 1117 I 2476 1114 I 2482 1114 I C 
2479 1158 M 2478 1165 I 2476 1183 I 2470 1182 I 2472 1165 I 2472 1157 I 2479 1158 I C 
2474 1201 M 2472 1213 I 2470 1226 I 2463 1225 I 2466 1212 I 2467 1201 I 2474 1201 I C 
2466 1245 M 2464 1259 I 2461 1270 I 2455 1268 I 2458 1258 I 2460 1244 I 2466 1245 I C 
2457 1288 M 2453 1305 I 2451 1312 I 2445 1311 I 2447 1304 I 2451 1286 I 2457 1288 I C 
2446 1330 M 2440 1350 I 2439 1355 I 2433 1353 I 2434 1349 I 2440 1329 I 2446 1330 I C 
2433 1372 M 2425 1394 I 2425 1396 I 2419 1394 I 2420 1392 I 2427 1370 I 2433 1372 I C 
2418 1414 M 2409 1437 I 2403 1435 I 2412 1411 I 2418 1414 I C 
2401 1454 M 2391 1477 I 2385 1474 I 2395 1451 I 2401 1454 I C 
2382 1494 M 2371 1516 I 2365 1513 I 2377 1491 I 2382 1494 I C 
2362 1533 M 2349 1554 I 2344 1551 I 2356 1530 I 2362 1533 I C 
2339 1570 M 2326 1591 I 2320 1588 I 2334 1567 I 2339 1570 I C 
2315 1607 M 2301 1628 I 2296 1624 I 2310 1603 I 2315 1607 I C 
2289 1643 M 2274 1662 I 2269 1658 I 2284 1639 I 2289 1643 I C 
2262 1677 M 2246 1696 I 2241 1692 I 2257 1673 I 2262 1677 I C 
2233 1710 M 2216 1728 I 2211 1724 I 2228 1706 I 2233 1710 I C 
2202 1742 M 2184 1759 I 2180 1754 I 2198 1737 I 2202 1742 I C 
2171 1772 M 2152 1788 I 2148 1784 I 2167 1767 I 2171 1772 I C 
2137 1801 M 2118 1816 I 2114 1811 I 2134 1796 I 2137 1801 I C 
2103 1828 M 2102 1829 I 2082 1842 I 2079 1837 I 2098 1824 I 2099 1823 I 2103 1828 I C 
2067 1853 M 2065 1855 I 2046 1867 I 2043 1862 I 2061 1850 I 2064 1848 I 2067 1853 I C 
2030 1877 M 2026 1880 I 2009 1890 I 2006 1884 I 2023 1874 I 2027 1872 I 2030 1877 I C 
1992 1899 M 1987 1903 I 1970 1911 I 1967 1906 I 1983 1897 I 1989 1894 I 1992 1899 I C 
1953 1920 M 1946 1924 I 1931 1930 I 1928 1925 I 1943 1918 I 1951 1914 I 1953 1920 I C 
1914 1938 M 1904 1943 I 1890 1948 I 1888 1942 I 1901 1937 I 1911 1932 I 1914 1938 I C 
1873 1955 M 1861 1960 I 1849 1963 I 1847 1957 I 1858 1954 I 1871 1949 I 1873 1955 I C 
1831 1969 M 1816 1974 I 1807 1977 I 1806 1971 I 1814 1969 I 1829 1963 I 1831 1969 I C 
1789 1982 M 1771 1987 I 1765 1989 I 1764 1983 I 1770 1981 I 1788 1976 I 1789 1982 I C 
1747 1993 M 1725 1998 I 1722 1998 I 1721 1992 I 1724 1992 I 1745 1987 I 1747 1993 I C 
1704 2002 M 1679 2006 I 1678 2000 I 1703 1996 I 1704 2002 I C 
1660 2009 M 1636 2012 I 1635 2005 I 1660 2002 I 1660 2009 I C 
1617 2013 M 1592 2015 I 1591 2009 I 1616 2007 I 1617 2013 I C 
1573 2016 M 1548 2017 I 1548 2011 I 1573 2010 I 1573 2016 I C 
1529 2017 M 1504 2016 I 1504 2010 I 1529 2011 I 1529 2017 I C 
1485 2016 M 1460 2014 I 1460 2008 I 1486 2010 I 1485 2016 I C 
1441 2013 M 1437 2012 I 1416 2010 I 1417 2003 I 1438 2006 I 1442 2006 I 1441 2013 I C 
1398 2007 M 1390 2006 I 1373 2003 I 1374 1997 I 1391 2000 I 1398 2001 I 1398 2007 I C 
1354 2000 M 1343 1998 I 1330 1995 I 1331 1989 I 1344 1992 I 1356 1994 I 1354 2000 I C 
1311 1991 M 1297 1987 I 1287 1984 I 1289 1978 I 1298 1981 I 1313 1984 I 1311 1991 I C 
1269 1979 M 1252 1975 I 1245 1972 I 1247 1966 I 1254 1968 I 1271 1973 I 1269 1979 I C 
1227 1966 M 1208 1960 I 1203 1958 I 1206 1952 I 1210 1954 I 1229 1960 I 1227 1966 I C 
1186 1951 M 1165 1943 I 1162 1942 I 1165 1936 I 1167 1937 I 1188 1945 I 1186 1951 I C 
1145 1934 M 1123 1924 I 1122 1924 I 1125 1918 I 1125 1918 I 1148 1928 I 1145 1934 I C 
1106 1915 M 1084 1904 I 1086 1898 I 1109 1909 I 1106 1915 I C 
1067 1894 M 1045 1882 I 1048 1876 I 1070 1889 I 1067 1894 I C 
1029 1872 M 1008 1858 I 1012 1853 I 1033 1866 I 1029 1872 I C 
993 1847 M 972 1833 I 976 1828 I 996 1842 I 993 1847 I C 
957 1821 M 937 1806 I 941 1801 I 961 1816 I 957 1821 I C 
923 1794 M 904 1778 I 908 1773 I 927 1789 I 923 1794 I C 
890 1765 M 872 1747 I 876 1743 I 894 1760 I 890 1765 I C 
859 1734 M 841 1716 I 846 1712 I 863 1730 I 859 1734 I C 
828 1702 M 812 1683 I 817 1679 I 833 1698 I 828 1702 I C 
800 1669 M 784 1649 I 789 1645 I 805 1665 I 800 1669 I C 
773 1634 M 758 1614 I 763 1610 I 778 1631 I 773 1634 I C 
747 1598 M 734 1577 I 739 1574 I 752 1595 I 747 1598 I C 
724 1562 M 723 1560 I 711 1540 I 716 1537 I 728 1557 I 729 1558 I 724 1562 I C 
702 1524 M 700 1521 I 690 1501 I 695 1498 I 705 1518 I 707 1521 I 702 1524 I C 
681 1485 M 679 1480 I 671 1462 I 676 1459 I 684 1477 I 687 1482 I 681 1485 I C 
663 1445 M 660 1438 I 653 1421 I 659 1419 I 666 1435 I 669 1442 I 663 1445 I C 
647 1404 M 643 1395 I 638 1380 I 644 1378 I 649 1392 I 652 1402 I 647 1404 I C 
632 1363 M 628 1351 I 625 1338 I 631 1337 I 634 1349 I 638 1360 I 632 1363 I C 
619 1320 M 615 1305 I 613 1296 I 619 1295 I 621 1304 I 625 1319 I 619 1320 I C 
609 1278 M 605 1260 I 604 1253 I 610 1252 I 611 1258 I 615 1276 I 609 1278 I C 
600 1235 M 596 1213 I 596 1210 I 602 1209 I 602 1212 I 606 1234 I 600 1235 I C 
594 1191 M 590 1166 I 597 1166 I 600 1190 I 594 1191 I C 
589 1148 M 587 1123 I 593 1122 I 595 1147 I 589 1148 I C 
:  L ; : 0.125 0.125 +S K 
; N 968 1094 M 969 1065 I 971 1036 I 975 1007 I 980 979 I 986 951 I 994 924 I 1003 898 I 1013 872 I 1024 847 I 1037 822 I 1051 798 I 1065 775 I 1081 752 I 1098 731 I 1116 710 I 1135 690 I 1155 671 I 1176 653 I 1197 637 I 1220 621 I 1243 606 I 1267 592 I 1291 579 I 1317 568 I 1343 558 I 1369 549 I 1396 541 I 1424 535 I 1452 530 I 1480 526 I 1509 524 I 1539 523 I 1568 524 I 1597 526 I 1626 530 I 1654 535 I 1681 541 I 1708 549 I 1735 558 I 1761 568 I 1786 579 I 1811 592 I 1835 606 I 1858 620 I 1880 636 I 1902 653 I 1923 671 I 1942 690 I 1961 710 I 1979 731 I 1996 752 I 2012 775 I 2027 798 I 2041 822 I 2053 846 I 2065 872 I 2075 898 I 2084 924 I 2092 951 I 2098 979 I 2103 1007 I 2107 1035 I 2109 1064 I 2110 1094 I 2109 1123 I 2107 1152 I 2103 1181 I 2098 1209 I 2092 1237 I 2084 1264 I 2075 1290 I 2065 1316 I 2053 1341 I 2041 1366 I 2027 1390 I 2012 1413 I 1996 1435 I 1979 1457 I 1961 1478 I 1943 1498 I 1923 1516 I 1902 1534 I 1881 1551 I 1858 1567 I 1835 1582 I 1811 1596 I 1786 1608 I 1761 1620 I 1735 1630 I 1709 1639 I 1682 1647 I 1654 1653 I 1626 1658 I 1597 1662 I 1568 1664 I 1539 1665 I 1510 1664 I 1481 1662 I 1452 1658 I 1424 1653 I 1396 1647 I 1369 1639 I 1343 1630 I 1317 1620 I 1291 1608 I 1267 1596 I 1243 1582 I 1220 1567 I 1197 1551 I 1176 1534 I 1155 1516 I 1135 1498 I 1116 1478 I 1098 1457 I 1081 1436 I 1065 1413 I 1051 1390 I 1037 1366 I 1024 1341 I 1013 1316 I 1003 1290 I 994 1264 I 986 1237 I 980 1209 I 975 1181 I 971 1152 I 969 1123 I 968 1094 I C 
975 1123 M 977 1152 I 981 1180 I 986 1208 I 992 1235 I 1000 1262 I 1008 1288 I 1019 1314 I 1030 1339 I 1042 1363 I 1056 1387 I 1071 1410 I 1086 1432 I 1103 1453 I 1121 1473 I 1140 1493 I 1159 1512 I 1180 1530 I 1201 1546 I 1223 1562 I 1246 1577 I 1270 1590 I 1294 1603 I 1319 1614 I 1345 1624 I 1371 1633 I 1398 1641 I 1425 1647 I 1453 1652 I 1481 1656 I 1510 1658 I 1539 1658 I 1568 1658 I 1596 1656 I 1625 1652 I 1653 1647 I 1680 1641 I 1707 1633 I 1733 1624 I 1759 1614 I 1784 1603 I 1808 1590 I 1832 1577 I 1854 1562 I 1877 1546 I 1898 1530 I 1918 1512 I 1938 1493 I 1957 1474 I 1974 1453 I 1991 1432 I 2007 1410 I 2022 1387 I 2035 1363 I 2048 1339 I 2059 1314 I 2069 1288 I 2078 1262 I 2086 1235 I 2092 1208 I 2097 1180 I 2101 1152 I 2103 1123 I 2103 1094 I 2103 1065 I 2101 1036 I 2097 1008 I 2092 980 I 2086 953 I 2078 926 I 2069 900 I 2059 874 I 2048 849 I 2035 825 I 2022 801 I 2007 778 I 1991 756 I 1975 735 I 1957 714 I 1938 695 I 1919 676 I 1898 658 I 1877 642 I 1855 626 I 1832 611 I 1808 598 I 1784 585 I 1759 574 I 1733 564 I 1707 555 I 1680 547 I 1653 541 I 1625 536 I 1597 532 I 1568 530 I 1539 529 I 1510 530 I 1481 532 I 1453 536 I 1425 541 I 1398 547 I 1371 555 I 1345 564 I 1319 574 I 1294 585 I 1270 597 I 1246 611 I 1223 626 I 1201 641 I 1180 658 I 1159 676 I 1140 695 I 1121 714 I 1103 735 I 1087 756 I 1071 778 I 1056 801 I 1042 825 I 1030 849 I 1019 874 I 1008 900 I 1000 926 I 992 953 I 986 980 I 981 1008 I 977 1036 I 975 1065 I 974 1094 I 975 1123 I C 
:  L ; : 0.125 0.125 +S K 
; N 2005 263 M 1539 1067 I 1544 1070 I 2010 266 I C 
:  L ; : 0.125 0.125 +S K 
; N 1541 1065 M 2102 1065 I 2102 1071 I 1541 1071 I C 
:  L ; : 0.125 0.125 +S K 
; N 1521 1067 M 1521 1054 1531 1043 1544 1043 -c 1557 1043 1567 1054 1567 1067 -c 1567 1080 1557 1090 1544 1090 -c 1531 1090 1521 1080 1521 1067 -c C 
 O N 1518 1067 M 1517 1067 1517 1067 1518 1066 -c 1518 1062 I 1518 1061 1518 1061 1518 1061 -c 1520 1057 I 1520 1057 1520 1056 1520 1056 -c 1522 1052 I 1522 1052 1522 1052 1522 1052 -c 1525 1048 I 1525 1048 1525 1048 1526 1048 -c 1529 1045 I 1529 1045 1529 1045 1530 1044 -c 1534 1042 I 1534 1042 1534 1042 1534 1042 -c 1538 1041 I 1539 1041 1539 1041 1539 1041 -c 1544 1040 I 1544 1040 1544 1040 1544 1040 -c 1549 1041 I 1549 1041 1550 1041 1550 1041 -c 1554 1042 I 1554 1042 1555 1042 1555 1042 -c 1559 1045 I 1559 1045 1559 1045 1559 1045 -c 1563 1048 I 1563 1048 1563 1048 1563 1048 -c 1566 1052 I 1566 1052 1566 1052 1566 1052 -c 1568 1056 I 1568 1056 1569 1057 1569 1057 -c 1570 1061 I 1570 1061 1570 1061 1570 1062 -c 1571 1066 I 1571 1067 1571 1067 1571 1067 -c 1570 1072 I 1570 1072 1570 1072 1570 1073 -c 1569 1077 I 1569 1077 1568 1077 1568 1077 -c 1566 1081 I 1566 1082 1566 1082 1566 1082 -c 1563 1085 I 1563 1086 1563 1086 1563 1086 -c 1559 1089 I 1559 1089 1559 1089 1559 1089 -c 1555 1091 I 1555 1091 1554 1091 1554 1091 -c 1550 1093 I 1550 1093 1549 1093 1549 1093 -c 1544 1093 I 1544 1093 1544 1093 1544 1093 -c 1539 1093 I 1539 1093 1539 1093 1538 1093 -c 1534 1091 I 1534 1091 1534 1091 1534 1091 -c 1530 1089 I 1529 1089 1529 1089 1529 1089 -c 1526 1086 I 1525 1086 1525 1086 1525 1085 -c 1522 1082 I 1522 1082 1522 1082 1522 1081 -c 1520 1077 I 1520 1077 1520 1077 1520 1077 -c 1518 1073 I 1518 1072 1518 1072 1518 1072 -c C 
1524 1071 M 1524 1071 I 1525 1075 I 1525 1075 I 1527 1079 I 1527 1078 I 1530 1082 I 1529 1081 I 1533 1084 I 1532 1083 I 1536 1086 I 1536 1085 I 1540 1087 I 1540 1087 I 1544 1087 I 1544 1087 I 1549 1087 I 1548 1087 I 1552 1085 I 1552 1086 I 1556 1084 I 1555 1084 I 1559 1081 I 1558 1082 I 1561 1078 I 1561 1079 I 1563 1075 I 1563 1075 I 1564 1071 I 1564 1071 I 1564 1066 I 1564 1067 I 1564 1062 I 1564 1063 I 1563 1059 I 1563 1059 I 1561 1055 I 1561 1056 I 1558 1052 I 1559 1053 I 1555 1050 I 1556 1050 I 1552 1048 I 1552 1048 I 1548 1047 I 1549 1047 I 1544 1046 I 1544 1046 I 1540 1047 I 1540 1047 I 1536 1048 I 1536 1048 I 1532 1050 I 1533 1050 I 1529 1053 I 1530 1052 I 1527 1056 I 1527 1055 I 1525 1059 I 1525 1059 I 1524 1063 I 1524 1062 I 1524 1067 I 1524 1066 I C 
:  L ; : 0.125 0.125 +S K 
; Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_Text 5.0 0
/TextInit{TextInitialised? not{/Pscript_Windows_Font & d/TextInitialised? T d
/fM[1 0 0 1 0 0]d/mFM matrix d/iMat[1 0 0.212557 1 0 0]d}if}b/copyfont{1 ^
length add dict `{1 ^/FID ne{d}{! !}?}forall & E}b/EncodeDict 11 dict d/bullets
{{/bullet}repeat}b/rF{3 copyfont @ ` ~ EncodeDict ~ get/Encoding ~ 3 ^/0 eq{&
/CharStrings known{CharStrings/Eth known not{! EncodeDict/ANSIEncodingOld get}
if}if}if d E}b/mF{@ 7 1 $ findfont ~{@/Encoding get @ StandardEncoding eq{! T}{
{ISOLatin1Encoding}stopped{! F}{eq}?{T}{@ ` T 32 1 127{Encoding 1 ^ get
StandardEncoding 3 -1 $ get eq and}for E}?}?}{F}?{1 ^ ~ rF}{0 copyfont}? 6 -2 $
! ! ~ !/pd_charset @ where{~ get 128 eq{@ FDV 2 copy get @ length array copy
put pd_CoverFCRange}if}{!}? 2 ^ ~ definefont fM 5 4 -1 $ put fM 4 0 put fM
makefont Pscript_Windows_Font 3 1 $ put}b/sLT{: Lw -M currentpoint snap M 0 - 0
Lc K ;}b/xUP null d/yUP null d/uW null d/xSP null d/ySP null d/sW null d/sSU{N
/uW ~ d/yUP ~ d/xUP ~ d}b/sU{xUP yUP uW sLT}b/sST{N/sW ~ d/ySP ~ d/xSP ~ d}b/sT
{xSP ySP sW sLT}b/sR{: + R 0 0 M}b/sRxy{: matrix astore concat 0 0 M}b/eR/; , d
/AddOrigFP{{&/FontInfo known{&/FontInfo get length 6 add}{6}? dict `
/WinPitchAndFamily ~ d/WinCharSet ~ d/OrigFontType ~ d/OrigFontStyle ~ d
/OrigFontName ~ d & E/FontInfo ~ d}{! ! ! ! !}?}b/mFS{makefont
Pscript_Windows_Font 3 1 $ put}b/mF42D{0 copyfont `/FontName ~ d 2 copy ~ sub 1
add dict `/.notdef 0 d 2 copy 1 ~{@ 3 ^ sub Encoding ~ get ~ d}for & E
/CharStrings ~ d ! ! & @ E/FontName get ~ definefont}b/mF42{15 dict ` @ 4 1 $
FontName ~ d/FontType 0 d/FMapType 2 d/FontMatrix[1 0 0 1 0 0]d 1 ^ 254 add 255
idiv @ array/Encoding ~ d 0 1 3 -1 $ 1 sub{@ Encoding 3 1 $ put}for/FDepVector
Encoding length array d/CharStrings 2 dict `/.notdef 0 d & E d 0 1 Encoding
length 1 sub{@ @ 10 lt{! FontName length 1 add string}{100 lt{FontName length 2
add string}{FontName length 3 add string}?}? @ 0 FontName @ length string cvs
putinterval @ 3 -1 $ @ 4 1 $ 3 string cvs FontName length ~ putinterval cvn 1 ^
256 mul @ 255 add 3 -1 $ 4 ^ findfont mF42D FDepVector 3 1 $ put}for & @ E
/FontName get ~ definefont ! ! ! mF}b/mF_OTF_V{~ ! ~ ! 4 -1 $ ! findfont 2 ^ ~
definefont fM @ @ 4 6 -1 $ neg put 5 0 put 90 matrix R matrix concatmatrix
makefont Pscript_Windows_Font 3 1 $ put}b/mF_TTF_V{3{~ !}repeat 3 -1 $ !
findfont 1 ^ ~ definefont Pscript_Windows_Font 3 1 $ put}b/UmF{L2?
{Pscript_Windows_Font ~ undef}{!}?}b/UmF42{@ findfont/FDepVector get{/FontName
get undefinefont}forall undefinefont}b
%%EndResource
end reinitialize
Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_Encoding256 5.0 0
/CharCol256Encoding[/.notdef/breve/caron/dotaccent/dotlessi/fi/fl/fraction
/hungarumlaut/Lslash/lslash/minus/ogonek/ring/Zcaron/zcaron/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/space/exclam/quotedbl/numbersign
/dollar/percent/ampersand/quotesingle/parenleft/parenright/asterisk/plus/comma
/hyphen/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O/P/Q/R/S
/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore/grave
/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright
/asciitilde/.notdef/Euro/.notdef/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef
/.notdef/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis/.notdef/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/.notdef/registered
/macron/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph
/periodcentered/cedilla/onesuperior/ordmasculine/guillemotright/onequarter
/onehalf/threequarters/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis
/Aring/AE/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute
/Icircumflex/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve
/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis]def EncodeDict/256 CharCol256Encoding put
%%EndResource
end reinitialize

%%IncludeResource: font Times-Italic
Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_Win_Euro_L2 5.0 0
/UseT3EuroFont{/currentdistillerparams where{pop currentdistillerparams
/CoreDistVersion get 4000 le}{false}ifelse}bind def/NewEuroT3Font?{dup/FontType
get 3 eq{dup/EuroFont known exch/BaseFont known and}{pop false}ifelse}bind def
/T1FontHasEuro{dup/CharStrings known not{dup NewEuroT3Font?{dup/EuroGlyphName
get exch/EuroFont get/CharStrings get exch known{true}{false}ifelse}{pop false}
ifelse}{dup/FontType get 1 eq{/CharStrings get/Euro known}{dup/InfoDict known{
/InfoDict get/Euro known}{/CharStrings get/Euro known}ifelse}ifelse}ifelse}bind
def/FontHasEuro{findfont dup/Blend known{pop true}{T1FontHasEuro}ifelse}bind
def/EuroEncodingIdx 1 def/EuroFontHdr{12 dict begin/FontInfo 10 dict dup begin
/version(001.000)readonly def/Notice(Copyright (c)1999 Adobe Systems
Incorporated. All Rights Reserved.)readonly def/FullName(Euro)readonly def
/FamilyName(Euro)readonly def/Weight(Regular)readonly def/isFixedPitch false
def/ItalicAngle 0 def/UnderlinePosition -100 def/UnderlineThickness 50 def end
readonly def/FontName/Euro def/Encoding 256 array 0 1 255{1 index exch/.notdef
put}for def/PaintType 0 def/FontType 1 def/FontMatrix[0.001 0 0 0.001 0 0]def
/FontBBox{-25 -23 1500 804}readonly def currentdict end dup/Private 20 dict dup
begin/ND{def}def/NP{put}def/lenIV -1 def/RD{string currentfile exch
readhexstring pop}def/-|{string currentfile exch readstring pop}executeonly def
/|-{def}executeonly def/|{put}executeonly def/BlueValues[-20 0 706 736 547 572]
|-/OtherBlues[-211 -203]|-/BlueScale 0.0312917 def/MinFeature{16 16}|-/StdHW
[60]|-/StdVW[71]|-/ForceBold false def/password 5839 def/Erode{8.5 dup 3 -1
roll 0.1 mul exch 0.5 sub mul cvi sub dup mul 71 0 dtransform dup mul exch dup
mul add le{pop pop 1.0 1.0}{pop pop 0.0 1.5}ifelse}def/OtherSubrs[{}{}{}
{systemdict/internaldict known not{pop 3}{1183615869 systemdict/internaldict
get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck
get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]|-/Subrs 5 array dup 0
<8E8B0C100C110C110C210B>put dup 1<8B8C0C100B>put dup 2<8B8D0C100B>put dup 3<0B>
put dup 4<8E8C8E0C100C110A0B>put |- 2 index/CharStrings 256 dict dup begin
/.notdef<8b8b0d0e>def end end put put dup/FontName get exch definefont pop}bind
def/AddEuroGlyph{2 index exch EuroEncodingIdx 1 eq{EuroFontHdr}if systemdict
begin/Euro findfont dup dup/Encoding get 5 1 roll/Private get begin/CharStrings
get dup 3 index known{pop pop pop pop end end}{begin 1 index exch def end end
end EuroEncodingIdx dup 1 add/EuroEncodingIdx exch def exch put}ifelse}bind def
/GetNewXUID{currentdict/XUID known{[7 XUID aload pop]true}{currentdict/UniqueID
known{[7 UniqueID]true}{false}ifelse}ifelse}bind def/BuildT3EuroFont{exch 16
dict begin dup/FontName exch def findfont dup/Encoding get/Encoding exch def
dup length 1 add dict copy dup/FID undef begin dup dup/FontName exch def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for def GetNewXUID{/XUID
exch def}if currentdict end definefont pop/BaseFont exch findfont 1000
scalefont def/EuroFont exch findfont 1000 scalefont def pop/EuroGlyphName exch
def/FontType 3 def/FontMatrix[.001 0 0 .001 0 0]def/FontBBox BaseFont/FontBBox
get def/Char 1 string def/BuildChar{exch dup begin/Encoding get 1 index get
/Euro eq{BaseFont T1FontHasEuro{false}{true}ifelse}{false}ifelse{EuroFont
setfont pop userdict/Idx 0 put EuroFont/Encoding get{EuroGlyphName eq{exit}
{userdict/Idx Idx 1 add put}ifelse}forall userdict/Idx get}{dup dup Encoding
exch get BaseFont/Encoding get 3 1 roll put BaseFont setfont}ifelse Char 0 3 -1
roll put Char stringwidth newpath 0 0 moveto Char true charpath flattenpath
pathbbox setcachedevice 0 0 moveto Char show end}bind def currentdict end dup
/FontName get exch definefont pop}bind def/AddEuroToT1Font{dup findfont dup
length 10 add dict copy dup/FID undef begin/EuroFont 3 -1 roll findfont 1000
scalefont def CharStrings dup length 1 add dict copy begin/Euro{EuroFont
setfont pop EuroGBBox aload pop setcachedevice 0 0 moveto EuroGName glyphshow}
bind def currentdict end/CharStrings exch def GetNewXUID{/XUID exch def}if 3 1
roll/EuroGBBox exch def/EuroGName exch def currentdict end definefont pop}bind
def/BuildNewFont{UseT3EuroFont{BuildT3EuroFont}{pop AddEuroToT1Font}ifelse}bind
def/UseObliqueEuro{findfont/FontMatrix get dup 2 get 0 eq exch dup 0 get exch 3
get eq and UseT3EuroFont or}bind def
%%EndResource
end reinitialize
/Times-Italic FontHasEuro not
{
/Euro.Times-Italic
 [500 0 23 -7 578 676 ] 
<A2F8880DDBDB03F7F8A003F88D9D0384A701F79DBB01F802BB01F91CA7018F0ADBDB03F7
F8A003F88D9D0384A701F79DBB01F802BB01F89CF71301F8BFF93315770680758A89818B
08848B79947592088F0ADBDB03F7F8A003F88D9D0384A701F79DBB01F802BB01F91CA701
75916F926D8B08FB0E8B27FB0A5BFB24084606735B05D6068879857A8A79084A06745B05
DD068A7D8A7C8B7C08FB01B3FB0BF7101EA28BA4919E94089D94948F928B08928B8D858D
7508A006B0F72205780679674E3D438B08477BD1D11F8BB290B28FA508F76306A2BB05FB
71068D9D929C8F9D08F77E06A3BB05FB88069FDEC8F72BEC8B08D9B757461F84078F0ADB
DB03F7F8A003F88D9D0384A701F79DBB01F802BB01F89CF713019D06090E>
AddEuroGlyph
/Euro /Times-Italic /Times-Italic-Copy BuildNewFont
} if
F /F0 0 /256 T /Times-Italic mF 
/F0S96YFFFFFF69 F0 [150.145 0 0 -150.133 0 0 ] mFS
F0S96YFFFFFF69 Ji 
1421 1164 M (a)S 
N 1251 856 M 1251 843 1261 833 1274 833 -c 1287 833 1297 843 1297 856 -c 1297 869 1287 880 1274 880 -c 1261 880 1251 869 1251 856 -c C 
 O N 1248 857 M 1247 856 1247 856 1248 856 -c 1248 851 I 1248 851 1248 851 1248 851 -c 1250 846 I 1250 846 1250 846 1250 846 -c 1252 842 I 1252 841 1252 841 1252 841 -c 1255 838 I 1255 837 1255 837 1256 837 -c 1259 834 I 1259 834 1259 834 1259 834 -c 1263 832 I 1264 832 1264 832 1264 832 -c 1268 830 I 1269 830 1269 830 1269 830 -c 1274 830 I 1274 830 1274 830 1274 830 -c 1279 830 I 1279 830 1279 830 1280 830 -c 1284 832 I 1284 832 1284 832 1285 832 -c 1289 834 I 1289 834 1289 834 1289 834 -c 1293 837 I 1293 837 1293 837 1293 838 -c 1296 841 I 1296 841 1296 841 1296 842 -c 1298 846 I 1298 846 1299 846 1299 846 -c 1300 851 I 1300 851 1300 851 1300 851 -c 1301 856 I 1301 856 1301 856 1301 857 -c 1300 861 I 1300 862 1300 862 1300 862 -c 1299 866 I 1299 867 1298 867 1298 867 -c 1296 871 I 1296 871 1296 871 1296 871 -c 1293 875 I 1293 875 1293 875 1293 875 -c 1289 878 I 1289 878 1289 878 1289 878 -c 1285 881 I 1284 881 1284 881 1284 881 -c 1280 882 I 1279 882 1279 882 1279 882 -c 1274 883 I 1274 883 1274 883 1274 883 -c 1269 882 I 1269 882 1269 882 1268 882 -c 1264 881 I 1264 881 1264 881 1263 880 -c 1259 878 I 1259 878 1259 878 1259 878 -c 1256 875 I 1255 875 1255 875 1255 875 -c 1252 871 I 1252 871 1252 871 1252 871 -c 1250 867 I 1250 867 1250 867 1250 866 -c 1248 862 I 1248 862 1248 862 1248 861 -c C 
1254 861 M 1254 860 I 1255 864 I 1255 864 I 1257 868 I 1257 867 I 1260 871 I 1259 870 I 1263 873 I 1262 873 I 1266 875 I 1266 875 I 1270 876 I 1270 876 I 1274 877 I 1274 877 I 1278 876 I 1278 876 I 1282 875 I 1282 875 I 1286 873 I 1285 873 I 1289 870 I 1288 871 I 1291 867 I 1291 868 I 1293 864 I 1293 864 I 1294 860 I 1294 861 I 1294 856 I 1294 857 I 1294 852 I 1294 852 I 1293 848 I 1293 849 I 1291 845 I 1291 845 I 1288 842 I 1289 842 I 1285 839 I 1286 840 I 1282 837 I 1282 838 I 1278 836 I 1278 836 I 1274 836 I 1274 836 I 1270 836 I 1270 836 I 1266 838 I 1266 837 I 1262 839 I 1263 839 I 1259 842 I 1260 842 I 1257 845 I 1257 845 I 1255 849 I 1255 848 I 1254 852 I 1254 852 I 1254 857 I 1254 856 I C 
:  L ; : 0.125 0.125 +S K 
; 1239 1003 M (z)S 
N 1913 691 M 1913 678 1923 668 1936 668 -c 1949 668 1959 678 1959 691 -c 1959 704 1949 715 1936 715 -c 1923 715 1913 704 1913 691 -c C 
 O N 1910 692 M 1909 692 1909 691 1910 691 -c 1910 686 I 1910 686 1910 686 1910 686 -c 1912 681 I 1912 681 1912 681 1912 681 -c 1914 677 I 1914 677 1914 677 1914 676 -c 1917 673 I 1917 673 1917 673 1918 672 -c 1921 670 I 1921 669 1921 669 1922 669 -c 1926 667 I 1926 667 1926 667 1926 667 -c 1930 666 I 1931 665 1931 665 1931 665 -c 1936 665 I 1936 665 1936 665 1936 665 -c 1941 665 I 1941 665 1942 665 1942 666 -c 1946 667 I 1946 667 1947 667 1947 667 -c 1951 669 I 1951 669 1951 669 1951 670 -c 1955 672 I 1955 673 1955 673 1955 673 -c 1958 676 I 1958 677 1958 677 1958 677 -c 1960 681 I 1960 681 1961 681 1961 681 -c 1962 686 I 1962 686 1962 686 1962 686 -c 1963 691 I 1963 691 1963 692 1963 692 -c 1962 697 I 1962 697 1962 697 1962 697 -c 1961 702 I 1961 702 1960 702 1960 702 -c 1958 706 I 1958 706 1958 706 1958 707 -c 1955 710 I 1955 710 1955 710 1955 711 -c 1951 713 I 1951 713 1951 714 1951 714 -c 1947 716 I 1947 716 1946 716 1946 716 -c 1942 717 I 1942 717 1941 717 1941 717 -c 1936 718 I 1936 718 1936 718 1936 718 -c 1931 717 I 1931 717 1931 717 1930 717 -c 1926 716 I 1926 716 1926 716 1926 716 -c 1922 714 I 1921 714 1921 713 1921 713 -c 1918 711 I 1917 710 1917 710 1917 710 -c 1914 707 I 1914 706 1914 706 1914 706 -c 1912 702 I 1912 702 1912 702 1912 702 -c 1910 697 I 1910 697 1910 697 1910 697 -c C 
1916 696 M 1916 695 I 1917 700 I 1917 699 I 1919 703 I 1919 703 I 1922 706 I 1921 706 I 1925 708 I 1924 708 I 1928 710 I 1928 710 I 1932 711 I 1932 711 I 1936 712 I 1936 712 I 1941 711 I 1940 711 I 1944 710 I 1944 710 I 1948 708 I 1947 708 I 1951 706 I 1950 706 I 1953 703 I 1953 703 I 1955 699 I 1955 700 I 1956 695 I 1956 696 I 1956 691 I 1956 692 I 1956 687 I 1956 688 I 1955 683 I 1955 684 I 1953 680 I 1953 680 I 1950 677 I 1951 677 I 1947 674 I 1948 675 I 1944 673 I 1944 673 I 1940 671 I 1941 672 I 1936 671 I 1936 671 I 1932 672 I 1932 671 I 1928 673 I 1928 673 I 1924 675 I 1925 674 I 1921 677 I 1922 677 I 1919 680 I 1919 680 I 1917 684 I 1917 683 I 1916 688 I 1916 687 I 1916 692 I 1916 691 I C 
:  L ; : 0.125 0.125 +S K 
; N 1538 1076 M 1524 1066 I 1524 1066 1523 1066 1523 1065 -c 1511 1053 I 1511 1053 1511 1053 1511 1053 -c 1502 1039 I 1501 1039 1501 1039 1501 1039 -c 1495 1024 I 1495 1024 1495 1023 1495 1023 -c 1492 1016 I 1491 1008 I 1490 1000 I 1491 991 I 1492 983 I 1494 975 I 1496 968 I 1500 960 I 1619 754 I 1623 747 I 1625 740 I 1627 733 I 1628 725 I 1628 718 I 1628 710 I 1626 703 I 1624 696 I 1625 696 I 1618 681 I 1618 682 I 1609 668 I 1609 668 I 1597 656 I 1598 657 I 1583 646 I 1582 645 1581 644 1582 642 -c 1583 641 1585 640 1586 641 -c 1594 645 I 1602 648 I 1610 651 I 1618 652 I 1626 653 I 1634 654 I 1650 652 I 1649 652 I 1664 647 I 1664 648 I 1677 640 I 1677 641 I 1689 630 I 1688 631 I 1698 618 I 1891 283 I 1901 270 I 1901 270 1901 270 1901 270 -c 1913 259 I 1913 259 1913 259 1914 259 -c 1927 252 I 1927 251 1928 251 1928 251 -c 1943 247 I 1943 247 1943 247 1944 247 -c 1960 245 I 1968 245 I 1977 246 I 1986 248 I 1994 251 I 2003 254 I 2011 258 I 2008 264 I 2000 260 I 1992 256 I 1984 254 I 1976 252 I 1968 251 I 1960 251 I 1944 253 I 1945 253 I 1930 257 I 1930 257 I 1917 264 I 1917 264 I 1905 274 I 1906 274 I 1897 286 I 1703 622 I 1693 635 I 1693 635 1693 635 1693 635 -c 1681 645 I 1681 646 1681 646 1680 646 -c 1667 653 I 1667 653 1666 653 1666 653 -c 1651 658 I 1651 658 1651 658 1650 658 -c 1634 660 I 1625 660 I 1617 659 I 1608 657 I 1600 654 I 1591 651 I 1583 647 I 1587 641 I 1601 651 I 1601 652 1602 652 1602 652 -c 1614 664 I 1614 664 1614 664 1614 664 -c 1623 678 I 1624 678 1624 679 1624 679 -c 1630 693 I 1630 694 1630 694 1630 694 -c 1633 702 I 1634 710 I 1635 718 I 1634 726 I 1633 734 I 1631 742 I 1628 750 I 1625 757 I 1506 963 I 1502 970 I 1500 977 I 1498 984 I 1497 992 I 1497 999 I 1497 1007 I 1499 1014 I 1501 1022 I 1500 1021 I 1507 1036 I 1507 1035 I 1516 1049 I 1516 1049 I 1528 1061 I 1527 1061 I 1542 1071 I C 
:  L ; : 0.125 0.125 +S K 
; 1468 665 M (R)S 
N 1922 1503 M 1936 1491 I 1941 1498 I 1927 1510 I 1922 1503 I C 
1906 1467 M 1997 1447 I 1959 1532 I 1906 1467 I C 
:  L ; : 0.125 0.125 +S K 
; 11 dict begin
/FontName /TT1AA6o00 def
/FontMatrix [1 2048 div 0 0 1 2048 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
AddFontInfoBegin
AddFontInfo
AddFontInfoEnd
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/lenIV -1 def
/RD {string currentfile exch readhexstring pop} def

2 index /CharStrings 256 dict dup begin
/.notdef 4 RD 
8b8b0d0e ND 
/zeta 184 RD 
cffa180df738ff000005c115f92306fb0407fb49fb05fb2dfb26fb0efb47
08fb0ffb484dfb3b8bfb2b088b399d4fb06508b063c674dd8608f681d77e
b77e08b77cb26ead6108ad5e9b588b4f088b48774e62530863535c635675
0856754a7f3e8b08bcf73805f70597c4bc8bde088ba782a478a00879a075
9971910870915990428e08258d3f9e58b30857b064be72ca0871c97ed28b
db088bf734c5f738f706f73f08f708f73ef71cf71ff732f70008fc3606f7
1c07090e ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/TT1AA6o00 findfont /Encoding get
dup 1 /zeta put
pop
F /F1 0 /0 F /TT1AA6o00 mF 
/F1S96YFFFFFF69 F1 [150.145 0 0 -150.133 0 0 ] mFS
F1S96YFFFFFF69 Ji 
1987 689 M <01>S 
11 dict begin
/FontName /TT1AA7o00 def
/FontMatrix [1 2048 div 0 0 1 2048 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
AddFontInfoBegin
AddFontInfo
AddFontInfoEnd
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/lenIV -1 def
/RD {string currentfile exch readhexstring pop} def

2 index /CharStrings 256 dict dup begin
/.notdef 4 RD 
8b8b0d0e ND 
/Gamma 107 RD 
a6ff000004a30dfadfff000005461591fbc005620689c77dbc71b00872b0
6ca367950866945690468c08fc1906fea0078b2d974fa17308a172c07ddd
89087007fcd106a607dd8dc099a1a408a2a396c78be908f9ef078be780c5
74a50875a3569a398e08a607fadf06090e ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/TT1AA7o00 findfont /Encoding get
dup 1 /Gamma put
pop
F /F2 0 /0 F /TT1AA7o00 mF 
/F2S96YFFFFFF69 F2 [150.145 0 0 -150.133 0 0 ] mFS
F2S96YFFFFFF69 Ji 
1942 1674 M <01>S 
F0S96YFFFFFF69 Ji 
1777 1273 M (R)S 

%%IncludeResource: font Times-Roman
/Times-Roman FontHasEuro not
{
/Euro.Times-Roman
 [500 0 24 -14 493 676 ] 
<A3F8880DC0EB03F854F743950C0C037DA501F7A0BB01F805BB01F91EA501F869F8911584
F73A0576068478827E7F8B087F8B70AC438B082A8BFB0D6471FB700863067C5B05BE068A
7E8B878B7D08750764067D5B05C206A0FB7BF71858E88B088F0AC0EB03F84BF789950C0C
037DA501F7A0BB01F805BB01F91EA501CA8BACAC998B08988B95809076088F0AC0EB03F8
54F743950C0C037DA501F7A0BB01F805BB01F91EA501A00692F73705750675FB09417667
8B083A8B43C182F75E08F7740699BB05FB84069C078B978C978B9708F7950699BB05FBA1
069AF755D5B3D18B08AB8BDD71A2FB0708090E>
AddEuroGlyph
/Euro /Times-Roman /Times-Roman-Copy BuildNewFont
} if
F /F3 0 /256 T /Times-Roman mF 
/F3S64YFFFFFF9B F3 [100.094 0 0 -100.09 0 0 ] mFS
F3S64YFFFFFF9B Ji 
1869 1309 M (1)S 
N 2105 1088 M 2105 1092 I 2104 1093 2104 1093 2104 1094 -c 2101 1098 I 2101 1098 2101 1098 2101 1099 -c 2097 1103 I 2096 1103 2096 1103 2096 1103 -c 2091 1106 I 2090 1106 2090 1107 2090 1107 -c 2083 1110 I 2075 1112 I 2066 1113 I 2056 1114 I 1872 1114 I 1863 1114 I 1854 1116 I 1847 1118 I 1840 1120 I 1841 1120 I 1835 1124 I 1836 1123 I 1831 1127 I 1832 1127 I 1829 1131 I 1830 1130 I 1829 1135 I 1828 1136 1827 1137 1826 1137 -c 1824 1137 1823 1136 1823 1135 -c 1822 1130 I 1822 1131 I 1819 1127 I 1820 1127 I 1816 1123 I 1816 1124 I 1810 1120 I 1811 1120 I 1804 1118 I 1797 1116 I 1788 1114 I 1779 1114 I 1595 1114 I 1585 1113 I 1576 1112 I 1568 1110 I 1561 1107 I 1561 1107 1561 1106 1561 1106 -c 1555 1103 I 1555 1103 1555 1103 1554 1103 -c 1550 1099 I 1550 1098 1550 1098 1550 1098 -c 1547 1094 I 1547 1093 1547 1093 1547 1092 -c 1546 1088 I 1552 1087 I 1553 1091 I 1552 1090 I 1555 1095 I 1555 1094 I 1559 1098 I 1558 1098 I 1564 1101 I 1563 1101 I 1570 1104 I 1577 1106 I 1586 1107 I 1595 1107 I 1780 1108 I 1789 1108 I 1798 1109 I 1806 1112 I 1813 1115 I 1813 1115 1814 1115 1814 1115 -c 1819 1118 I 1820 1118 1820 1119 1820 1119 -c 1824 1123 I 1824 1123 1824 1123 1825 1123 -c 1827 1128 I 1828 1128 1828 1128 1828 1129 -c 1829 1133 I 1823 1133 I 1823 1129 I 1823 1128 1824 1128 1824 1128 -c 1827 1123 I 1827 1123 1827 1123 1827 1123 -c 1831 1119 I 1832 1119 1832 1118 1832 1118 -c 1837 1115 I 1838 1115 1838 1115 1838 1115 -c 1845 1112 I 1853 1109 I 1862 1108 I 1872 1107 I 2056 1108 I 2065 1107 I 2073 1106 I 2081 1104 I 2088 1101 I 2087 1101 I 2093 1098 I 2092 1098 I 2097 1094 I 2096 1095 I 2099 1090 I 2098 1091 I 2099 1087 I C 
:  L ; : 0.125 0.125 +S K 
; LH
%%PageTrailer

%%Trailer
%%DocumentNeededResources: 
%%+ font Times-Italic
%%+ font Times-Roman
%%DocumentSuppliedResources: 
%%+ procset Pscript_WinNT_ErrorHandler 5.0 0
%%+ procset Pscript_FatalError 5.0 0
%%+ procset Pscript_Win_Basic 5.0 0
%%+ procset Pscript_Win_Utils_L2 5.0 0
%%+ procset Pscript_Win_GdiObject 5.0 0
%%+ procset Pscript_Win_GdiObject_L2 5.0 0
%%+ procset Pscript_Text 5.0 0
%%+ procset Pscript_Encoding256 5.0 0
%%+ procset Pscript_Win_Euro_L2 5.0 0
Pscript_WinNT_Incr dup /terminate get exec
%%EOF
