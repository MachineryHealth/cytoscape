%!PS-Adobe-3.0 EPSF-3.0
%%Title: WMF2EPS 1.32  : WMF->EPS conversion for align_traceback1.wmf
%%Creator: PScript5.dll Version 5.2.2
%%CreationDate: 4/3/2005 11:3:9
%%For: rsaito
%%BoundingBox: 56 56 397 255
%%Pages: 1
%%Orientation: Portrait
%%PageOrder: Ascend
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentData: Clean7Bit
%%TargetDevice: (WMF2EPS Color PS) (2010.0) 2
%%LanguageLevel: 2
%%EndComments

%%BeginDefaults
%%PageBoundingBox: 0 0 397 255
%%ViewingOrientation: 1 0 0 1
%%EndDefaults

%%BeginProlog
%%BeginResource: file Pscript_WinNT_ErrorHandler 5.0 0
/currentpacking where{pop/oldpack currentpacking def/setpacking where{pop false
setpacking}if}if/$brkpage 64 dict def $brkpage begin/prnt{dup type/stringtype
ne{=string cvs}if dup length 6 mul/tx exch def/ty 10 def currentpoint/toy exch
def/tox exch def 1 setgray newpath tox toy 2 sub moveto 0 ty rlineto tx 0
rlineto 0 ty neg rlineto closepath fill tox toy moveto 0 setgray show}bind def
/nl{currentpoint exch pop lmargin exch moveto 0 -10 rmoveto}def/=={/cp 0 def
typeprint nl}def/typeprint{dup type exec}readonly def/lmargin 72 def/rmargin 72
def/tprint{dup length cp add rmargin gt{nl/cp 0 def}if dup length cp add/cp
exch def prnt}readonly def/cvsprint{=string cvs tprint( )tprint}readonly def
/integertype{cvsprint}readonly def/realtype{cvsprint}readonly def/booleantype
{cvsprint}readonly def/operatortype{(--)tprint =string cvs tprint(-- )tprint}
readonly def/marktype{pop(-mark- )tprint}readonly def/dicttype{pop
(-dictionary- )tprint}readonly def/nulltype{pop(-null- )tprint}readonly def
/filetype{pop(-filestream- )tprint}readonly def/savetype{pop(-savelevel- )
tprint}readonly def/fonttype{pop(-fontid- )tprint}readonly def/nametype{dup
xcheck not{(/)tprint}if cvsprint}readonly def/stringtype{dup rcheck{(\()tprint
tprint(\))tprint}{pop(-string- )tprint}ifelse}readonly def/arraytype{dup rcheck
{dup xcheck{({)tprint{typeprint}forall(})tprint}{([)tprint{typeprint}forall(])
tprint}ifelse}{pop(-array- )tprint}ifelse}readonly def/packedarraytype{dup
rcheck{dup xcheck{({)tprint{typeprint}forall(})tprint}{([)tprint{typeprint}
forall(])tprint}ifelse}{pop(-packedarray- )tprint}ifelse}readonly def/courier
/Courier findfont 10 scalefont def end errordict/handleerror{systemdict begin
$error begin $brkpage begin newerror{/newerror false store vmstatus pop pop 0
ne{grestoreall}if errorname(VMerror)ne{showpage}if initgraphics courier setfont
lmargin 720 moveto errorname(VMerror)eq{userdict/ehsave known{clear userdict
/ehsave get restore 2 vmreclaim}if vmstatus exch pop exch pop PrtVMMsg}{
(ERROR: )prnt errorname prnt nl(OFFENDING COMMAND: )prnt/command load prnt
$error/ostack known{nl nl(STACK:)prnt nl nl $error/ostack get aload length{==}
repeat}if}ifelse systemdict/showpage get exec(%%[ Error: )print errorname
=print(; OffendingCommand: )print/command load =print( ]%%)= flush}if end end
end}dup 0 systemdict put dup 4 $brkpage put bind readonly put/currentpacking
where{pop/setpacking where{pop oldpack setpacking}if}if
%%EndResource
userdict /Pscript_WinNT_Incr 230 dict dup begin put
%%BeginResource: file Pscript_FatalError 5.0 0
userdict begin/FatalErrorIf{{initgraphics findfont 1 index 0 eq{exch pop}{dup
length dict begin{1 index/FID ne{def}{pop pop}ifelse}forall/Encoding
{ISOLatin1Encoding}stopped{StandardEncoding}if def currentdict end
/ErrFont-Latin1 exch definefont}ifelse exch scalefont setfont counttomark 3 div
cvi{moveto show}repeat showpage quit}{cleartomark}ifelse}bind def end
%%EndResource
userdict begin/PrtVMMsg{vmstatus exch sub exch pop gt{[
(This job requires more memory than is available in this printer.)100 500
(Try one or more of the following, and then print again:)100 485
(For the output format, choose Optimize For Portability.)115 470
(In the Device Settings page, make sure the Available PostScript Memory is accurate.)
115 455(Reduce the number of fonts in the document.)115 440
(Print the document in parts.)115 425 12/Times-Roman[/GothicBBB-Medium-RKSJ-H
dup{findfont}stopped{cleartomark}{/FontName get eq{pop cleartomark[
<82B182CC83578387837582CD8CBB8DDD82B182CC8376838A8393835E82C59798977082C582AB82
E988C88FE382CC83818382838A82F0954B977682C682B582DC82B7814288C889BA82CC8A6590DD9
2E8>90 500<82CC88EA82C2814182DC82BD82CD82BB82CC916782DD8D8782ED82B982F08E7792
E882B582BD8CE381418376838A8393836782B592BC82B582C482DD82C482AD82BE82B382A28142>
90 485<A5506F73745363726970748376838D8370836583428356815B836782A982E7814183478
389815B82AA8C798CB882B782E982E682A482C98DC5934B89BB2082F0914991F082B782E98142>
90 455<A58366836F83438358834983768356838783938376838D8370836583428356815B83678
2CC209798977082C582AB82E98376838A8393835E83818382838A2082CC926C82AA90B382B582A2
82B182C682F08A6D944682B782E98142>90 440<A58368834C8385838183938367928682C58E6
7977082B382EA82C482A282E9837483488393836782CC909482F08CB882E782B78142>90 425
<A58368834C838583818393836782F095AA8A8482B582C48376838A8393836782B782E98142>90
410 10 0/GothicBBB-Medium-RKSJ-H}{cleartomark}ifelse}ifelse showpage
(%%[ PrinterError: Low Printer VM ]%%)= true FatalErrorIf}if}bind def end
version cvi 2016 ge{/VM?{pop}bind def}{/VM? userdict/PrtVMMsg get def}ifelse
%%BeginResource: file Pscript_Win_Basic 5.0 0
/d/def load def/,/load load d/~/exch , d/?/ifelse , d/!/pop , d/`/begin , d/^
/index , d/@/dup , d/+/translate , d/$/roll , d/U/userdict , d/M/moveto , d/-
/rlineto , d/&/currentdict , d/:/gsave , d/;/grestore , d/F/false , d/T/true ,
d/N/newpath , d/E/end , d/Ac/arc , d/An/arcn , d/A/ashow , d/D/awidthshow , d/C
/closepath , d/V/div , d/O/eofill , d/L/fill , d/I/lineto , d/-c/curveto , d/-M
/rmoveto , d/+S/scale , d/Ji/setfont , d/Lc/setlinecap , d/Lj/setlinejoin , d
/Lw/setlinewidth , d/Lm/setmiterlimit , d/sd/setdash , d/S/show , d/LH/showpage
, d/K/stroke , d/W/widthshow , d/R/rotate , d/L2? false/languagelevel where{pop
languagelevel 2 ge{pop true}if}if d L2?{/xS/xshow , d/yS/yshow , d/zS/xyshow ,
d}if/b{bind d}bind d/bd{bind d}bind d/xd{~ d}bd/ld{, d}bd/bn/bind ld/lw/Lw ld
/lc/Lc ld/lj/Lj ld/sg/setgray ld/ADO_mxRot null d/self & d/OrgMx matrix
currentmatrix d/reinitialize{: OrgMx setmatrix[/TextInit/GraphInit/UtilsInit
counttomark{@ where{self eq}{F}?{cvx exec}{!}?}repeat cleartomark ;}b
/initialize{`{/Pscript_Win_Data where{!}{U/Pscript_Win_Data & put}?/ADO_mxRot ~
d/TextInitialised? F d reinitialize E}{U/Pscript_Win_Data 230 dict @ ` put
/ADO_mxRot ~ d/TextInitialised? F d reinitialize}?}b/terminate{!{& self eq
{exit}{E}?}loop E}b/suspend/terminate , d/resume{` Pscript_Win_Data `}b U `
/lucas 21690 d/featurebegin{countdictstack lucas[}b/featurecleanup{stopped
{cleartomark @ lucas eq{! exit}if}loop countdictstack ~ sub @ 0 gt{{E}repeat}
{!}?}b E/snap{transform 0.25 sub round 0.25 add ~ 0.25 sub round 0.25 add ~
itransform}b/dsnap{dtransform round ~ round ~ idtransform}b/nonzero_round{@ 0.5
ge{round}{@ -0.5 lt{round}{0 ge{1}{-1}?}?}?}b/nonzero_dsnap{dtransform
nonzero_round ~ nonzero_round ~ idtransform}b U<04>cvn{}put/rr{1 ^ 0 - 0 ~ -
neg 0 - C}b/irp{4 -2 $ + +S fx 4 2 $ M 1 ^ 0 - 0 ~ - neg 0 -}b/rp{4 2 $ M 1 ^ 0
- 0 ~ - neg 0 -}b/solid{[]0 sd}b/g{@ not{U/DefIf_save save put}if U/DefIf_bool
2 ^ put}b/DefIf_El{if U/DefIf_bool get not @{U/DefIf_save get restore}if}b/e
{DefIf_El !}b/UDF{L2?{undefinefont}{!}?}b/UDR{L2?{undefineresource}{! !}?}b
/freeVM{/Courier findfont[40 0 0 -40 0 0]makefont Ji 2 vmreclaim}b/hfRedefFont
{findfont @ length dict `{1 ^/FID ne{d}{! !}?}forall & E @ ` ~{/CharStrings 1
dict `/.notdef 0 d & E d}if/Encoding 256 array 0 1 255{1 ^ ~/.notdef put}for d
E definefont !}bind d/hfMkCIDFont{/CIDFont findresource @ length 2 add dict `{1
^ @/FID eq ~ @/XUID eq ~/UIDBase eq or or{! !}{d}?}forall/CDevProc ~ d/Metrics2
16 dict d/CIDFontName 1 ^ d & E 1 ^ ~/CIDFont defineresource ![~]composefont !}
bind d
%%EndResource
%%BeginResource: file Pscript_Win_Utils_L2 5.0 0
/rf/rectfill , d/fx{1 1 dtransform @ 0 ge{1 sub 0.5}{1 add -0.5}? 3 -1 $ @ 0 ge
{1 sub 0.5}{1 add -0.5}? 3 1 $ 4 1 $ idtransform 4 -2 $ idtransform}b/BZ{4 -2 $
snap + +S fx rf}b/rs/rectstroke , d/rc/rectclip , d/UtilsInit{currentglobal{F
setglobal}if}b/scol{! setcolor}b/colspA/DeviceGray d/colspABC/DeviceRGB d
/colspRefresh{colspABC setcolorspace}b/SetColSpace{colspABC setcolorspace}b
/resourcestatus where{!/ColorRendering/ProcSet resourcestatus{! ! T}{F}?}{F}?
not{/ColorRendering<</GetHalftoneName{currenthalftone @/HalftoneName known{
/HalftoneName get}{!/none}?}bn/GetPageDeviceName{currentpagedevice @
/PageDeviceName known{/PageDeviceName get @ null eq{!/none}if}{!/none}?}bn
/GetSubstituteCRD{!/DefaultColorRendering/ColorRendering resourcestatus{! !
/DefaultColorRendering}{(DefaultColorRendering*){cvn exit}127 string
/ColorRendering resourceforall}?}bn>>/defineresource where{!/ProcSet
defineresource !}{! !}?}if/buildcrdname{/ColorRendering/ProcSet findresource `
mark GetHalftoneName @ type @/nametype ne ~/stringtype ne and{!/none}if(.)
GetPageDeviceName @ type @/nametype ne ~/stringtype ne and{!/none}if(.)5 ^ 0 5
-1 1{^ length add}for string 6 1 $ 5 ^ 5{~ 1 ^ cvs length 1 ^ length 1 ^ sub
getinterval}repeat ! cvn 3 1 $ ! ! E}b/definecolorrendering{~ buildcrdname ~
/ColorRendering defineresource !}b/findcolorrendering where{!}{
/findcolorrendering{buildcrdname @/ColorRendering resourcestatus{! ! T}{
/ColorRendering/ProcSet findresource ` GetSubstituteCRD E F}?}b}?
/selectcolorrendering{findcolorrendering !/ColorRendering findresource
setcolorrendering}b/G2UBegin{findresource/FontInfo get/GlyphNames2Unicode get
`}bind d/G2CCBegin{findresource/FontInfo get/GlyphNames2HostCode get `}bind d
/G2UEnd{E}bind d/AddFontInfoBegin{/FontInfo 8 dict @ `}bind d/AddFontInfo{
/GlyphNames2Unicode 16 dict d/GlyphNames2HostCode 16 dict d}bind d
/AddFontInfoEnd{E d}bind d/T0AddCFFMtx2{/CIDFont findresource/Metrics2 get ` d
E}bind d
%%EndResource
end
%%EndProlog

%%BeginSetup
[ 1 0 0 1 0 0 ] false Pscript_WinNT_Incr dup /initialize get exec
1 setlinecap 1 setlinejoin
/mysetup [ 72 600 V 0 0 -72 600 V 0 255.40158 ] def 
%%EndSetup

%%Page: 1 1
%%PageBoundingBox: 0 0 397 255
%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
%%EndPageSetup

Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_Win_GdiObject 5.0 0
/SavedCTM null d/CTMsave{/SavedCTM SavedCTM currentmatrix d}b/CTMrestore
{SavedCTM setmatrix}b/mp null d/ADO_mxRot null d/GDIHMatrix null d
/GDIHPatternDict 22 dict d GDIHPatternDict `/PatternType 1 d/PaintType 2 d/Reps
L2?{1}{5}? d/XStep 8 Reps mul d/YStep XStep d/BBox[0 0 XStep YStep]d/TilingType
1 d/PaintProc{` 1 Lw[]0 sd PaintData , exec E}b/FGnd null d/BGnd null d
/HS_Horizontal{horiz}b/HS_Vertical{vert}b/HS_FDiagonal{fdiag}b/HS_BDiagonal
{biag}b/HS_Cross{horiz vert}b/HS_DiagCross{fdiag biag}b/MaxXYStep XStep YStep
gt{XStep}{YStep}? d/horiz{Reps{0 4 M XStep 0 - 0 8 +}repeat 0 -8 Reps mul + K}b
/vert{Reps{4 0 M 0 YStep - 8 0 +}repeat 0 -8 Reps mul + K}b/biag{Reps{0 0 M
MaxXYStep @ - 0 YStep neg M MaxXYStep @ - 0 8 +}repeat 0 -8 Reps mul + 0 YStep
M 8 8 - K}b/fdiag{Reps{0 0 M MaxXYStep @ neg - 0 YStep M MaxXYStep @ neg - 0 8
+}repeat 0 -8 Reps mul + MaxXYStep @ M 8 -8 - K}b E/makehatch{4 -2 $/yOrg ~ d
/xOrg ~ d GDIHPatternDict/PaintData 3 -1 $ put CTMsave GDIHMatrix setmatrix
GDIHPatternDict matrix xOrg yOrg + mp CTMrestore ~ U ~ 2 ^ put}b/h0{/h0
/HS_Horizontal makehatch}b/h1{/h1/HS_Vertical makehatch}b/h2{/h2/HS_FDiagonal
makehatch}b/h3{/h3/HS_BDiagonal makehatch}b/h4{/h4/HS_Cross makehatch}b/h5{/h5
/HS_DiagCross makehatch}b/GDIBWPatternMx null d/pfprep{save 8 1 $
/PatternOfTheDay 8 1 $ GDIBWPatternDict `/yOrg ~ d/xOrg ~ d/PaintData ~ d/yExt
~ d/Width ~ d/BGnd ~ d/FGnd ~ d/Height yExt RepsV mul d/mx[Width 0 0 Height 0
0]d E build_pattern ~ !}b/pfbf{/fEOFill ~ d pfprep hbf fEOFill{O}{L}? restore}b
/GraphInit{GDIHMatrix null eq{/SavedCTM matrix d : ADO_mxRot concat 0 0 snap +
: 0.48 @ GDIHPatternDict ` YStep mul ~ XStep mul ~ nonzero_dsnap YStep V ~
XStep V ~ E +S/GDIHMatrix matrix currentmatrix readonly d ; : 0.24 -0.24 +S
GDIBWPatternDict ` Width Height E nonzero_dsnap +S/GDIBWPatternMx matrix
currentmatrix readonly d ; ;}if}b
%%EndResource
%%BeginResource: file Pscript_Win_GdiObject_L2 5.0 0
/GDIBWPatternDict 25 dict @ `/PatternType 1 d/PaintType 1 d/RepsV 1 d/RepsH 1 d
/BBox[0 0 RepsH 1]d/TilingType 1 d/XStep 1 d/YStep 1 d/Height 8 RepsV mul d
/Width 8 d/mx[Width 0 0 Height neg 0 Height]d/FGnd null d/BGnd null d
/SetBGndFGnd{BGnd null ne{BGnd aload ! scol BBox aload ! 2 ^ sub ~ 3 ^ sub ~
rf}if FGnd null ne{FGnd aload ! scol}if}b/PaintProc{` SetBGndFGnd RepsH{Width
Height F mx PaintData imagemask Width 0 +}repeat E}b E d/mp/makepattern , d
/build_pattern{CTMsave GDIBWPatternMx setmatrix/nupangle where{! nupangle -90
eq{nupangle R}if}if GDIBWPatternDict @ ` Width Height ne{Width Height gt{Width
Height V 1}{1 Height Width V}? +S}if xOrg yOrg E matrix + mp CTMrestore}b/hbf
{setpattern}b/hf{:/fEOFill ~ d ~ ! setpattern fEOFill{O}{L}? ;}b/pbf{: !
/fEOFill ~ d GDIBWPatternDict `/yOrg ~ d/xOrg ~ d/PaintData ~ d/OutputBPP ~ d
/Height ~ d/Width ~ d/PaintType 1 d/PatternType 1 d/TilingType 1 d/BBox[0 0
Width Height]d/XStep Width d/YStep Height d/mx xOrg yOrg matrix + d 20 dict @ `
/ImageType 1 d/Width Width d/Height Height d/ImageMatrix[1 0 0 1 0 0]d
/BitsPerComponent 8 d OutputBPP 24 eq{/Decode[0 1 0 1 0 1]d}{OutputBPP 8 eq{
/Decode[0 1]d}{/Decode[0 1 0 1 0 1 0 1]d}?}?/DataSource{PaintData}d E/ImageDict
~ d/PaintProc{` ImageDict image E}b & mx makepattern setpattern E fEOFill{O}{L}
? ;}b/mask_pbf{:/fEOFill ~ d 20 dict `/yOrg ~ d/xOrg ~ d/PaintData ~ d/Height ~
d/Width ~ d/PatternType 1 d/PaintType 2 d/TilingType 1 d/BBox[0 0 Width Height]
d/XStep Width d/YStep Height d/mx xOrg yOrg matrix + d/PaintProc{` Width Height
T 1 1 dtransform abs ~ abs ~ 0 0 3 -1 $ 0 0 6 array astore{PaintData}imagemask
E}b & mx makepattern setpattern E fEOFill{O}{L}? ;}b
%%EndResource
end reinitialize
: 472 1 2835 1654 rc N 471 0 M 471 1654 I 3306 1654 I 3306 0 I 471 0 I C 
1 1 1 1 scol  O ; N 898 507 M 894 507 I 890 508 I 886 508 I 883 510 I 880 511 I 877 513 I 874 515 I 871 518 I 869 520 I 867 523 I 865 526 I 863 530 I 862 533 I 861 537 I 860 540 I 860 544 I 860 548 I 861 552 I 862 555 I 863 559 I 865 562 I 867 565 I 869 568 I 871 571 I 874 573 I 877 575 I 880 577 I 883 579 I 886 580 I 890 581 I 894 582 I 898 582 I 901 582 I 905 581 I 909 580 I 912 579 I 915 577 I 919 575 I 921 573 I 924 571 I 927 568 I 929 565 I 931 562 I 932 559 I 933 555 I 934 552 I 935 548 I 935 544 I 935 540 I 934 537 I 933 533 I 932 530 I 931 526 I 929 523 I 927 520 I 924 518 I 921 515 I 919 513 I 915 511 I 912 510 I 909 508 I 905 508 I 901 507 I 898 507 I C 
1 1 1 1 scol  O 0 0 0 1 scol 1 Lj 1 Lc 6 Lw solid N 898 507 M 894 507 I 890 508 I 886 508 I 883 510 I 880 511 I 877 513 I 874 515 I 871 518 I 869 520 I 867 523 I 865 526 I 863 530 I 862 533 I 861 537 I 860 540 I 860 544 I 860 548 I 861 552 I 862 555 I 863 559 I 865 562 I 867 565 I 869 568 I 871 571 I 874 573 I 877 575 I 880 577 I 883 579 I 886 580 I 890 581 I 894 582 I 898 582 I 901 582 I 905 581 I 909 580 I 912 579 I 915 577 I 919 575 I 921 573 I 924 571 I 927 568 I 929 565 I 931 562 I 932 559 I 933 555 I 934 552 I 935 548 I 935 544 I 935 540 I 934 537 I 933 533 I 932 530 I 931 526 I 929 523 I 927 520 I 924 518 I 921 515 I 919 513 I 915 511 I 912 510 I 909 508 I 905 508 I 901 507 I 898 507 I : 0.996 0.996 +S K 
; N 898 732 M 894 732 I 890 733 I 886 733 I 883 735 I 880 736 I 877 738 I 874 740 I 871 743 I 869 745 I 867 748 I 865 751 I 863 755 I 862 758 I 861 762 I 860 765 I 860 769 I 860 773 I 861 777 I 862 780 I 863 784 I 865 787 I 867 790 I 869 793 I 871 796 I 874 798 I 877 800 I 880 802 I 883 804 I 886 805 I 890 806 I 894 807 I 898 807 I 901 807 I 905 806 I 909 805 I 912 804 I 915 802 I 919 800 I 921 798 I 924 796 I 927 793 I 929 790 I 931 787 I 932 784 I 933 780 I 934 777 I 935 773 I 935 769 I 935 765 I 934 762 I 933 758 I 932 755 I 931 751 I 929 748 I 927 745 I 924 743 I 921 740 I 919 738 I 915 736 I 912 735 I 909 733 I 905 733 I 901 732 I 898 732 I C 
1 1 1 1 scol  O 0 0 0 1 scol N 898 732 M 894 732 I 890 733 I 886 733 I 883 735 I 880 736 I 877 738 I 874 740 I 871 743 I 869 745 I 867 748 I 865 751 I 863 755 I 862 758 I 861 762 I 860 765 I 860 769 I 860 773 I 861 777 I 862 780 I 863 784 I 865 787 I 867 790 I 869 793 I 871 796 I 874 798 I 877 800 I 880 802 I 883 804 I 886 805 I 890 806 I 894 807 I 898 807 I 901 807 I 905 806 I 909 805 I 912 804 I 915 802 I 919 800 I 921 798 I 924 796 I 927 793 I 929 790 I 931 787 I 932 784 I 933 780 I 934 777 I 935 773 I 935 769 I 935 765 I 934 762 I 933 758 I 932 755 I 931 751 I 929 748 I 927 745 I 924 743 I 921 740 I 919 738 I 915 736 I 912 735 I 909 733 I 905 733 I 901 732 I 898 732 I : 0.996 0.996 +S K 
; N 898 956 M 894 956 I 890 957 I 886 957 I 883 959 I 880 960 I 877 962 I 874 964 I 871 967 I 869 969 I 867 972 I 865 975 I 863 979 I 862 982 I 861 986 I 860 989 I 860 993 I 860 997 I 861 1001 I 862 1004 I 863 1008 I 865 1011 I 867 1014 I 869 1017 I 871 1020 I 874 1022 I 877 1024 I 880 1026 I 883 1028 I 886 1029 I 890 1030 I 894 1031 I 898 1031 I 901 1031 I 905 1030 I 909 1029 I 912 1028 I 915 1026 I 919 1024 I 921 1022 I 924 1020 I 927 1017 I 929 1014 I 931 1011 I 932 1008 I 933 1004 I 934 1001 I 935 997 I 935 993 I 935 989 I 934 986 I 933 982 I 932 979 I 931 975 I 929 972 I 927 969 I 924 967 I 921 964 I 919 962 I 915 960 I 912 959 I 909 957 I 905 957 I 901 956 I 898 956 I C 
1 1 1 1 scol  O 0 0 0 1 scol N 898 956 M 894 956 I 890 957 I 886 957 I 883 959 I 880 960 I 877 962 I 874 964 I 871 967 I 869 969 I 867 972 I 865 975 I 863 979 I 862 982 I 861 986 I 860 989 I 860 993 I 860 997 I 861 1001 I 862 1004 I 863 1008 I 865 1011 I 867 1014 I 869 1017 I 871 1020 I 874 1022 I 877 1024 I 880 1026 I 883 1028 I 886 1029 I 890 1030 I 894 1031 I 898 1031 I 901 1031 I 905 1030 I 909 1029 I 912 1028 I 915 1026 I 919 1024 I 921 1022 I 924 1020 I 927 1017 I 929 1014 I 931 1011 I 932 1008 I 933 1004 I 934 1001 I 935 997 I 935 993 I 935 989 I 934 986 I 933 982 I 932 979 I 931 975 I 929 972 I 927 969 I 924 967 I 921 964 I 919 962 I 915 960 I 912 959 I 909 957 I 905 957 I 901 956 I 898 956 I : 0.996 0.996 +S K 
; N 1123 507 M 1119 507 I 1115 508 I 1111 508 I 1108 510 I 1105 511 I 1102 513 I 1099 515 I 1096 518 I 1094 520 I 1092 523 I 1090 526 I 1088 530 I 1087 533 I 1086 537 I 1085 540 I 1085 544 I 1085 548 I 1086 552 I 1087 555 I 1088 559 I 1090 562 I 1092 565 I 1094 568 I 1096 571 I 1099 573 I 1102 575 I 1105 577 I 1108 579 I 1111 580 I 1115 581 I 1119 582 I 1123 582 I 1126 582 I 1130 581 I 1134 580 I 1137 579 I 1140 577 I 1144 575 I 1146 573 I 1149 571 I 1152 568 I 1154 565 I 1156 562 I 1157 559 I 1158 555 I 1159 552 I 1160 548 I 1160 544 I 1160 540 I 1159 537 I 1158 533 I 1157 530 I 1156 526 I 1154 523 I 1152 520 I 1149 518 I 1146 515 I 1144 513 I 1140 511 I 1137 510 I 1134 508 I 1130 508 I 1126 507 I 1123 507 I C 
1 1 1 1 scol  O 0 0 0 1 scol N 1123 507 M 1119 507 I 1115 508 I 1111 508 I 1108 510 I 1105 511 I 1102 513 I 1099 515 I 1096 518 I 1094 520 I 1092 523 I 1090 526 I 1088 530 I 1087 533 I 1086 537 I 1085 540 I 1085 544 I 1085 548 I 1086 552 I 1087 555 I 1088 559 I 1090 562 I 1092 565 I 1094 568 I 1096 571 I 1099 573 I 1102 575 I 1105 577 I 1108 579 I 1111 580 I 1115 581 I 1119 582 I 1123 582 I 1126 582 I 1130 581 I 1134 580 I 1137 579 I 1140 577 I 1144 575 I 1146 573 I 1149 571 I 1152 568 I 1154 565 I 1156 562 I 1157 559 I 1158 555 I 1159 552 I 1160 548 I 1160 544 I 1160 540 I 1159 537 I 1158 533 I 1157 530 I 1156 526 I 1154 523 I 1152 520 I 1149 518 I 1146 515 I 1144 513 I 1140 511 I 1137 510 I 1134 508 I 1130 508 I 1126 507 I 1123 507 I : 0.996 0.996 +S K 
; N 1123 732 M 1119 732 I 1115 733 I 1111 733 I 1108 735 I 1105 736 I 1102 738 I 1099 740 I 1096 743 I 1094 745 I 1092 748 I 1090 751 I 1088 755 I 1087 758 I 1086 762 I 1085 765 I 1085 769 I 1085 773 I 1086 777 I 1087 780 I 1088 784 I 1090 787 I 1092 790 I 1094 793 I 1096 796 I 1099 798 I 1102 800 I 1105 802 I 1108 804 I 1111 805 I 1115 806 I 1119 807 I 1123 807 I 1126 807 I 1130 806 I 1134 805 I 1137 804 I 1140 802 I 1144 800 I 1146 798 I 1149 796 I 1152 793 I 1154 790 I 1156 787 I 1157 784 I 1158 780 I 1159 777 I 1160 773 I 1160 769 I 1160 765 I 1159 762 I 1158 758 I 1157 755 I 1156 751 I 1154 748 I 1152 745 I 1149 743 I 1146 740 I 1144 738 I 1140 736 I 1137 735 I 1134 733 I 1130 733 I 1126 732 I 1123 732 I C 
1 1 1 1 scol  O 0 0 0 1 scol N 1123 732 M 1119 732 I 1115 733 I 1111 733 I 1108 735 I 1105 736 I 1102 738 I 1099 740 I 1096 743 I 1094 745 I 1092 748 I 1090 751 I 1088 755 I 1087 758 I 1086 762 I 1085 765 I 1085 769 I 1085 773 I 1086 777 I 1087 780 I 1088 784 I 1090 787 I 1092 790 I 1094 793 I 1096 796 I 1099 798 I 1102 800 I 1105 802 I 1108 804 I 1111 805 I 1115 806 I 1119 807 I 1123 807 I 1126 807 I 1130 806 I 1134 805 I 1137 804 I 1140 802 I 1144 800 I 1146 798 I 1149 796 I 1152 793 I 1154 790 I 1156 787 I 1157 784 I 1158 780 I 1159 777 I 1160 773 I 1160 769 I 1160 765 I 1159 762 I 1158 758 I 1157 755 I 1156 751 I 1154 748 I 1152 745 I 1149 743 I 1146 740 I 1144 738 I 1140 736 I 1137 735 I 1134 733 I 1130 733 I 1126 732 I 1123 732 I : 0.996 0.996 +S K 
; N 1123 956 M 1119 956 I 1115 957 I 1111 957 I 1108 959 I 1105 960 I 1102 962 I 1099 964 I 1096 967 I 1094 969 I 1092 972 I 1090 975 I 1088 979 I 1087 982 I 1086 986 I 1085 989 I 1085 993 I 1085 997 I 1086 1001 I 1087 1004 I 1088 1008 I 1090 1011 I 1092 1014 I 1094 1017 I 1096 1020 I 1099 1022 I 1102 1024 I 1105 1026 I 1108 1028 I 1111 1029 I 1115 1030 I 1119 1031 I 1123 1031 I 1126 1031 I 1130 1030 I 1134 1029 I 1137 1028 I 1140 1026 I 1144 1024 I 1146 1022 I 1149 1020 I 1152 1017 I 1154 1014 I 1156 1011 I 1157 1008 I 1158 1004 I 1159 1001 I 1160 997 I 1160 993 I 1160 989 I 1159 986 I 1158 982 I 1157 979 I 1156 975 I 1154 972 I 1152 969 I 1149 967 I 1146 964 I 1144 962 I 1140 960 I 1137 959 I 1134 957 I 1130 957 I 1126 956 I 1123 956 I C 
1 1 1 1 scol  O 0 0 0 1 scol N 1123 956 M 1119 956 I 1115 957 I 1111 957 I 1108 959 I 1105 960 I 1102 962 I 1099 964 I 1096 967 I 1094 969 I 1092 972 I 1090 975 I 1088 979 I 1087 982 I 1086 986 I 1085 989 I 1085 993 I 1085 997 I 1086 1001 I 1087 1004 I 1088 1008 I 1090 1011 I 1092 1014 I 1094 1017 I 1096 1020 I 1099 1022 I 1102 1024 I 1105 1026 I 1108 1028 I 1111 1029 I 1115 1030 I 1119 1031 I 1123 1031 I 1126 1031 I 1130 1030 I 1134 1029 I 1137 1028 I 1140 1026 I 1144 1024 I 1146 1022 I 1149 1020 I 1152 1017 I 1154 1014 I 1156 1011 I 1157 1008 I 1158 1004 I 1159 1001 I 1160 997 I 1160 993 I 1160 989 I 1159 986 I 1158 982 I 1157 979 I 1156 975 I 1154 972 I 1152 969 I 1149 967 I 1146 964 I 1144 962 I 1140 960 I 1137 959 I 1134 957 I 1130 957 I 1126 956 I 1123 956 I : 0.996 0.996 +S K 
; N 1348 507 M 1344 507 I 1340 508 I 1336 508 I 1333 510 I 1330 511 I 1327 513 I 1324 515 I 1321 518 I 1319 520 I 1317 523 I 1315 526 I 1313 530 I 1312 533 I 1311 537 I 1310 540 I 1310 544 I 1310 548 I 1311 552 I 1312 555 I 1313 559 I 1315 562 I 1317 565 I 1319 568 I 1321 571 I 1324 573 I 1327 575 I 1330 577 I 1333 579 I 1336 580 I 1340 581 I 1344 582 I 1348 582 I 1351 582 I 1355 581 I 1359 580 I 1362 579 I 1365 577 I 1369 575 I 1371 573 I 1374 571 I 1377 568 I 1379 565 I 1381 562 I 1382 559 I 1383 555 I 1384 552 I 1385 548 I 1385 544 I 1385 540 I 1384 537 I 1383 533 I 1382 530 I 1381 526 I 1379 523 I 1377 520 I 1374 518 I 1371 515 I 1369 513 I 1365 511 I 1362 510 I 1359 508 I 1355 508 I 1351 507 I 1348 507 I C 
1 1 1 1 scol  O 0 0 0 1 scol N 1348 507 M 1344 507 I 1340 508 I 1336 508 I 1333 510 I 1330 511 I 1327 513 I 1324 515 I 1321 518 I 1319 520 I 1317 523 I 1315 526 I 1313 530 I 1312 533 I 1311 537 I 1310 540 I 1310 544 I 1310 548 I 1311 552 I 1312 555 I 1313 559 I 1315 562 I 1317 565 I 1319 568 I 1321 571 I 1324 573 I 1327 575 I 1330 577 I 1333 579 I 1336 580 I 1340 581 I 1344 582 I 1348 582 I 1351 582 I 1355 581 I 1359 580 I 1362 579 I 1365 577 I 1369 575 I 1371 573 I 1374 571 I 1377 568 I 1379 565 I 1381 562 I 1382 559 I 1383 555 I 1384 552 I 1385 548 I 1385 544 I 1385 540 I 1384 537 I 1383 533 I 1382 530 I 1381 526 I 1379 523 I 1377 520 I 1374 518 I 1371 515 I 1369 513 I 1365 511 I 1362 510 I 1359 508 I 1355 508 I 1351 507 I 1348 507 I : 0.996 0.996 +S K 
; N 1348 732 M 1344 732 I 1340 733 I 1336 733 I 1333 735 I 1330 736 I 1327 738 I 1324 740 I 1321 743 I 1319 745 I 1317 748 I 1315 751 I 1313 755 I 1312 758 I 1311 762 I 1310 765 I 1310 769 I 1310 773 I 1311 777 I 1312 780 I 1313 784 I 1315 787 I 1317 790 I 1319 793 I 1321 796 I 1324 798 I 1327 800 I 1330 802 I 1333 804 I 1336 805 I 1340 806 I 1344 807 I 1348 807 I 1351 807 I 1355 806 I 1359 805 I 1362 804 I 1365 802 I 1369 800 I 1371 798 I 1374 796 I 1377 793 I 1379 790 I 1381 787 I 1382 784 I 1383 780 I 1384 777 I 1385 773 I 1385 769 I 1385 765 I 1384 762 I 1383 758 I 1382 755 I 1381 751 I 1379 748 I 1377 745 I 1374 743 I 1371 740 I 1369 738 I 1365 736 I 1362 735 I 1359 733 I 1355 733 I 1351 732 I 1348 732 I C 
1 1 1 1 scol  O 0 0 0 1 scol N 1348 732 M 1344 732 I 1340 733 I 1336 733 I 1333 735 I 1330 736 I 1327 738 I 1324 740 I 1321 743 I 1319 745 I 1317 748 I 1315 751 I 1313 755 I 1312 758 I 1311 762 I 1310 765 I 1310 769 I 1310 773 I 1311 777 I 1312 780 I 1313 784 I 1315 787 I 1317 790 I 1319 793 I 1321 796 I 1324 798 I 1327 800 I 1330 802 I 1333 804 I 1336 805 I 1340 806 I 1344 807 I 1348 807 I 1351 807 I 1355 806 I 1359 805 I 1362 804 I 1365 802 I 1369 800 I 1371 798 I 1374 796 I 1377 793 I 1379 790 I 1381 787 I 1382 784 I 1383 780 I 1384 777 I 1385 773 I 1385 769 I 1385 765 I 1384 762 I 1383 758 I 1382 755 I 1381 751 I 1379 748 I 1377 745 I 1374 743 I 1371 740 I 1369 738 I 1365 736 I 1362 735 I 1359 733 I 1355 733 I 1351 732 I 1348 732 I : 0.996 0.996 +S K 
; N 1348 956 M 1344 956 I 1340 957 I 1336 957 I 1333 959 I 1330 960 I 1327 962 I 1324 964 I 1321 967 I 1319 969 I 1317 972 I 1315 975 I 1313 979 I 1312 982 I 1311 986 I 1310 989 I 1310 993 I 1310 997 I 1311 1001 I 1312 1004 I 1313 1008 I 1315 1011 I 1317 1014 I 1319 1017 I 1321 1020 I 1324 1022 I 1327 1024 I 1330 1026 I 1333 1028 I 1336 1029 I 1340 1030 I 1344 1031 I 1348 1031 I 1351 1031 I 1355 1030 I 1359 1029 I 1362 1028 I 1365 1026 I 1369 1024 I 1371 1022 I 1374 1020 I 1377 1017 I 1379 1014 I 1381 1011 I 1382 1008 I 1383 1004 I 1384 1001 I 1385 997 I 1385 993 I 1385 989 I 1384 986 I 1383 982 I 1382 979 I 1381 975 I 1379 972 I 1377 969 I 1374 967 I 1371 964 I 1369 962 I 1365 960 I 1362 959 I 1359 957 I 1355 957 I 1351 956 I 1348 956 I C 
1 1 1 1 scol  O 0 0 0 1 scol N 1348 956 M 1344 956 I 1340 957 I 1336 957 I 1333 959 I 1330 960 I 1327 962 I 1324 964 I 1321 967 I 1319 969 I 1317 972 I 1315 975 I 1313 979 I 1312 982 I 1311 986 I 1310 989 I 1310 993 I 1310 997 I 1311 1001 I 1312 1004 I 1313 1008 I 1315 1011 I 1317 1014 I 1319 1017 I 1321 1020 I 1324 1022 I 1327 1024 I 1330 1026 I 1333 1028 I 1336 1029 I 1340 1030 I 1344 1031 I 1348 1031 I 1351 1031 I 1355 1030 I 1359 1029 I 1362 1028 I 1365 1026 I 1369 1024 I 1371 1022 I 1374 1020 I 1377 1017 I 1379 1014 I 1381 1011 I 1382 1008 I 1383 1004 I 1384 1001 I 1385 997 I 1385 993 I 1385 989 I 1384 986 I 1383 982 I 1382 979 I 1381 975 I 1379 972 I 1377 969 I 1374 967 I 1371 964 I 1369 962 I 1365 960 I 1362 959 I 1359 957 I 1355 957 I 1351 956 I 1348 956 I : 0.996 0.996 +S K 
; N 1573 507 M 1569 507 I 1565 508 I 1561 508 I 1558 510 I 1555 511 I 1552 513 I 1549 515 I 1546 518 I 1544 520 I 1542 523 I 1540 526 I 1538 530 I 1537 533 I 1536 537 I 1535 540 I 1535 544 I 1535 548 I 1536 552 I 1537 555 I 1538 559 I 1540 562 I 1542 565 I 1544 568 I 1546 571 I 1549 573 I 1552 575 I 1555 577 I 1558 579 I 1561 580 I 1565 581 I 1569 582 I 1573 582 I 1576 582 I 1580 581 I 1584 580 I 1587 579 I 1590 577 I 1594 575 I 1596 573 I 1599 571 I 1602 568 I 1604 565 I 1606 562 I 1607 559 I 1608 555 I 1609 552 I 1610 548 I 1610 544 I 1610 540 I 1609 537 I 1608 533 I 1607 530 I 1606 526 I 1604 523 I 1602 520 I 1599 518 I 1596 515 I 1594 513 I 1590 511 I 1587 510 I 1584 508 I 1580 508 I 1576 507 I 1573 507 I C 
1 1 1 1 scol  O 0 0 0 1 scol N 1573 507 M 1569 507 I 1565 508 I 1561 508 I 1558 510 I 1555 511 I 1552 513 I 1549 515 I 1546 518 I 1544 520 I 1542 523 I 1540 526 I 1538 530 I 1537 533 I 1536 537 I 1535 540 I 1535 544 I 1535 548 I 1536 552 I 1537 555 I 1538 559 I 1540 562 I 1542 565 I 1544 568 I 1546 571 I 1549 573 I 1552 575 I 1555 577 I 1558 579 I 1561 580 I 1565 581 I 1569 582 I 1573 582 I 1576 582 I 1580 581 I 1584 580 I 1587 579 I 1590 577 I 1594 575 I 1596 573 I 1599 571 I 1602 568 I 1604 565 I 1606 562 I 1607 559 I 1608 555 I 1609 552 I 1610 548 I 1610 544 I 1610 540 I 1609 537 I 1608 533 I 1607 530 I 1606 526 I 1604 523 I 1602 520 I 1599 518 I 1596 515 I 1594 513 I 1590 511 I 1587 510 I 1584 508 I 1580 508 I 1576 507 I 1573 507 I : 0.996 0.996 +S K 
; N 1573 732 M 1569 732 I 1565 733 I 1561 733 I 1558 735 I 1555 736 I 1552 738 I 1549 740 I 1546 743 I 1544 745 I 1542 748 I 1540 751 I 1538 755 I 1537 758 I 1536 762 I 1535 765 I 1535 769 I 1535 773 I 1536 777 I 1537 780 I 1538 784 I 1540 787 I 1542 790 I 1544 793 I 1546 796 I 1549 798 I 1552 800 I 1555 802 I 1558 804 I 1561 805 I 1565 806 I 1569 807 I 1573 807 I 1576 807 I 1580 806 I 1584 805 I 1587 804 I 1590 802 I 1594 800 I 1596 798 I 1599 796 I 1602 793 I 1604 790 I 1606 787 I 1607 784 I 1608 780 I 1609 777 I 1610 773 I 1610 769 I 1610 765 I 1609 762 I 1608 758 I 1607 755 I 1606 751 I 1604 748 I 1602 745 I 1599 743 I 1596 740 I 1594 738 I 1590 736 I 1587 735 I 1584 733 I 1580 733 I 1576 732 I 1573 732 I C 
1 1 1 1 scol  O 0 0 0 1 scol N 1573 732 M 1569 732 I 1565 733 I 1561 733 I 1558 735 I 1555 736 I 1552 738 I 1549 740 I 1546 743 I 1544 745 I 1542 748 I 1540 751 I 1538 755 I 1537 758 I 1536 762 I 1535 765 I 1535 769 I 1535 773 I 1536 777 I 1537 780 I 1538 784 I 1540 787 I 1542 790 I 1544 793 I 1546 796 I 1549 798 I 1552 800 I 1555 802 I 1558 804 I 1561 805 I 1565 806 I 1569 807 I 1573 807 I 1576 807 I 1580 806 I 1584 805 I 1587 804 I 1590 802 I 1594 800 I 1596 798 I 1599 796 I 1602 793 I 1604 790 I 1606 787 I 1607 784 I 1608 780 I 1609 777 I 1610 773 I 1610 769 I 1610 765 I 1609 762 I 1608 758 I 1607 755 I 1606 751 I 1604 748 I 1602 745 I 1599 743 I 1596 740 I 1594 738 I 1590 736 I 1587 735 I 1584 733 I 1580 733 I 1576 732 I 1573 732 I : 0.996 0.996 +S K 
; N 1573 956 M 1569 956 I 1565 957 I 1561 957 I 1558 959 I 1555 960 I 1552 962 I 1549 964 I 1546 967 I 1544 969 I 1542 972 I 1540 975 I 1538 979 I 1537 982 I 1536 986 I 1535 989 I 1535 993 I 1535 997 I 1536 1001 I 1537 1004 I 1538 1008 I 1540 1011 I 1542 1014 I 1544 1017 I 1546 1020 I 1549 1022 I 1552 1024 I 1555 1026 I 1558 1028 I 1561 1029 I 1565 1030 I 1569 1031 I 1573 1031 I 1576 1031 I 1580 1030 I 1584 1029 I 1587 1028 I 1590 1026 I 1594 1024 I 1596 1022 I 1599 1020 I 1602 1017 I 1604 1014 I 1606 1011 I 1607 1008 I 1608 1004 I 1609 1001 I 1610 997 I 1610 993 I 1610 989 I 1609 986 I 1608 982 I 1607 979 I 1606 975 I 1604 972 I 1602 969 I 1599 967 I 1596 964 I 1594 962 I 1590 960 I 1587 959 I 1584 957 I 1580 957 I 1576 956 I 1573 956 I C 
1 1 1 1 scol  O 0 0 0 1 scol N 1573 956 M 1569 956 I 1565 957 I 1561 957 I 1558 959 I 1555 960 I 1552 962 I 1549 964 I 1546 967 I 1544 969 I 1542 972 I 1540 975 I 1538 979 I 1537 982 I 1536 986 I 1535 989 I 1535 993 I 1535 997 I 1536 1001 I 1537 1004 I 1538 1008 I 1540 1011 I 1542 1014 I 1544 1017 I 1546 1020 I 1549 1022 I 1552 1024 I 1555 1026 I 1558 1028 I 1561 1029 I 1565 1030 I 1569 1031 I 1573 1031 I 1576 1031 I 1580 1030 I 1584 1029 I 1587 1028 I 1590 1026 I 1594 1024 I 1596 1022 I 1599 1020 I 1602 1017 I 1604 1014 I 1606 1011 I 1607 1008 I 1608 1004 I 1609 1001 I 1610 997 I 1610 993 I 1610 989 I 1609 986 I 1608 982 I 1607 979 I 1606 975 I 1604 972 I 1602 969 I 1599 967 I 1596 964 I 1594 962 I 1590 960 I 1587 959 I 1584 957 I 1580 957 I 1576 956 I 1573 956 I : 0.996 0.996 +S K 
; N 898 1181 M 894 1181 I 890 1182 I 886 1182 I 883 1184 I 880 1185 I 877 1187 I 874 1189 I 871 1192 I 869 1194 I 867 1197 I 865 1200 I 863 1204 I 862 1207 I 861 1211 I 860 1214 I 860 1218 I 860 1222 I 861 1226 I 862 1229 I 863 1233 I 865 1236 I 867 1239 I 869 1242 I 871 1245 I 874 1247 I 877 1249 I 880 1251 I 883 1253 I 886 1254 I 890 1255 I 894 1256 I 898 1256 I 901 1256 I 905 1255 I 909 1254 I 912 1253 I 915 1251 I 919 1249 I 921 1247 I 924 1245 I 927 1242 I 929 1239 I 931 1236 I 932 1233 I 933 1229 I 934 1226 I 935 1222 I 935 1218 I 935 1214 I 934 1211 I 933 1207 I 932 1204 I 931 1200 I 929 1197 I 927 1194 I 924 1192 I 921 1189 I 919 1187 I 915 1185 I 912 1184 I 909 1182 I 905 1182 I 901 1181 I 898 1181 I C 
1 1 1 1 scol  O 0 0 0 1 scol N 898 1181 M 894 1181 I 890 1182 I 886 1182 I 883 1184 I 880 1185 I 877 1187 I 874 1189 I 871 1192 I 869 1194 I 867 1197 I 865 1200 I 863 1204 I 862 1207 I 861 1211 I 860 1214 I 860 1218 I 860 1222 I 861 1226 I 862 1229 I 863 1233 I 865 1236 I 867 1239 I 869 1242 I 871 1245 I 874 1247 I 877 1249 I 880 1251 I 883 1253 I 886 1254 I 890 1255 I 894 1256 I 898 1256 I 901 1256 I 905 1255 I 909 1254 I 912 1253 I 915 1251 I 919 1249 I 921 1247 I 924 1245 I 927 1242 I 929 1239 I 931 1236 I 932 1233 I 933 1229 I 934 1226 I 935 1222 I 935 1218 I 935 1214 I 934 1211 I 933 1207 I 932 1204 I 931 1200 I 929 1197 I 927 1194 I 924 1192 I 921 1189 I 919 1187 I 915 1185 I 912 1184 I 909 1182 I 905 1182 I 901 1181 I 898 1181 I : 0.996 0.996 +S K 
; N 1123 1181 M 1119 1181 I 1115 1182 I 1111 1182 I 1108 1184 I 1105 1185 I 1102 1187 I 1099 1189 I 1096 1192 I 1094 1194 I 1092 1197 I 1090 1200 I 1088 1204 I 1087 1207 I 1086 1211 I 1085 1214 I 1085 1218 I 1085 1222 I 1086 1226 I 1087 1229 I 1088 1233 I 1090 1236 I 1092 1239 I 1094 1242 I 1096 1245 I 1099 1247 I 1102 1249 I 1105 1251 I 1108 1253 I 1111 1254 I 1115 1255 I 1119 1256 I 1123 1256 I 1126 1256 I 1130 1255 I 1134 1254 I 1137 1253 I 1140 1251 I 1144 1249 I 1146 1247 I 1149 1245 I 1152 1242 I 1154 1239 I 1156 1236 I 1157 1233 I 1158 1229 I 1159 1226 I 1160 1222 I 1160 1218 I 1160 1214 I 1159 1211 I 1158 1207 I 1157 1204 I 1156 1200 I 1154 1197 I 1152 1194 I 1149 1192 I 1146 1189 I 1144 1187 I 1140 1185 I 1137 1184 I 1134 1182 I 1130 1182 I 1126 1181 I 1123 1181 I C 
1 1 1 1 scol  O 0 0 0 1 scol N 1123 1181 M 1119 1181 I 1115 1182 I 1111 1182 I 1108 1184 I 1105 1185 I 1102 1187 I 1099 1189 I 1096 1192 I 1094 1194 I 1092 1197 I 1090 1200 I 1088 1204 I 1087 1207 I 1086 1211 I 1085 1214 I 1085 1218 I 1085 1222 I 1086 1226 I 1087 1229 I 1088 1233 I 1090 1236 I 1092 1239 I 1094 1242 I 1096 1245 I 1099 1247 I 1102 1249 I 1105 1251 I 1108 1253 I 1111 1254 I 1115 1255 I 1119 1256 I 1123 1256 I 1126 1256 I 1130 1255 I 1134 1254 I 1137 1253 I 1140 1251 I 1144 1249 I 1146 1247 I 1149 1245 I 1152 1242 I 1154 1239 I 1156 1236 I 1157 1233 I 1158 1229 I 1159 1226 I 1160 1222 I 1160 1218 I 1160 1214 I 1159 1211 I 1158 1207 I 1157 1204 I 1156 1200 I 1154 1197 I 1152 1194 I 1149 1192 I 1146 1189 I 1144 1187 I 1140 1185 I 1137 1184 I 1134 1182 I 1130 1182 I 1126 1181 I 1123 1181 I : 0.996 0.996 +S K 
; N 1348 1181 M 1344 1181 I 1340 1182 I 1336 1182 I 1333 1184 I 1330 1185 I 1327 1187 I 1324 1189 I 1321 1192 I 1319 1194 I 1317 1197 I 1315 1200 I 1313 1204 I 1312 1207 I 1311 1211 I 1310 1214 I 1310 1218 I 1310 1222 I 1311 1226 I 1312 1229 I 1313 1233 I 1315 1236 I 1317 1239 I 1319 1242 I 1321 1245 I 1324 1247 I 1327 1249 I 1330 1251 I 1333 1253 I 1336 1254 I 1340 1255 I 1344 1256 I 1348 1256 I 1351 1256 I 1355 1255 I 1359 1254 I 1362 1253 I 1365 1251 I 1369 1249 I 1371 1247 I 1374 1245 I 1377 1242 I 1379 1239 I 1381 1236 I 1382 1233 I 1383 1229 I 1384 1226 I 1385 1222 I 1385 1218 I 1385 1214 I 1384 1211 I 1383 1207 I 1382 1204 I 1381 1200 I 1379 1197 I 1377 1194 I 1374 1192 I 1371 1189 I 1369 1187 I 1365 1185 I 1362 1184 I 1359 1182 I 1355 1182 I 1351 1181 I 1348 1181 I C 
1 1 1 1 scol  O 0 0 0 1 scol N 1348 1181 M 1344 1181 I 1340 1182 I 1336 1182 I 1333 1184 I 1330 1185 I 1327 1187 I 1324 1189 I 1321 1192 I 1319 1194 I 1317 1197 I 1315 1200 I 1313 1204 I 1312 1207 I 1311 1211 I 1310 1214 I 1310 1218 I 1310 1222 I 1311 1226 I 1312 1229 I 1313 1233 I 1315 1236 I 1317 1239 I 1319 1242 I 1321 1245 I 1324 1247 I 1327 1249 I 1330 1251 I 1333 1253 I 1336 1254 I 1340 1255 I 1344 1256 I 1348 1256 I 1351 1256 I 1355 1255 I 1359 1254 I 1362 1253 I 1365 1251 I 1369 1249 I 1371 1247 I 1374 1245 I 1377 1242 I 1379 1239 I 1381 1236 I 1382 1233 I 1383 1229 I 1384 1226 I 1385 1222 I 1385 1218 I 1385 1214 I 1384 1211 I 1383 1207 I 1382 1204 I 1381 1200 I 1379 1197 I 1377 1194 I 1374 1192 I 1371 1189 I 1369 1187 I 1365 1185 I 1362 1184 I 1359 1182 I 1355 1182 I 1351 1181 I 1348 1181 I : 0.996 0.996 +S K 
; N 1573 1181 M 1569 1181 I 1565 1182 I 1561 1182 I 1558 1184 I 1555 1185 I 1552 1187 I 1549 1189 I 1546 1192 I 1544 1194 I 1542 1197 I 1540 1200 I 1538 1204 I 1537 1207 I 1536 1211 I 1535 1214 I 1535 1218 I 1535 1222 I 1536 1226 I 1537 1229 I 1538 1233 I 1540 1236 I 1542 1239 I 1544 1242 I 1546 1245 I 1549 1247 I 1552 1249 I 1555 1251 I 1558 1253 I 1561 1254 I 1565 1255 I 1569 1256 I 1573 1256 I 1576 1256 I 1580 1255 I 1584 1254 I 1587 1253 I 1590 1251 I 1594 1249 I 1596 1247 I 1599 1245 I 1602 1242 I 1604 1239 I 1606 1236 I 1607 1233 I 1608 1229 I 1609 1226 I 1610 1222 I 1610 1218 I 1610 1214 I 1609 1211 I 1608 1207 I 1607 1204 I 1606 1200 I 1604 1197 I 1602 1194 I 1599 1192 I 1596 1189 I 1594 1187 I 1590 1185 I 1587 1184 I 1584 1182 I 1580 1182 I 1576 1181 I 1573 1181 I C 
1 1 1 1 scol  O 0 0 0 1 scol N 1573 1181 M 1569 1181 I 1565 1182 I 1561 1182 I 1558 1184 I 1555 1185 I 1552 1187 I 1549 1189 I 1546 1192 I 1544 1194 I 1542 1197 I 1540 1200 I 1538 1204 I 1537 1207 I 1536 1211 I 1535 1214 I 1535 1218 I 1535 1222 I 1536 1226 I 1537 1229 I 1538 1233 I 1540 1236 I 1542 1239 I 1544 1242 I 1546 1245 I 1549 1247 I 1552 1249 I 1555 1251 I 1558 1253 I 1561 1254 I 1565 1255 I 1569 1256 I 1573 1256 I 1576 1256 I 1580 1255 I 1584 1254 I 1587 1253 I 1590 1251 I 1594 1249 I 1596 1247 I 1599 1245 I 1602 1242 I 1604 1239 I 1606 1236 I 1607 1233 I 1608 1229 I 1609 1226 I 1610 1222 I 1610 1218 I 1610 1214 I 1609 1211 I 1608 1207 I 1607 1204 I 1606 1200 I 1604 1197 I 1602 1194 I 1599 1192 I 1596 1189 I 1594 1187 I 1590 1185 I 1587 1184 I 1584 1182 I 1580 1182 I 1576 1181 I 1573 1181 I : 0.996 0.996 +S K 
; N 1798 507 M 1794 507 I 1790 508 I 1786 508 I 1783 510 I 1780 511 I 1777 513 I 1774 515 I 1771 518 I 1769 520 I 1767 523 I 1765 526 I 1763 530 I 1762 533 I 1761 537 I 1760 540 I 1760 544 I 1760 548 I 1761 552 I 1762 555 I 1763 559 I 1765 562 I 1767 565 I 1769 568 I 1771 571 I 1774 573 I 1777 575 I 1780 577 I 1783 579 I 1786 580 I 1790 581 I 1794 582 I 1798 582 I 1801 582 I 1805 581 I 1809 580 I 1812 579 I 1815 577 I 1819 575 I 1821 573 I 1824 571 I 1827 568 I 1829 565 I 1831 562 I 1832 559 I 1833 555 I 1834 552 I 1835 548 I 1835 544 I 1835 540 I 1834 537 I 1833 533 I 1832 530 I 1831 526 I 1829 523 I 1827 520 I 1824 518 I 1821 515 I 1819 513 I 1815 511 I 1812 510 I 1809 508 I 1805 508 I 1801 507 I 1798 507 I C 
1 1 1 1 scol  O 0 0 0 1 scol N 1798 507 M 1794 507 I 1790 508 I 1786 508 I 1783 510 I 1780 511 I 1777 513 I 1774 515 I 1771 518 I 1769 520 I 1767 523 I 1765 526 I 1763 530 I 1762 533 I 1761 537 I 1760 540 I 1760 544 I 1760 548 I 1761 552 I 1762 555 I 1763 559 I 1765 562 I 1767 565 I 1769 568 I 1771 571 I 1774 573 I 1777 575 I 1780 577 I 1783 579 I 1786 580 I 1790 581 I 1794 582 I 1798 582 I 1801 582 I 1805 581 I 1809 580 I 1812 579 I 1815 577 I 1819 575 I 1821 573 I 1824 571 I 1827 568 I 1829 565 I 1831 562 I 1832 559 I 1833 555 I 1834 552 I 1835 548 I 1835 544 I 1835 540 I 1834 537 I 1833 533 I 1832 530 I 1831 526 I 1829 523 I 1827 520 I 1824 518 I 1821 515 I 1819 513 I 1815 511 I 1812 510 I 1809 508 I 1805 508 I 1801 507 I 1798 507 I : 0.996 0.996 +S K 
; N 1798 732 M 1794 732 I 1790 733 I 1786 733 I 1783 735 I 1780 736 I 1777 738 I 1774 740 I 1771 743 I 1769 745 I 1767 748 I 1765 751 I 1763 755 I 1762 758 I 1761 762 I 1760 765 I 1760 769 I 1760 773 I 1761 777 I 1762 780 I 1763 784 I 1765 787 I 1767 790 I 1769 793 I 1771 796 I 1774 798 I 1777 800 I 1780 802 I 1783 804 I 1786 805 I 1790 806 I 1794 807 I 1798 807 I 1801 807 I 1805 806 I 1809 805 I 1812 804 I 1815 802 I 1819 800 I 1821 798 I 1824 796 I 1827 793 I 1829 790 I 1831 787 I 1832 784 I 1833 780 I 1834 777 I 1835 773 I 1835 769 I 1835 765 I 1834 762 I 1833 758 I 1832 755 I 1831 751 I 1829 748 I 1827 745 I 1824 743 I 1821 740 I 1819 738 I 1815 736 I 1812 735 I 1809 733 I 1805 733 I 1801 732 I 1798 732 I C 
1 1 1 1 scol  O 0 0 0 1 scol N 1798 732 M 1794 732 I 1790 733 I 1786 733 I 1783 735 I 1780 736 I 1777 738 I 1774 740 I 1771 743 I 1769 745 I 1767 748 I 1765 751 I 1763 755 I 1762 758 I 1761 762 I 1760 765 I 1760 769 I 1760 773 I 1761 777 I 1762 780 I 1763 784 I 1765 787 I 1767 790 I 1769 793 I 1771 796 I 1774 798 I 1777 800 I 1780 802 I 1783 804 I 1786 805 I 1790 806 I 1794 807 I 1798 807 I 1801 807 I 1805 806 I 1809 805 I 1812 804 I 1815 802 I 1819 800 I 1821 798 I 1824 796 I 1827 793 I 1829 790 I 1831 787 I 1832 784 I 1833 780 I 1834 777 I 1835 773 I 1835 769 I 1835 765 I 1834 762 I 1833 758 I 1832 755 I 1831 751 I 1829 748 I 1827 745 I 1824 743 I 1821 740 I 1819 738 I 1815 736 I 1812 735 I 1809 733 I 1805 733 I 1801 732 I 1798 732 I : 0.996 0.996 +S K 
; N 1798 956 M 1794 956 I 1790 957 I 1786 957 I 1783 959 I 1780 960 I 1777 962 I 1774 964 I 1771 967 I 1769 969 I 1767 972 I 1765 975 I 1763 979 I 1762 982 I 1761 986 I 1760 989 I 1760 993 I 1760 997 I 1761 1001 I 1762 1004 I 1763 1008 I 1765 1011 I 1767 1014 I 1769 1017 I 1771 1020 I 1774 1022 I 1777 1024 I 1780 1026 I 1783 1028 I 1786 1029 I 1790 1030 I 1794 1031 I 1798 1031 I 1801 1031 I 1805 1030 I 1809 1029 I 1812 1028 I 1815 1026 I 1819 1024 I 1821 1022 I 1824 1020 I 1827 1017 I 1829 1014 I 1831 1011 I 1832 1008 I 1833 1004 I 1834 1001 I 1835 997 I 1835 993 I 1835 989 I 1834 986 I 1833 982 I 1832 979 I 1831 975 I 1829 972 I 1827 969 I 1824 967 I 1821 964 I 1819 962 I 1815 960 I 1812 959 I 1809 957 I 1805 957 I 1801 956 I 1798 956 I C 
1 1 1 1 scol  O 0 0 0 1 scol N 1798 956 M 1794 956 I 1790 957 I 1786 957 I 1783 959 I 1780 960 I 1777 962 I 1774 964 I 1771 967 I 1769 969 I 1767 972 I 1765 975 I 1763 979 I 1762 982 I 1761 986 I 1760 989 I 1760 993 I 1760 997 I 1761 1001 I 1762 1004 I 1763 1008 I 1765 1011 I 1767 1014 I 1769 1017 I 1771 1020 I 1774 1022 I 1777 1024 I 1780 1026 I 1783 1028 I 1786 1029 I 1790 1030 I 1794 1031 I 1798 1031 I 1801 1031 I 1805 1030 I 1809 1029 I 1812 1028 I 1815 1026 I 1819 1024 I 1821 1022 I 1824 1020 I 1827 1017 I 1829 1014 I 1831 1011 I 1832 1008 I 1833 1004 I 1834 1001 I 1835 997 I 1835 993 I 1835 989 I 1834 986 I 1833 982 I 1832 979 I 1831 975 I 1829 972 I 1827 969 I 1824 967 I 1821 964 I 1819 962 I 1815 960 I 1812 959 I 1809 957 I 1805 957 I 1801 956 I 1798 956 I : 0.996 0.996 +S K 
; N 1798 1181 M 1794 1181 I 1790 1182 I 1786 1182 I 1783 1184 I 1780 1185 I 1777 1187 I 1774 1189 I 1771 1192 I 1769 1194 I 1767 1197 I 1765 1200 I 1763 1204 I 1762 1207 I 1761 1211 I 1760 1214 I 1760 1218 I 1760 1222 I 1761 1226 I 1762 1229 I 1763 1233 I 1765 1236 I 1767 1239 I 1769 1242 I 1771 1245 I 1774 1247 I 1777 1249 I 1780 1251 I 1783 1253 I 1786 1254 I 1790 1255 I 1794 1256 I 1798 1256 I 1801 1256 I 1805 1255 I 1809 1254 I 1812 1253 I 1815 1251 I 1819 1249 I 1821 1247 I 1824 1245 I 1827 1242 I 1829 1239 I 1831 1236 I 1832 1233 I 1833 1229 I 1834 1226 I 1835 1222 I 1835 1218 I 1835 1214 I 1834 1211 I 1833 1207 I 1832 1204 I 1831 1200 I 1829 1197 I 1827 1194 I 1824 1192 I 1821 1189 I 1819 1187 I 1815 1185 I 1812 1184 I 1809 1182 I 1805 1182 I 1801 1181 I 1798 1181 I C 
1 1 1 1 scol  O 0 0 0 1 scol N 1798 1181 M 1794 1181 I 1790 1182 I 1786 1182 I 1783 1184 I 1780 1185 I 1777 1187 I 1774 1189 I 1771 1192 I 1769 1194 I 1767 1197 I 1765 1200 I 1763 1204 I 1762 1207 I 1761 1211 I 1760 1214 I 1760 1218 I 1760 1222 I 1761 1226 I 1762 1229 I 1763 1233 I 1765 1236 I 1767 1239 I 1769 1242 I 1771 1245 I 1774 1247 I 1777 1249 I 1780 1251 I 1783 1253 I 1786 1254 I 1790 1255 I 1794 1256 I 1798 1256 I 1801 1256 I 1805 1255 I 1809 1254 I 1812 1253 I 1815 1251 I 1819 1249 I 1821 1247 I 1824 1245 I 1827 1242 I 1829 1239 I 1831 1236 I 1832 1233 I 1833 1229 I 1834 1226 I 1835 1222 I 1835 1218 I 1835 1214 I 1834 1211 I 1833 1207 I 1832 1204 I 1831 1200 I 1829 1197 I 1827 1194 I 1824 1192 I 1821 1189 I 1819 1187 I 1815 1185 I 1812 1184 I 1809 1182 I 1805 1182 I 1801 1181 I 1798 1181 I : 0.996 0.996 +S K 
; Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_T3Hdr 5.0 0
{version cvi 2016 ge{32/FontType resourcestatus{pop pop true}{false}ifelse}
{false}ifelse}exec/Is2016andT32? exch def/T32DefSBCMap{/CIDInit/ProcSet
findresource begin 10 dict begin begincmap/CIDSystemInfo 3 dict dup begin
/Registry(Adobe)def/Ordering(Identity1)def/Supplement 0 def end def/CMapType 0
def/WMode 0 def 1 begincodespacerange<00><ff>endcodespacerange 1 begincidrange
<00><ff>0 endcidrange endcmap/DrvSBCMap currentdict/CMap defineresource pop end
end}bind def Is2016andT32?{T32DefSBCMap}def/T32RsrcBegin{Is2016andT32?{
/BitmapFontInit/ProcSet findresource begin}if}bind def/T32RsrcEnd{Is2016andT32?
{end}if}bind def/AddT32Char{6 1 roll 0 get 7 1 roll pop pop 5 1 roll pop
findfont/TT32R get addglyph}bind def/AddT3Char{findfont dup 5 2 roll 1 index
length 0 gt{cvx 1 index exch 4 exch put dup(imagemask)cvx cvn 5 exch put cvx}
{pop cvx}ifelse 3 -1 roll/CharProcs get 3 1 roll put dup/Encoding get 5 -1 roll
4 index put/Metrics get 3 1 roll put}bind def/AddT3T32Char Is2016andT32?{
/AddT32Char}{/AddT3Char}ifelse load def/GreNewFontT32{5 dict begin exch
/FontMatrix exch def exch/FontBBox exch def exch pop exch pop/CIDFontType 4 def
dup currentdict end/CIDFont defineresource 3 -1 roll dup/DrvSBCMap dup/CMap
resourcestatus{pop pop}{T32DefSBCMap}ifelse 5 -1 roll[exch]composefont dup
length dict copy dup/FID undef begin exch/TT32R exch def currentdict end
definefont/BitmapFontInit/ProcSet findresource begin/TT32R get[14 0 0 0 0 0]<>0
4 -1 roll addglyph end}bind def/GreNewFontT3{11 dict begin pop/FontType 3 def
/FontMatrix exch def/FontBBox exch def/Encoding exch def/CharProcs 257 dict def
CharProcs/.notdef{}put/Metrics 257 dict def Metrics/.notdef 3 -1 roll put
AddFontInfoBegin AddFontInfo AddFontInfoEnd/BuildChar{userdict begin/char exch
def dup/charname exch/Encoding get char get def dup/Metrics get charname 2 copy
known{get aload pop}{pop/.notdef get aload pop}ifelse setcachedevice begin
Encoding char get CharProcs exch 2 copy known{get}{pop/.notdef get}ifelse end
exec end}def currentdict end definefont pop}bind def/GreNewFont{Is2016andT32?
{GreNewFontT32}{GreNewFontT3}ifelse}bind def/UDF3{Is2016andT32?{/BitmapFontInit
/ProcSet findresource begin dup/CIDFont findresource removeall/CIDFont
undefineresource undefinefont end}{pop UDF}ifelse}bind def
%%EndResource
end reinitialize
/TTC43b00
[82 0 0 0 0 0 ] 
 256 array 0 1 255 {1 index exch /.notdef put} for 
[0 0 0 0 ] 
[1 82 div 0 0 -1 82 div 0 0 ]
/__TTC43b00
GreNewFont
T32RsrcBegin

1
/A [60 0 -1 -61 60 0 ] 
/A [61 61 true [1 0 0 1 1 61 ]  0 0]
[<~!!!!$J,fQL!!!!(J,fQL!!!!(^]4?7!!!!(^]4?7!!!!0^]4?7!!!!0huE`W
!!!!@huE`W!!!!@n,NFg!!!!@n,NFg!!!!`n,NFg!!!!`p](9o!!!"Cp](9o
!!!"Cp](9o!!!"Cqu?]s!!!#Zqu?]s!!!#Zqu?]s!!!&;rVuou!!!&9rVuou
!!!&9rr<$!!!!+Orr<$!!!!+Orr<$!!!!6(s*t(L!!!6(It.M!!!!6(It.M!
!!!K/J%u$a!!!K/5JR7!!!!u=5MuMA!!!u=+5d,!!!!u=+5d,!!!"tY+7K71
!!"tY&+BQ!!!$s<&+BQ!!!$s<&,6,)!!$s<#P\9!!!(pW#Q+Q%!!(pW#Q+Q%
!!0k8"8i-!!!0k8"9&9#!!3-"s8Duu!!E9$s8Duu!!E9$s8N'!!!e#S!<3$!
!!`K(!<7QL!!`K(!<7QL!"Ju/!.TM!!"Ju/!.Vca!$2+?!'e7!!#tt=!'e7!
!#tt=!'fBA!&srY!$C,!!&srY!$C,!!-eJD!$C\1!-eJD!"\Q!!;HNo!"\i)
!;HNo!"\i)!VcWp!!i9!"8i-!!"\u-&,uV0!$D4@s8Vus&-)\)s8Vus&-)\)
s8Vus&-)\)~>
 ]
/TTC43b00 AddT3T32Char
T32RsrcEnd
Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_Text 5.0 0
/TextInit{TextInitialised? not{/Pscript_Windows_Font & d/TextInitialised? T d
/fM[1 0 0 1 0 0]d/mFM matrix d/iMat[1 0 0.212557 1 0 0]d}if}b/copyfont{1 ^
length add dict `{1 ^/FID ne{d}{! !}?}forall & E}b/EncodeDict 11 dict d/bullets
{{/bullet}repeat}b/rF{3 copyfont @ ` ~ EncodeDict ~ get/Encoding ~ 3 ^/0 eq{&
/CharStrings known{CharStrings/Eth known not{! EncodeDict/ANSIEncodingOld get}
if}if}if d E}b/mF{@ 7 1 $ findfont ~{@/Encoding get @ StandardEncoding eq{! T}{
{ISOLatin1Encoding}stopped{! F}{eq}?{T}{@ ` T 32 1 127{Encoding 1 ^ get
StandardEncoding 3 -1 $ get eq and}for E}?}?}{F}?{1 ^ ~ rF}{0 copyfont}? 6 -2 $
! ! ~ !/pd_charset @ where{~ get 128 eq{@ FDV 2 copy get @ length array copy
put pd_CoverFCRange}if}{!}? 2 ^ ~ definefont fM 5 4 -1 $ put fM 4 0 put fM
makefont Pscript_Windows_Font 3 1 $ put}b/sLT{: Lw -M currentpoint snap M 0 - 0
Lc K ;}b/xUP null d/yUP null d/uW null d/xSP null d/ySP null d/sW null d/sSU{N
/uW ~ d/yUP ~ d/xUP ~ d}b/sU{xUP yUP uW sLT}b/sST{N/sW ~ d/ySP ~ d/xSP ~ d}b/sT
{xSP ySP sW sLT}b/sR{: + R 0 0 M}b/sRxy{: matrix astore concat 0 0 M}b/eR/; , d
/AddOrigFP{{&/FontInfo known{&/FontInfo get length 6 add}{6}? dict `
/WinPitchAndFamily ~ d/WinCharSet ~ d/OrigFontType ~ d/OrigFontStyle ~ d
/OrigFontName ~ d & E/FontInfo ~ d}{! ! ! ! !}?}b/mFS{makefont
Pscript_Windows_Font 3 1 $ put}b/mF42D{0 copyfont `/FontName ~ d 2 copy ~ sub 1
add dict `/.notdef 0 d 2 copy 1 ~{@ 3 ^ sub Encoding ~ get ~ d}for & E
/CharStrings ~ d ! ! & @ E/FontName get ~ definefont}b/mF42{15 dict ` @ 4 1 $
FontName ~ d/FontType 0 d/FMapType 2 d/FontMatrix[1 0 0 1 0 0]d 1 ^ 254 add 255
idiv @ array/Encoding ~ d 0 1 3 -1 $ 1 sub{@ Encoding 3 1 $ put}for/FDepVector
Encoding length array d/CharStrings 2 dict `/.notdef 0 d & E d 0 1 Encoding
length 1 sub{@ @ 10 lt{! FontName length 1 add string}{100 lt{FontName length 2
add string}{FontName length 3 add string}?}? @ 0 FontName @ length string cvs
putinterval @ 3 -1 $ @ 4 1 $ 3 string cvs FontName length ~ putinterval cvn 1 ^
256 mul @ 255 add 3 -1 $ 4 ^ findfont mF42D FDepVector 3 1 $ put}for & @ E
/FontName get ~ definefont ! ! ! mF}b/mF_OTF_V{~ ! ~ ! 4 -1 $ ! findfont 2 ^ ~
definefont fM @ @ 4 6 -1 $ neg put 5 0 put 90 matrix R matrix concatmatrix
makefont Pscript_Windows_Font 3 1 $ put}b/mF_TTF_V{3{~ !}repeat 3 -1 $ !
findfont 1 ^ ~ definefont Pscript_Windows_Font 3 1 $ put}b/UmF{L2?
{Pscript_Windows_Font ~ undef}{!}?}b/UmF42{@ findfont/FDepVector get{/FontName
get undefinefont}forall undefinefont}b
%%EndResource
end reinitialize
F /F0 0 /0 F /TTC43b00 mF 
/F0S52 F0 [82.813 0 0 -82.813 0 0 ] mFS
F0S52 Ji 
982 430 M <01>S 
T32RsrcBegin

2
/T [55 0 3 -60 53 0 ] 
/T [50 60 true [1 0 0 1 -3 60 ]  0 0]
[<~J,fQKs8RV!s8W-!s+#V!s8W-!J:IJ-r"&gXJ+*^<!WR\"^^'W7s+#TL#P\:K
J:@P(p]*O/IfK`K!'c!_!!i9!++S_=#P\90J:%>%p](hTHiOEH!"XU)!!i9!
#CuRL#P\9(_"[m7p](Q7n,N^g!!C%+!!i9!"2OC+#P\9$_!h=/p](E3huF#W
!!0mn!!i9!!PmUn#P\9"^]4?>p](9o!!!9!z!!i9!z#P\9!!!!!(p](9o!!!9!
z!!i9!z#P\9!!!!!(p](9o!!!9!z!!i9!z#P\9!!!!!(p](9o!!!9!z!!i9!
z#P\9!!!!!(p](9o!!!9!z!!i9!z#P\9!!!!!(p](9o!!!9!z!!i9!z#P\9!
!!!!(p](9o!!!9!z!!i9!z#P\9!!!!!(p](9o!!!9!z!!i9!z#P\9!!!!!(p](9o
!!!Q-z&-)\-!!!!0s8Vus!!!Q0s82is~>
 ]
/TTC43b00 AddT3T32Char
T32RsrcEnd
1202 426 M <02>S 
T32RsrcBegin

3
/C [60 0 6 -61 56 1 ] 
/C [50 62 true [1 0 0 1 -6 61 ]  0 0]
[<~!!!-$!!`K(!$D7!%fcS0s8Vj)!!!-#!WF/@!!i9!59Bk*&)[F0rr<$`^]4W>
!!%M!!!E6$!.OtK!WN-"rVuourr<)t!!!$!!!E-!!!%KK"8Dir!'bu=p](9o
5Ca:6!!!!@J.M,L!!"*k+7K71!"XT%huE`W%tGb[!!!!0J3Vrl!!!7S5MuMA
!!e$=huE`W#Cq<^!!!!$J:G?7!!!+OJ%u$a!!!"K^]4?7!!*&7z!<9h7zs1eU7
!!!$!^]4?7!!*&7z!<9h7zs1eU7!!!$!^]4?7!!*&7z!<9h7zs1eU7!!!$!^]4?7
!!%Maz!.VcazJ)C;,!!0lbhuE`W!PgqX!!!!"^d$`W!!!+O5MuMA!!@`nn,NFg
"+VK_!!!!(J.M,L!!!6(&,6,)!!`K/p](9o%KHV/!!!!/!!E-!!!!u=!WE'!
!'C5]rr<$!GQ7_nJ,fT=!!#7!!!2Qh!$C,!"2Fm:#P\90J,fQOrr@NK!!!$!
s82is!!#7`n,NFg!!E7O!!!~>
 ]
/TTC43b00 AddT3T32Char
T32RsrcEnd
1433 431 M <03>S 
T32RsrcBegin

4
/G [65 0 5 -61 63 1 ] 
/G [58 62 true [1 0 0 1 -5 61 ]  0 0]
[<~!!!-#!!`K(!!",@^^gDF!!%NKn/hW1!!3'"r#Yn=!!i9!5!K#I!"[uf+9)<@
!$AuV#QFc(!.OtK"9/?$!<3$!!WN-"!<)ru!<3$!!W2ot!<3$!"8i-!!.OtK
#P\9!!'bu6#P\9!!'bu6&+BQ!!$?^k&+BQ!!$?^k+7K71!$?^k+5d,!!"XS[
5MuMA!"XS[5MuMA!!e#S5MuMA!!e#SJ)C;,!!e#SJ%u$a!!@`OJ%u$a!!@`O
J%u$azs1eU7zs1eU7zs1eU7zs1eU7zs1eU7zs1eU7zs1eU7zs1eU7zs1eU7J,fPa
s1eU7J,fPas1eU7J,fPas1eU7!.Wo,s1eU7!'e7!J%u$a!'e7!J%u$a!'e7!
J)C;,!'e7!J)C;,!'e7!5MuMA!'e7!5MuMA!'e7!5MuMA!'e7!+7K71!'e7!
+7K71!'e7!&+BQ!!'e7!&,6,)!'e7!#P\9!!.Vca"8Dir!.Vca"8i-!!.Vca
!WE'!!<9h7!<)ru!U%5u!.OtK!QVtU!'bu6",FYl!$C,!%thXt!!hun*s9:Y
!!E3#qua_7!!*'!p]J;3!!",@huUUn!!!-$!!0k8~>
 ]
/TTC43b00 AddT3T32Char
T32RsrcEnd
1652 434 M <04>S 
742 701 M <01>S 
742 931 M <03>S 
742 1168 M <04>S 
1 Lw solid N 1418 833 M 1538 953 I 1539 954 I 1539 956 I 1539 957 I 1538 959 I 1537 960 I 1535 960 I 1534 960 I 1532 959 I 1412 839 I 1411 838 I 1410 836 I 1411 835 I 1412 833 I 1413 832 I 1415 832 I 1416 832 I 1418 833 I 1418 833 I C 
1403 860 M 1385 807 I 1438 824 I 1403 860 I C 
:  L ; K 
N 968 608 M 1088 729 I 1089 730 I 1089 732 I 1089 733 I 1088 735 I 1087 736 I 1085 736 I 1084 736 I 1082 735 I 962 614 I 961 613 I 960 611 I 961 610 I 962 608 I 963 607 I 965 607 I 966 607 I 968 608 I 968 608 I C 
953 635 M 935 582 I 988 599 I 953 635 I C 
:  L ; K 
N 1208 759 M 1316 759 I 1318 759 I 1319 760 I 1320 761 I 1321 763 I 1320 765 I 1319 766 I 1318 767 I 1316 767 I 1208 767 I 1206 767 I 1205 766 I 1204 765 I 1204 763 I 1204 761 I 1205 760 I 1206 759 I 1208 759 I 1208 759 I C 
1216 788 M 1166 763 I 1216 738 I 1216 788 I C 
:  L ; K 
Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_Encoding256 5.0 0
/CharCol256Encoding[/.notdef/breve/caron/dotaccent/dotlessi/fi/fl/fraction
/hungarumlaut/Lslash/lslash/minus/ogonek/ring/Zcaron/zcaron/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/space/exclam/quotedbl/numbersign
/dollar/percent/ampersand/quotesingle/parenleft/parenright/asterisk/plus/comma
/hyphen/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O/P/Q/R/S
/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore/grave
/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright
/asciitilde/.notdef/Euro/.notdef/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef
/.notdef/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis/.notdef/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/.notdef/registered
/macron/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph
/periodcentered/cedilla/onesuperior/ordmasculine/guillemotright/onequarter
/onehalf/threequarters/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis
/Aring/AE/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute
/Icircumflex/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve
/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis]def EncodeDict/256 CharCol256Encoding put
%%EndResource
end reinitialize

%%IncludeResource: font Courier
Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_Win_Euro_L2 5.0 0
/UseT3EuroFont{/currentdistillerparams where{pop currentdistillerparams
/CoreDistVersion get 4000 le}{false}ifelse}bind def/NewEuroT3Font?{dup/FontType
get 3 eq{dup/EuroFont known exch/BaseFont known and}{pop false}ifelse}bind def
/T1FontHasEuro{dup/CharStrings known not{dup NewEuroT3Font?{dup/EuroGlyphName
get exch/EuroFont get/CharStrings get exch known{true}{false}ifelse}{pop false}
ifelse}{dup/FontType get 1 eq{/CharStrings get/Euro known}{dup/InfoDict known{
/InfoDict get/Euro known}{/CharStrings get/Euro known}ifelse}ifelse}ifelse}bind
def/FontHasEuro{findfont dup/Blend known{pop true}{T1FontHasEuro}ifelse}bind
def/EuroEncodingIdx 1 def/EuroFontHdr{12 dict begin/FontInfo 10 dict dup begin
/version(001.000)readonly def/Notice(Copyright (c)1999 Adobe Systems
Incorporated. All Rights Reserved.)readonly def/FullName(Euro)readonly def
/FamilyName(Euro)readonly def/Weight(Regular)readonly def/isFixedPitch false
def/ItalicAngle 0 def/UnderlinePosition -100 def/UnderlineThickness 50 def end
readonly def/FontName/Euro def/Encoding 256 array 0 1 255{1 index exch/.notdef
put}for def/PaintType 0 def/FontType 1 def/FontMatrix[0.001 0 0 0.001 0 0]def
/FontBBox{-25 -23 1500 804}readonly def currentdict end dup/Private 20 dict dup
begin/ND{def}def/NP{put}def/lenIV -1 def/RD{string currentfile exch
readhexstring pop}def/-|{string currentfile exch readstring pop}executeonly def
/|-{def}executeonly def/|{put}executeonly def/BlueValues[-20 0 706 736 547 572]
|-/OtherBlues[-211 -203]|-/BlueScale 0.0312917 def/MinFeature{16 16}|-/StdHW
[60]|-/StdVW[71]|-/ForceBold false def/password 5839 def/Erode{8.5 dup 3 -1
roll 0.1 mul exch 0.5 sub mul cvi sub dup mul 71 0 dtransform dup mul exch dup
mul add le{pop pop 1.0 1.0}{pop pop 0.0 1.5}ifelse}def/OtherSubrs[{}{}{}
{systemdict/internaldict known not{pop 3}{1183615869 systemdict/internaldict
get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck
get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]|-/Subrs 5 array dup 0
<8E8B0C100C110C110C210B>put dup 1<8B8C0C100B>put dup 2<8B8D0C100B>put dup 3<0B>
put dup 4<8E8C8E0C100C110A0B>put |- 2 index/CharStrings 256 dict dup begin
/.notdef<8b8b0d0e>def end end put put dup/FontName get exch definefont pop}bind
def/AddEuroGlyph{2 index exch EuroEncodingIdx 1 eq{EuroFontHdr}if systemdict
begin/Euro findfont dup dup/Encoding get 5 1 roll/Private get begin/CharStrings
get dup 3 index known{pop pop pop pop end end}{begin 1 index exch def end end
end EuroEncodingIdx dup 1 add/EuroEncodingIdx exch def exch put}ifelse}bind def
/GetNewXUID{currentdict/XUID known{[7 XUID aload pop]true}{currentdict/UniqueID
known{[7 UniqueID]true}{false}ifelse}ifelse}bind def/BuildT3EuroFont{exch 16
dict begin dup/FontName exch def findfont dup/Encoding get/Encoding exch def
dup length 1 add dict copy dup/FID undef begin dup dup/FontName exch def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for def GetNewXUID{/XUID
exch def}if currentdict end definefont pop/BaseFont exch findfont 1000
scalefont def/EuroFont exch findfont 1000 scalefont def pop/EuroGlyphName exch
def/FontType 3 def/FontMatrix[.001 0 0 .001 0 0]def/FontBBox BaseFont/FontBBox
get def/Char 1 string def/BuildChar{exch dup begin/Encoding get 1 index get
/Euro eq{BaseFont T1FontHasEuro{false}{true}ifelse}{false}ifelse{EuroFont
setfont pop userdict/Idx 0 put EuroFont/Encoding get{EuroGlyphName eq{exit}
{userdict/Idx Idx 1 add put}ifelse}forall userdict/Idx get}{dup dup Encoding
exch get BaseFont/Encoding get 3 1 roll put BaseFont setfont}ifelse Char 0 3 -1
roll put Char stringwidth newpath 0 0 moveto Char true charpath flattenpath
pathbbox setcachedevice 0 0 moveto Char show end}bind def currentdict end dup
/FontName get exch definefont pop}bind def/AddEuroToT1Font{dup findfont dup
length 10 add dict copy dup/FID undef begin/EuroFont 3 -1 roll findfont 1000
scalefont def CharStrings dup length 1 add dict copy begin/Euro{EuroFont
setfont pop EuroGBBox aload pop setcachedevice 0 0 moveto EuroGName glyphshow}
bind def currentdict end/CharStrings exch def GetNewXUID{/XUID exch def}if 3 1
roll/EuroGBBox exch def/EuroGName exch def currentdict end definefont pop}bind
def/BuildNewFont{UseT3EuroFont{BuildT3EuroFont}{pop AddEuroToT1Font}ifelse}bind
def/UseObliqueEuro{findfont/FontMatrix get dup 2 get 0 eq exch dup 0 get exch 3
get eq and UseT3EuroFont or}bind def
%%EndResource
end reinitialize
/Courier FontHasEuro not
{
/Euro.Courier
 [600 0 17 -12 578 584 ] 
<9CF8EC0DD1C303F88DC1037FC201F760C201F7CEC201F8A5C201F76004DB06A8FB0FE32E
F7278B08DA8BD8A8C8B80873BA0556644870478B08278B39C56DF208F776069FC205FB94
068B968A968B96088B928B938C9208F7A6069FC205FBB106A3EAD3CCEB8B08D18BD071B1
63084307C106F75507550656075AAE569D438B08FB188B2D2D70FB0D085106775405D106
7A078B7E8C7F8C7E085706090E>
AddEuroGlyph
/Euro /Courier /Courier-Copy BuildNewFont
} if
F /F1 0 /256 T /Courier mF 
/F1S52 F1 [82.949 0 0 -82.949 0 0 ] mFS
F1S52 Ji 
2870 848 M (A)S 
2920 848 M (-)S 
2970 848 M (CG)[50  0]xS 
2870 947 M (ATCG)[50 50 50  0]xS 
N 2134 878 M 2467 878 I 2469 878 I 2470 879 I 2471 880 I 2472 881 I 2471 882 I 2470 884 I 2469 885 I 2467 885 I 2134 885 I 2132 885 I 2131 884 I 2130 882 I 2130 881 I 2130 880 I 2131 879 I 2132 878 I 2134 878 I 2134 878 I C 
2459 857 M 2509 881 I 2459 906 I 2459 857 I C 
:  L ; K 
N 1638 1053 M 1759 1174 I 1760 1175 I 1760 1177 I 1760 1178 I 1759 1180 I 1758 1181 I 1756 1181 I 1754 1181 I 1753 1180 I 1632 1059 I 1632 1058 I 1631 1056 I 1632 1055 I 1632 1053 I 1634 1052 I 1635 1052 I 1637 1052 I 1638 1053 I 1638 1053 I C 
1624 1080 M 1606 1027 I 1659 1044 I 1624 1080 I C 
:  L ; K 
/TTC45b00
[66 0 0 0 0 0 ] 
 256 array 0 1 255 {1 index exch /.notdef put} for 
[0 0 0 0 ] 
[1 66 div 0 0 -1 66 div 0 0 ]
/__TTC45b00
GreNewFont
T32RsrcBegin

1
/g12841 [67 0 3 -50 64 4 ] 
/g12841 [61 54 true [1 0 0 1 -3 50 ]  0 0]
[<~s8W-!5QCb6s8W-!5QCb6s8W-!5QCb6s8W-!5QCb6s8W-!5QCb6!$46&!!"*k
!$46&!!"*k!$46&!!"*k!$46&!!"*k!$46&!!"*k!$46&!!"*k!$46&!!"*k
5QCc]!!"*k5QCc]!!"*k5QCc]!!"*k5QCc]!!"*k4ruh6!!"*k4ruh6!!"*k
4ruh6!!"*k4ruh6!!"*k4ruh6!!"*k4ruh65QCb64ruh65QCb65!1rT5QCb6
5!1rT5QCb65!1rT5QCb65!1rT56)dU5(#Tm56)dU5565t56(Z`555Zd56(Z`
54AQ"56(Z`5%"A<56(Z`4s0iQ56(Z`4obS156(Z`4obS156(Z`4obS156(Z`
5QCc]56(Z`5QCc]56(Z`5QCc]56(Z`5QCc]56(Z`4obS156(]Q4obS156(]Y
4obS156(]Y4obS156(`Z4obS156(`Z4obS156(`Z5QCc]56(`Z5QCc]56(fT
5QCc]5QCcQ5QCc]5QCcQ4obS15QCcA4obS1+92B!4obS1#QOgS4obS1z~>
 ]
/TTC45b00 AddT3T32Char

2
/g3273 [67 0 4 -52 61 5 ] 
/g3273 [57 57 true [1 0 0 1 -4 52 ]  0 0]
[<~z!!%KKz!!%KK&-)\0huJ3+&-)\0huJ3+&-)\0huJ3+&-)\0huJ3+&-)\0huJ3+
!!hE^&&<Vo!!hE^&)_m:!!g:>&&<Vo!!g:>&&<Vo!!g:>&&<Vo!!g:>&&<Vo
!"ZjF&&<Vo!"ZjF&&<Vo!"],/&&<Vo!"],/&&<Vo!$D7?&&<Vo!$D7?&&<Vo
!$D7?&&<Vo!'^I4&&<Vo!'^I4&&<Vo!.Fos&&<Vo!.Fos&&<Vo!;lhG&&<Vo
!W2qF&&<Vo!WE)s&&<Vo"93oL&&<Vo#QMU;&&<Vo#QO;k&&<Vo&+B;k&&<Vo
+2e-R&&<Vo5JdBp&&<Vos+#Uo&&<Vorr>:Q&&<VoIK1JZ&&<Vo49,o]&&<Vo
2uj3A&&<Vo&-*7!&&<Vo!!!PF&&<Vo!!"+V&&<Vo!!#66&&<Vo!!%M!&&<Vo
!!*$!&&<Vo!!3'!!!%HJ!!E3#!!%HJ!!iE%!!%HJ!$Ct9!!%HJ!'frQ!!%HJ
!<:sW!!%HJ"96.:!!%HJ&-%.[!"]&/&,lP/!"]&/&,ZD-!"]&/#Oh]n!"]&/
"2Fm:!"\i)!rr<$z~>
 ]
/TTC45b00 AddT3T32Char
T32RsrcEnd
Is2016andT32? not {
 /TTC45b00 /Font G2UBegin
/g12841 <914D> def
/g3273 <5217> def
G2UEnd
} if
F /F2 0 /0 F /TTC45b00 mF 
/F2S43 F2 [67.188 0 0 -67.188 0 0 ] mFS
F2S43 Ji 
526 924 M <0102>[67  0]xS 
T32RsrcBegin

3
/g17137 [46 0 9 -46 29 -1 ] 
/g17137 [20 45 true [1 0 0 1 -9 46 ]  0 0]
[<~!!2Qh"7Q9qn,O!g!$C\1s7$'gnGiOXs8VTgs6p!jn,NR[!!D]j"7Q9mn,NR[
!!D]j"7Q9mn,NR[!!D]j"7Q9mn,NR[!!D]j"7Q9mn,NR[!!D]j"7Q9mn,NR[
!!D]j"7Q9mn,NR[!!D]j"7Q9mn,NR[!!D]j"7Q9mn,NR[!!D]~>
 ]
/TTC45b00 AddT3T32Char
T32RsrcEnd
Is2016andT32? not {
 /TTC45b00 /Font G2UBegin
/g17137 <FF11> def
G2UEnd
} if
659 924 M <03>S 
1272 290 M <0102>[67  0]xS 

%%IncludeResource: font Helvetica
/Helvetica FontHasEuro not
{
/Euro.Helvetica
 [556 0 24 -19 541 703 ] 
<A3F8C00DD4E90378DA01F779D301F808D301F904DA01F899F908156CB447AD338B08FB2D
8B372B7BFB37085806724305D30644075B06724305DA06A0FB36E035F7218B08E08BCDB7
939208EE077A71405E418B083F8B4CCE84F108F76506A3D305FB8306D207F79C06A3D305
FBB10692E2B7E8F28B08E08BBE62A45A08090E>
AddEuroGlyph
/Euro /Helvetica /Helvetica-Copy BuildNewFont
} if
F /F3 0 /256 T /Helvetica mF 
/F3S42 F3 [66.957 0 0 -66.957 0 0 ] mFS
F3S42 Ji 
1406 290 M (2)S 
LH
%%PageTrailer

%%Trailer
%%DocumentNeededResources: 
%%+ font Courier
%%+ font Helvetica
%%DocumentSuppliedResources: 
%%+ procset Pscript_WinNT_ErrorHandler 5.0 0
%%+ procset Pscript_FatalError 5.0 0
%%+ procset Pscript_Win_Basic 5.0 0
%%+ procset Pscript_Win_Utils_L2 5.0 0
%%+ procset Pscript_Win_GdiObject 5.0 0
%%+ procset Pscript_Win_GdiObject_L2 5.0 0
%%+ procset Pscript_T3Hdr 5.0 0
%%+ procset Pscript_Text 5.0 0
%%+ procset Pscript_Encoding256 5.0 0
%%+ procset Pscript_Win_Euro_L2 5.0 0
Pscript_WinNT_Incr dup /terminate get exec
%%EOF
