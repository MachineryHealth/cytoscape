package edu.ucsd.bioeng.idekerlab.PathwayWalkingPlugin;

import static cytoscape.visual.VisualPropertyType.NODE_LABEL;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import giny.model.Edge;
import giny.model.Node;
/*
 * GUI.java
 *
 * Created on February 4, 2008, 11:38 AM
 */
 
/**
 *
 * @author  Administrator
 */
import cytoscape.CyNetwork;
import cytoscape.Cytoscape;
import cytoscape.data.CyAttributes;
import cytoscape.layout.Tunable;
import cytoscape.util.ModuleProperties;
import cytoscape.util.ModulePropertiesImpl;
import cytoscape.visual.EdgeAppearanceCalculator;
import cytoscape.visual.GlobalAppearanceCalculator;
import cytoscape.visual.NodeAppearanceCalculator;
import cytoscape.visual.NodeShape;
import cytoscape.visual.VisualPropertyType;
import cytoscape.visual.VisualStyle;
import cytoscape.visual.calculators.AbstractCalculator;
import cytoscape.visual.calculators.NodeCalculator;
import cytoscape.visual.mappings.PassThroughMapping;

public class GUI extends javax.swing.JFrame {
 
	
    /** Creates new form GUI */
    public GUI(Node nd) {
    	node = nd;
    	cyAtts = Cytoscape.getNodeAttributes();
    	nodeId = node.getIdentifier();
        initComponents();

    }
 
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">
    private void initComponents() {
        titleText = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        nodeIDText = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jLabel13 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jProgressBar1 = new javax.swing.JProgressBar();
        jProgressBar2 = new javax.swing.JProgressBar();
        jProgressBar3 = new javax.swing.JProgressBar();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox();
 
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        titleText.setFont(new java.awt.Font("Tahoma", 1, 18));
        titleText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleText.setText("Pathway Walking Plugin");
 
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel2.setText("Current Node ID:");
 
        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel3.setText("Identifier:");
 
        nodeIDText.setText(nodeId);
 
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel1.setText("Databases");
 
        jCheckBox1.setText("IntAct");
        jCheckBox1.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jCheckBox1.setMargin(new java.awt.Insets(0, 0, 0, 0));
//        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                jCheckBox1ActionPerformed(evt);
//            }
//        });
 
        jCheckBox2.setText("NCBI");
        jCheckBox2.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jCheckBox2.setMargin(new java.awt.Insets(0, 0, 0, 0));
 
        jCheckBox3.setText("Pathway Commons");
        jCheckBox3.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jCheckBox3.setMargin(new java.awt.Insets(0, 0, 0, 0));
 
        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel4.setText("Progress");
 
        jScrollPane1.setViewportView(jList1);
 
        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel13.setText("Results:");
 
        jButton1.setText("Add to New Network");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
 
        jButton2.setText("Add to Existing Network");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
 
        jButton3.setText("Advanced");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
 
        jButton4.setText("Cancel");
 
        jButton5.setText("Cancel");
 
        jButton6.setText("Cancel");
        
 
//        attributeNames = cyAtts.getAttributeNames();
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

 
        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel1)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                    .add(layout.createSequentialGroup()
                                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                            .add(jLabel2)
                                            .add(jLabel3))
                                        .add(14, 14, 14)
                                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                            .add(layout.createSequentialGroup()
                                                .add(nodeIDText, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED))
                                            .add(jComboBox1, 0, 153, Short.MAX_VALUE)))
                                    .add(layout.createSequentialGroup()
                                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                            .add(jCheckBox1)
                                            .add(jCheckBox2)
                                            .add(jCheckBox3))
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                            .add(jProgressBar3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE)
                                            .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jProgressBar1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE)
                                                    .add(jProgressBar2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE)
                                                    .add(jLabel4))))))
                                .add(47, 47, 47)))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jButton4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 64, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jButton5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 64, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jButton6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 64, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(19, 19, 19))
                    .add(layout.createSequentialGroup()
                        .add(jLabel13)
                        .addContainerGap(352, Short.MAX_VALUE))
                    .add(layout.createSequentialGroup()
                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 391, Short.MAX_VALUE)
                        .addContainerGap())
                    .add(layout.createSequentialGroup()
                        .add(jButton1)
                        .add(34, 34, 34)
                        .add(jButton2)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 36, Short.MAX_VALUE)
                        .add(jButton3)
                        .addContainerGap())))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, titleText, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 411, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(titleText)
                .add(19, 19, 19)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel2)
                            .add(nodeIDText))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel3)
                            .add(jComboBox1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(19, 19, 19)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel1)
                            .add(jLabel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 15, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(17, 17, 17)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jCheckBox1)
                            .add(jProgressBar1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(jButton4))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jButton5)
                    .add(jCheckBox2)
                    .add(jProgressBar2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(8, 8, 8)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jCheckBox3)
                    .add(jProgressBar3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton6))
                .add(19, 19, 19)
                .add(jLabel13)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 154, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(22, 22, 22)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jButton1)
                    .add(jButton3)
                    .add(jButton2))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
//        attempt = new Intact(nodeId, node, jProgressBar1, 1, this);
//        attempt2 = new NCBI(nodeId, node, jProgressBar2, 1, this);
        pack();
    }
 
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {
// TODO add your handling code here:
        System.out.println("Advanced");
        AdvancedGUI advG = new AdvancedGUI();
        advG.openGUI();
    }
    

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
    	System.out.println("Add to Existing Network");
    	if(jCheckBox1.isSelected() == true)
    	{
    		jProgressBar1.setIndeterminate(true);
	        System.out.println("[Search & Add on Existing] Button Pressed");
	        
	        //Intact attempt = new Intact();
	        //attempt.startSearch(nodeId, node);
	        System.out.println("Here we go....");
	        System.out.println("This is columnSearch()" + columnSearch());
	        
	        Intact attempt = new Intact(columnSearch(), node, jProgressBar1, 1);

	        
	        attempt.start();
 
	        System.out.println("After Intact Client was called.");
	        //jProgressBar1.setIndeterminate(false);
    	}
    	if(jCheckBox2.isSelected() == true)
    	{
    		jProgressBar2.setIndeterminate(true);
	        System.out.println("[Search & Add on Existing] Button Pressed");
	        
	        NCBI attempt2 = new NCBI(columnSearch(), node, jProgressBar2, 1);
//	        attempt2.startSearch(nodeId, node);
	        attempt2.start();
 
	        System.out.println("After NCBI Client was called.");
	        
    	}
//		This code will hide the PathwayWalking window immediately after the button is pressed due to the threading.
//		This is because we have one thread running the GUI.  One thread running IntAct.  And one thread running NCBI.
//		In order to avoid this, we will need to put the setVisible(false) within IntAct and NCBI respectively.
//    	if(jProgressBar1.isIndeterminate() == false && jProgressBar2.isIndeterminate() == false){
//    		setVisible(false);

    	
//    	}
    }
    
 
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {
        System.out.println("Open in New Network");
        
    	// If IntAct is checked
        if(jCheckBox1.isSelected() == true)
    	{

    		jProgressBar1.setIndeterminate(true);

	        System.out.println("[Search & Open in New] Button Pressed");
	        
	        //Intact attempt = new Intact();
	        //attempt.startSearch(nodeId, node);
//	        if(jComboBox1.getSelectedIndex() == 0){
//		        Intact attempt = new Intact(nodeId, node, jProgressBar1, 1);
//		        attempt.start();
//	        }
	        
	        // this combobox gives you a list of attribute names
	        
	        
	        System.out.println("Attribute Name:" + attributeNames[index]);

	        Intact attempt = new Intact(columnSearch(), node, jProgressBar1, 2);
	        attempt.start();
 
	        System.out.println("After Intact Client was called.");
	        //jProgressBar1.setIndeterminate(false);
    	}
        
        // If NCBI is checked
    	if(jCheckBox2.isSelected() == true)
    	{
    		jProgressBar2.setIndeterminate(true);
	        System.out.println("[Search & Open in New] Button Pressed");
	        
	        NCBI attempt = new NCBI(columnSearch(), node, jProgressBar2, 2);
	        attempt.start();
	        
	        
	        System.out.println("After NCBI Client was called.");
	        
    	}
    	
    }
    
    public String columnSearch(){
    	index = jComboBox1.getSelectedIndex();
    	System.out.println("This is index: " + index);
		System.out.println("This is the attribute header: " + attributeNames[index]);
		
		String attribute = cyAtts.getStringAttribute(nodeId, attributeNames[index]);

		System.out.println("Attribute from ColumnSearch:" + attribute);	
		return attribute;
    }
 
    /**
     * @param args the command line arguments
     */
    public void loadGui(Node nd) {
    	final Node node = nd;
        java.awt.EventQueue.invokeLater(new Runnable() {
        	public void run() {
                new GUI(node).setVisible(true);
            }
        });
    }
    

	
	

    
    // Variables declaration - do not modify                    
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JList jList1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JProgressBar jProgressBar2;
    private javax.swing.JProgressBar jProgressBar3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel nodeIDText;
    private javax.swing.JLabel titleText;
    private String nodeId;
    private Node node;
    private CyAttributes cyAtts;
    private String[] attributeNames;
    private CyAttributes cyAtts2;
    private int index;
    private Intact attempt;
    private NCBI attempt2;
    // End of variables declaration                  

}