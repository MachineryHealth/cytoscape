/*
 * SessionExporterDialog.java
 *
 * Created on May 16, 2007, 1:40 PM
 */

package SessionForWebPlugin;

import cytoscape.Cytoscape;

/**
 *
 * @author  slotia
 */
public class SessionExporterDialog extends javax.swing.JDialog {
    
    /** Creates new form SessionExporterDialog */
    public SessionExporterDialog(SessionExporterSettings settings) {
        super(Cytoscape.getDesktop(), true);
        this.settings = settings;
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        bundleDirectoryRadioButton = new javax.swing.JRadioButton();
        bundleZipRadioButton = new javax.swing.JRadioButton();
        jPanel1 = new javax.swing.JPanel();
        separatePagesCheckBox = new javax.swing.JCheckBox();
        numPerPageLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        numPerRowSpinner = new javax.swing.JSpinner();
        numPerPageSpinner = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        sortImagesComboBox = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        javax.swing.SpinnerModel spinnerModel = new javax.swing.SpinnerNumberModel(1.0d, 0.0d, 100.0d, 0.1d);
        imageZoomSpinner = new javax.swing.JSpinner(spinnerModel);
        imageZoomSpinner.setEditor(new javax.swing.JSpinner.NumberEditor(imageZoomSpinner, "#.0"));
        maxImageSizeCheckBox = new javax.swing.JCheckBox();
        maxImageWidthLabel = new javax.swing.JLabel();
        maxImageWidthSpinner = new javax.swing.JSpinner();
        maxImageHeightLabel = new javax.swing.JLabel();
        maxImageHeightSpinner = new javax.swing.JSpinner();
        jLabel7 = new javax.swing.JLabel();
        formatComboBox = new javax.swing.JComboBox();
        jPanel3 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        maxThumbnailWidthSpinner = new javax.swing.JSpinner();
        jLabel11 = new javax.swing.JLabel();
        maxThumbnailHeightSpinner = new javax.swing.JSpinner();
        jLabel8 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Session for Web");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);
        jLabel12.setText("Save bundle:");

        bundleDirectoryRadioButton.setText("To a directory");
        bundleDirectoryRadioButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        bundleDirectoryRadioButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        bundleDirectoryRadioButton.setSelected(settings.destination == SessionExporterSettings.DESTINATION_DIRECTORY);
        bundleDirectoryRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bundleDirectoryAction(evt);
            }
        });

        bundleZipRadioButton.setText("As a zip archive");
        bundleZipRadioButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        bundleZipRadioButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        bundleZipRadioButton.setSelected(settings.destination == SessionExporterSettings.DESTINATION_ZIP_ARCHIVE);
        bundleZipRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bundleZipAction(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel4Layout = new org.jdesktop.layout.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel12)
                    .add(jPanel4Layout.createSequentialGroup()
                        .add(12, 12, 12)
                        .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(bundleZipRadioButton)
                            .add(bundleDirectoryRadioButton))))
                .addContainerGap(175, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel12)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(bundleDirectoryRadioButton)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(bundleZipRadioButton)
                .addContainerGap(78, Short.MAX_VALUE))
        );
        jTabbedPane1.addTab("Bundle", jPanel4);

        separatePagesCheckBox.setText("Separate into pages");
        separatePagesCheckBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        separatePagesCheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
        separatePagesCheckBox.setSelected(settings.doSeparateIntoPages);
        separatePagesCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                separatePagesAction(evt);
            }
        });

        numPerPageLabel.setText("Number of networks per page: ");
        numPerPageLabel.setEnabled(false);
        numPerPageLabel.setEnabled(settings.doSeparateIntoPages);

        jLabel2.setText("Number of networks per row:");

        numPerRowSpinner.setValue(new Integer(1));
        numPerRowSpinner.setValue(new Integer(settings.numNetworksPerRow));

        numPerPageSpinner.setEnabled(false);
        numPerPageSpinner.setValue(new Integer(settings.numNetworksPerPage));
        numPerPageSpinner.setEnabled(settings.doSeparateIntoPages);

        jLabel3.setText("Sort images:");

        sortImagesComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Alphabetically", "By visual style", "As is" }));

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(separatePagesCheckBox)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jLabel3)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(sortImagesComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(17, 17, 17)
                        .add(numPerPageLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(numPerPageSpinner, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 45, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jLabel2)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(numPerRowSpinner, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 46, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(numPerRowSpinner, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(separatePagesCheckBox)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(numPerPageLabel)
                    .add(numPerPageSpinner, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel3)
                    .add(sortImagesComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        jTabbedPane1.addTab("HTML Page", jPanel1);

        jLabel4.setText("Zoom:");

        maxImageSizeCheckBox.setText("Set maximum image size:");
        maxImageSizeCheckBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        maxImageSizeCheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
        maxImageSizeCheckBox.setSelected(settings.doSetMaxImageSize);
        maxImageSizeCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maxImageSizeAction(evt);
            }
        });

        maxImageWidthLabel.setText("Width:");
        maxImageWidthLabel.setEnabled(false);
        maxImageWidthLabel.setEnabled(settings.doSetMaxImageSize);

        maxImageWidthSpinner.setEnabled(false);
        maxImageWidthSpinner.setEnabled(settings.doSetMaxImageSize);
        maxImageWidthSpinner.setValue(new Integer(settings.maxImageWidth));

        maxImageHeightLabel.setText("Height:");
        maxImageHeightLabel.setEnabled(false);
        maxImageHeightLabel.setEnabled(settings.doSetMaxImageSize);

        maxImageHeightSpinner.setEnabled(false);
        maxImageHeightSpinner.setEnabled(settings.doSetMaxImageSize);
        maxImageHeightSpinner.setValue(new Integer(settings.maxImageHeight));

        jLabel7.setText("Format:");

        formatComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "png", "jpg" }));

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jLabel4)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(imageZoomSpinner, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 50, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(maxImageSizeCheckBox)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(17, 17, 17)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(maxImageHeightLabel)
                            .add(maxImageWidthLabel))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(maxImageHeightSpinner)
                            .add(maxImageWidthSpinner, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 57, Short.MAX_VALUE)))
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jLabel7)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(formatComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(126, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel4)
                    .add(imageZoomSpinner, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(maxImageSizeCheckBox)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(maxImageWidthLabel)
                    .add(maxImageWidthSpinner, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(maxImageHeightLabel)
                    .add(maxImageHeightSpinner, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel7)
                    .add(formatComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jTabbedPane1.addTab("Image", jPanel2);

        jLabel9.setText("Maximum size:");

        jLabel10.setText("Width:");

        maxThumbnailWidthSpinner.setValue(new Integer(settings.maxThumbnailWidth));

        jLabel11.setText("Height:");

        maxThumbnailHeightSpinner.setValue(new Integer(settings.maxThumbnailHeight));

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel3Layout.createSequentialGroup()
                        .add(12, 12, 12)
                        .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel11)
                            .add(jLabel10))
                        .add(22, 22, 22)
                        .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(maxThumbnailHeightSpinner)
                            .add(maxThumbnailWidthSpinner, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)))
                    .add(jLabel9))
                .addContainerGap(169, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel9)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel10)
                    .add(maxThumbnailWidthSpinner, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel11)
                    .add(maxThumbnailHeightSpinner, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(67, Short.MAX_VALUE))
        );
        jTabbedPane1.addTab("Thumbnail", jPanel3);

        jLabel8.setText("Settings:");

        jButton1.setText("Export");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportAction(evt);
            }
        });

        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelAction(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel8)
                    .add(layout.createSequentialGroup()
                        .add(165, 165, 165)
                        .add(jButton2)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButton1)))
                .addContainerGap(12, Short.MAX_VALUE))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jTabbedPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 319, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel8)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jTabbedPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jButton1)
                    .add(jButton2))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exportAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportAction
        if (bundleDirectoryRadioButton.isSelected())
            settings.destination = SessionExporterSettings.DESTINATION_DIRECTORY;
        else if (bundleZipRadioButton.isSelected())
            settings.destination = SessionExporterSettings.DESTINATION_ZIP_ARCHIVE;
        settings.numNetworksPerRow = ((Number) numPerRowSpinner.getValue()).intValue();
        settings.doSeparateIntoPages = separatePagesCheckBox.isSelected();
        settings.numNetworksPerPage = ((Number) numPerPageSpinner.getValue()).intValue();
        if (sortImagesComboBox.getSelectedIndex() == 0)
            settings.sortImages = SessionExporterSettings.SORT_IMAGES_ALPHABETICALLY;
        else if (sortImagesComboBox.getSelectedIndex() == 1)
            settings.sortImages = SessionExporterSettings.SORT_IMAGES_BY_VISUAL_STYLE;
        else if (sortImagesComboBox.getSelectedIndex() == 2)
            settings.sortImages = SessionExporterSettings.SORT_IMAGES_AS_IS;
        settings.imageZoom = ((Number) imageZoomSpinner.getValue()).doubleValue();
        settings.doSetMaxImageSize = maxImageSizeCheckBox.isSelected();
        settings.maxImageWidth = ((Number) maxImageWidthSpinner.getValue()).intValue();
        settings.maxImageHeight = ((Number) maxImageHeightSpinner.getValue()).intValue();
        settings.imageFormat = (String) formatComboBox.getSelectedItem();
        settings.maxThumbnailWidth = ((Number) maxThumbnailWidthSpinner.getValue()).intValue();
        settings.maxThumbnailHeight = ((Number) maxThumbnailHeightSpinner.getValue()).intValue();
        
        Bundle bundle = BundleChooser.chooseBundle(settings);
        if (bundle != null)
        {
            HTMLSessionExporter exporter = new HTMLSessionExporter();
            exporter.export(settings, bundle);
            dispose();
        }
    }//GEN-LAST:event_exportAction

    private void cancelAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelAction
        dispose();
    }//GEN-LAST:event_cancelAction

    private void maxImageSizeAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maxImageSizeAction
        boolean enable = maxImageSizeCheckBox.isSelected();
        maxImageWidthLabel.setEnabled(enable);
        maxImageWidthSpinner.setEnabled(enable);
        maxImageHeightLabel.setEnabled(enable);
        maxImageHeightSpinner.setEnabled(enable);
    }//GEN-LAST:event_maxImageSizeAction

    private void separatePagesAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_separatePagesAction
        boolean enable = separatePagesCheckBox.isSelected();
        numPerPageLabel.setEnabled(enable);
        numPerPageSpinner.setEnabled(enable);
    }//GEN-LAST:event_separatePagesAction

    private void bundleZipAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bundleZipAction
        bundleDirectoryRadioButton.setSelected(!bundleZipRadioButton.isSelected());
    }//GEN-LAST:event_bundleZipAction

    private void bundleDirectoryAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bundleDirectoryAction
        bundleZipRadioButton.setSelected(!bundleDirectoryRadioButton.isSelected());
    }//GEN-LAST:event_bundleDirectoryAction
    
    private SessionExporterSettings settings;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton bundleDirectoryRadioButton;
    private javax.swing.JRadioButton bundleZipRadioButton;
    private javax.swing.JComboBox formatComboBox;
    private javax.swing.JSpinner imageZoomSpinner;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel maxImageHeightLabel;
    private javax.swing.JSpinner maxImageHeightSpinner;
    private javax.swing.JCheckBox maxImageSizeCheckBox;
    private javax.swing.JLabel maxImageWidthLabel;
    private javax.swing.JSpinner maxImageWidthSpinner;
    private javax.swing.JSpinner maxThumbnailHeightSpinner;
    private javax.swing.JSpinner maxThumbnailWidthSpinner;
    private javax.swing.JLabel numPerPageLabel;
    private javax.swing.JSpinner numPerPageSpinner;
    private javax.swing.JSpinner numPerRowSpinner;
    private javax.swing.JCheckBox separatePagesCheckBox;
    private javax.swing.JComboBox sortImagesComboBox;
    // End of variables declaration//GEN-END:variables
    
}
