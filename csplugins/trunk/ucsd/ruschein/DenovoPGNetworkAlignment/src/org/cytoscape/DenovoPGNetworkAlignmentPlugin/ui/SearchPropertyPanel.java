package org.cytoscape.DenovoPGNetworkAlignmentPlugin.ui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.Arrays;
import java.util.Set;
import java.util.SortedSet;
import java.util.TreeSet;

import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.SwingConstants;

import org.cytoscape.DenovoPGNetworkAlignmentPlugin.SearchParameters;
import org.cytoscape.DenovoPGNetworkAlignmentPlugin.SearchTask;

import cytoscape.CyNetwork;
import cytoscape.Cytoscape;
import cytoscape.data.CyAttributes;
import cytoscape.data.attr.MultiHashMapDefinition;
import cytoscape.data.attr.MultiHashMapDefinitionListener;
import cytoscape.task.ui.JTaskConfig;
import cytoscape.task.util.TaskManager;
import cytoscape.view.cytopanels.CytoPanel;

/**
 * 
 * @author kono
 */
public class SearchPropertyPanel extends JPanel implements
		PropertyChangeListener, MultiHashMapDefinitionListener {

	private static final long serialVersionUID = -3352470909434196700L;

	private static final double DEF_ALPHA = 1.6;
	private static final double DEF_ALPHA_MUL = 1.0;
	private static final int DEF_DEGREE = 1;

	private SearchParameters parameters;

	/** Creates new form SearchPropertyPanel */
	public SearchPropertyPanel() {
		initComponents();

		Cytoscape.getPropertyChangeSupport().addPropertyChangeListener(this);
		Cytoscape.getEdgeAttributes().getMultiHashMapDefinition()
				.addDataDefinitionListener(this);

		updateAttributeLists();
		updateNetworkList();

		// Set defaults
		this.alphaTextField.setText(Double.toString(DEF_ALPHA));
		this.alphaMultiplierTextField.setText(Double.toString(DEF_ALPHA_MUL));
		this.degreeTextField.setText(Integer.toString(DEF_DEGREE));
	}

	public SearchParameters getParameters() {
		return parameters;
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		networkLabel = new javax.swing.JLabel();
		networkComboBox = new javax.swing.JComboBox();
		edgeAttributePanel = new javax.swing.JPanel();
		physicalEdgeLabel = new javax.swing.JLabel();
		physicalEdgeComboBox = new javax.swing.JComboBox();
		geneticEdgeLabel = new javax.swing.JLabel();
		geneticEdgeComboBox = new javax.swing.JComboBox();
		scorePanel = new javax.swing.JPanel();
		alphaLabel = new javax.swing.JLabel();
		alphaMultiplierLabel = new javax.swing.JLabel();
		alphaTextField = new javax.swing.JTextField();
		alphaMultiplierTextField = new javax.swing.JTextField();
		degreeLabel = new javax.swing.JLabel();
		degreeTextField = new javax.swing.JTextField();
		searchButton = new javax.swing.JButton();
		helpButton = new javax.swing.JButton();
		closeButton = new javax.swing.JButton();

		networkLabel.setText("Target Network:");

		networkComboBox.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				networkComboBoxActionPerformed(evt);
			}
		});

		edgeAttributePanel.setBorder(javax.swing.BorderFactory
				.createTitledBorder("Edge Attributes"));

		physicalEdgeLabel.setText("Physical:");

		physicalEdgeComboBox
				.addActionListener(new java.awt.event.ActionListener() {
					public void actionPerformed(java.awt.event.ActionEvent evt) {
						physicalEdgeComboBoxActionPerformed(evt);
					}
				});

		geneticEdgeLabel.setText("Genetic:");

		geneticEdgeComboBox
				.addActionListener(new java.awt.event.ActionListener() {
					public void actionPerformed(java.awt.event.ActionEvent evt) {
						geneticEdgeComboBoxActionPerformed(evt);
					}
				});

		javax.swing.GroupLayout edgeAttributePanelLayout = new javax.swing.GroupLayout(
				edgeAttributePanel);
		edgeAttributePanel.setLayout(edgeAttributePanelLayout);
		edgeAttributePanelLayout
				.setHorizontalGroup(edgeAttributePanelLayout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								edgeAttributePanelLayout
										.createSequentialGroup()
										.addContainerGap()
										.addGroup(
												edgeAttributePanelLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.TRAILING,
																false)
														.addComponent(
																geneticEdgeLabel,
																javax.swing.GroupLayout.Alignment.LEADING,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																Short.MAX_VALUE)
														.addComponent(
																physicalEdgeLabel,
																javax.swing.GroupLayout.Alignment.LEADING,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																Short.MAX_VALUE))
										.addGap(18, 18, 18)
										.addGroup(
												edgeAttributePanelLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING)
														.addComponent(
																geneticEdgeComboBox,
																0, 248,
																Short.MAX_VALUE)
														.addComponent(
																physicalEdgeComboBox,
																0, 248,
																Short.MAX_VALUE))
										.addContainerGap()));
		edgeAttributePanelLayout
				.setVerticalGroup(edgeAttributePanelLayout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								edgeAttributePanelLayout
										.createSequentialGroup()
										.addGroup(
												edgeAttributePanelLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(
																physicalEdgeLabel)
														.addComponent(
																physicalEdgeComboBox,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.PREFERRED_SIZE))
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addGroup(
												edgeAttributePanelLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING)
														.addComponent(
																geneticEdgeLabel)
														.addComponent(
																geneticEdgeComboBox,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.PREFERRED_SIZE))
										.addContainerGap(
												javax.swing.GroupLayout.DEFAULT_SIZE,
												Short.MAX_VALUE)));

		scorePanel.setBorder(javax.swing.BorderFactory
				.createTitledBorder("Score Parameters"));

		alphaLabel.setText("Alpha:");

		alphaMultiplierLabel.setText("Alpha Multiplier:");

		alphaTextField.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				alphaTextFieldActionPerformed(evt);
			}
		});

		alphaMultiplierTextField
				.addActionListener(new java.awt.event.ActionListener() {
					public void actionPerformed(java.awt.event.ActionEvent evt) {
						alphaMultiplierTextFieldActionPerformed(evt);
					}
				});

		degreeLabel.setText("Physical network filter degree (optional):");

		javax.swing.GroupLayout scorePanelLayout = new javax.swing.GroupLayout(
				scorePanel);
		scorePanel.setLayout(scorePanelLayout);
		scorePanelLayout
				.setHorizontalGroup(scorePanelLayout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								scorePanelLayout
										.createSequentialGroup()
										.addContainerGap()
										.addGroup(
												scorePanelLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING)
														.addGroup(
																scorePanelLayout
																		.createSequentialGroup()
																		.addComponent(
																				alphaLabel)
																		.addGap(
																				70,
																				70,
																				70)
																		.addComponent(
																				alphaTextField,
																				javax.swing.GroupLayout.DEFAULT_SIZE,
																				211,
																				Short.MAX_VALUE))
														.addGroup(
																scorePanelLayout
																		.createSequentialGroup()
																		.addComponent(
																				alphaMultiplierLabel)
																		.addPreferredGap(
																				javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																		.addComponent(
																				alphaMultiplierTextField,
																				javax.swing.GroupLayout.DEFAULT_SIZE,
																				211,
																				Short.MAX_VALUE))
														.addGroup(
																scorePanelLayout
																		.createSequentialGroup()
																		.addComponent(
																				degreeLabel)
																		.addPreferredGap(
																				javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																		.addComponent(
																				degreeTextField,
																				javax.swing.GroupLayout.DEFAULT_SIZE,
																				61,
																				Short.MAX_VALUE)))
										.addContainerGap()));
		scorePanelLayout
				.setVerticalGroup(scorePanelLayout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								scorePanelLayout
										.createSequentialGroup()
										.addGroup(
												scorePanelLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(
																alphaLabel)
														.addComponent(
																alphaTextField,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.PREFERRED_SIZE))
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addGroup(
												scorePanelLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(
																alphaMultiplierLabel)
														.addComponent(
																alphaMultiplierTextField,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.PREFERRED_SIZE))
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addGroup(
												scorePanelLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(
																degreeLabel)
														.addComponent(
																degreeTextField,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.PREFERRED_SIZE))
										.addContainerGap(
												javax.swing.GroupLayout.DEFAULT_SIZE,
												Short.MAX_VALUE)));

		searchButton.setText("Search");
		searchButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				searchButtonActionPerformed(evt);
			}
		});

		helpButton.setText("?");
		helpButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				helpButtonActionPerformed(evt);
			}
		});

		closeButton.setText("Close");
		closeButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				closeButtonActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
		this.setLayout(layout);
		layout
				.setHorizontalGroup(layout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								layout
										.createSequentialGroup()
										.addContainerGap()
										.addGroup(
												layout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING)
														.addGroup(
																javax.swing.GroupLayout.Alignment.TRAILING,
																layout
																		.createSequentialGroup()
																		.addGap(
																				6,
																				6,
																				6)
																		.addComponent(
																				networkComboBox,
																				0,
																				333,
																				Short.MAX_VALUE)
																		.addGap(
																				12,
																				12,
																				12))
														.addGroup(
																layout
																		.createSequentialGroup()
																		.addGroup(
																				layout
																						.createParallelGroup(
																								javax.swing.GroupLayout.Alignment.LEADING)
																						.addComponent(
																								edgeAttributePanel,
																								javax.swing.GroupLayout.Alignment.TRAILING,
																								javax.swing.GroupLayout.DEFAULT_SIZE,
																								javax.swing.GroupLayout.DEFAULT_SIZE,
																								Short.MAX_VALUE)
																						.addComponent(
																								scorePanel,
																								javax.swing.GroupLayout.Alignment.TRAILING,
																								javax.swing.GroupLayout.DEFAULT_SIZE,
																								javax.swing.GroupLayout.DEFAULT_SIZE,
																								Short.MAX_VALUE)
																						.addGroup(
																								javax.swing.GroupLayout.Alignment.TRAILING,
																								layout
																										.createSequentialGroup()
																										.addComponent(
																												helpButton,
																												javax.swing.GroupLayout.PREFERRED_SIZE,
																												47,
																												javax.swing.GroupLayout.PREFERRED_SIZE)
																										.addPreferredGap(
																												javax.swing.LayoutStyle.ComponentPlacement.RELATED,
																												134,
																												Short.MAX_VALUE)
																										.addComponent(
																												closeButton,
																												javax.swing.GroupLayout.PREFERRED_SIZE,
																												73,
																												javax.swing.GroupLayout.PREFERRED_SIZE)
																										.addPreferredGap(
																												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																										.addComponent(
																												searchButton))
																						.addComponent(
																								networkLabel,
																								javax.swing.GroupLayout.PREFERRED_SIZE,
																								111,
																								javax.swing.GroupLayout.PREFERRED_SIZE))
																		.addContainerGap()))));
		layout
				.setVerticalGroup(layout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								layout
										.createSequentialGroup()
										.addContainerGap()
										.addComponent(networkLabel)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(
												networkComboBox,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGap(2, 2, 2)
										.addComponent(
												edgeAttributePanel,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(
												scorePanel,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED,
												23, Short.MAX_VALUE)
										.addGroup(
												layout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(
																searchButton)
														.addComponent(
																closeButton)
														.addComponent(
																helpButton))
										.addContainerGap()));
	}// </editor-fold>

	private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {
		// Build parameter object
		buildSearchParameter();

		// Run search algorithm

		JTaskConfig jTaskConfig = new JTaskConfig();
		jTaskConfig.displayCancelButton(true);
		jTaskConfig.displayCloseButton(false);
		jTaskConfig.displayStatus(true);
		jTaskConfig.displayTimeElapsed(true);
		jTaskConfig.displayTimeRemaining(false);
		jTaskConfig.setAutoDispose(true);
		jTaskConfig.setModal(true);
		jTaskConfig.setOwner(Cytoscape.getDesktop());
		TaskManager.executeTask(new SearchTask(parameters), jTaskConfig);
	}

	private void helpButtonActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
	}

	private void alphaMultiplierTextFieldActionPerformed(
			java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
	}

	private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {
		// Close parent tab
		final CytoPanel cytoPanel = Cytoscape.getDesktop().getCytoPanel(
				SwingConstants.WEST);
		cytoPanel.remove(this);
	}

	private void networkComboBoxActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
	}

	private void physicalEdgeComboBoxActionPerformed(
			java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
	}

	private void geneticEdgeComboBoxActionPerformed(
			java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
	}

	private void alphaTextFieldActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
	}

	// Variables declaration - do not modify
	private javax.swing.JLabel alphaLabel;
	private javax.swing.JLabel alphaMultiplierLabel;
	private javax.swing.JTextField alphaMultiplierTextField;
	private javax.swing.JTextField alphaTextField;
	private javax.swing.JButton closeButton;
	private javax.swing.JLabel degreeLabel;
	private javax.swing.JTextField degreeTextField;
	private javax.swing.JPanel edgeAttributePanel;
	private javax.swing.JComboBox geneticEdgeComboBox;
	private javax.swing.JLabel geneticEdgeLabel;
	private javax.swing.JButton helpButton;
	private javax.swing.JComboBox networkComboBox;
	private javax.swing.JLabel networkLabel;
	private javax.swing.JComboBox physicalEdgeComboBox;
	private javax.swing.JLabel physicalEdgeLabel;
	private javax.swing.JPanel scorePanel;
	private javax.swing.JButton searchButton;

	// End of variables declaration

	private void updateAttributeLists() {
		// Save current selection
		final Object geneticSelected = geneticEdgeComboBox.getSelectedItem();
		final Object physicalSelected = physicalEdgeComboBox.getSelectedItem();

		// Reset the children
		geneticEdgeComboBox.removeAllItems();
		physicalEdgeComboBox.removeAllItems();

		final CyAttributes edgeAttr = Cytoscape.getEdgeAttributes();
		final Set<String> edgeAttrNames = new TreeSet<String>(Arrays
				.asList(edgeAttr.getAttributeNames()));

		boolean isGeneticSelectedExist = false;
		boolean isPhysicalSelectedExist = false;
		for (String name : edgeAttrNames) {
			// Use only double attributes
			if (edgeAttr.getMultiHashMapDefinition()
					.getAttributeValueType(name) == MultiHashMapDefinition.TYPE_FLOATING_POINT) {

				geneticEdgeComboBox.addItem(name);
				physicalEdgeComboBox.addItem(name);
				if (name.equals(geneticSelected))
					isGeneticSelectedExist = true;
				if (name.equals(physicalSelected))
					isPhysicalSelectedExist = true;
			}
		}

		if (isGeneticSelectedExist)
			geneticEdgeComboBox.setSelectedItem(geneticSelected);
		if (isPhysicalSelectedExist)
			physicalEdgeComboBox.setSelectedItem(physicalSelected);
	}

	private void updateNetworkList() {
		final Set<CyNetwork> networks = Cytoscape.getNetworkSet();
		final SortedSet<String> networkNames = new TreeSet<String>();

		for (CyNetwork net : networks)
			networkNames.add(net.getTitle());

		networkComboBox.removeAllItems();
		for (String name : networkNames)
			networkComboBox.addItem(name);

		networkComboBox.setSelectedItem(Cytoscape.getCurrentNetwork()
				.getTitle());
	}

	public void updateState() {
		updateNetworkList();
		updateAttributeLists();
	}

	private void buildSearchParameter() {
		parameters = new SearchParameters();
		// Set network
		for (CyNetwork net : Cytoscape.getNetworkSet()) {
			if (net.getIdentifier().equals(networkComboBox.getSelectedItem())) {
				parameters.setNetwork(net);
				break;
			}
		}

		// Set edge attributes
		parameters.setGeneticEdgeAttrName(geneticEdgeComboBox.getSelectedItem()
				.toString());
		parameters.setPhysicalEdgeAttrName(physicalEdgeComboBox
				.getSelectedItem().toString());

		try {
			parameters.setAlpha(Double.parseDouble(alphaTextField.getText()));
			parameters.setAlphaMultiplier(Double
					.parseDouble(alphaMultiplierTextField.getText()));
			parameters.setAlphaMultiplier(Integer.parseInt(degreeTextField
					.getText()));
		} catch (NumberFormatException e) {
			e.printStackTrace();
			JOptionPane.showMessageDialog(this,
					"Invalid numbers.  Please re-enter values.",
					"Invalid Number", JOptionPane.ERROR_MESSAGE);
		}

	}

	/**
	 * For updating network combobox.
	 * 
	 */
	@Override
	public void propertyChange(PropertyChangeEvent evt) {
		final String propName = evt.getPropertyName();

		if (propName.equals(Cytoscape.NETWORK_CREATED)) {
			updateNetworkList();
		} else if (propName.equals(Cytoscape.NETWORK_DESTROYED)) {
			networkComboBox.removeItem(Cytoscape.getNetwork((String)evt.getNewValue()).getTitle());
		}
	}

	@Override
	public void attributeDefined(String attrName) {
		final CyAttributes edgeAttr = Cytoscape.getEdgeAttributes();
		if (edgeAttr.getMultiHashMapDefinition()
				.getAttributeValueType(attrName) == MultiHashMapDefinition.TYPE_FLOATING_POINT) {
			geneticEdgeComboBox.addItem(attrName);
			physicalEdgeComboBox.addItem(attrName);
		}

	}

	@Override
	public void attributeUndefined(String attrName) {
		geneticEdgeComboBox.removeItem(attrName);
		physicalEdgeComboBox.removeItem(attrName);
	}
}
