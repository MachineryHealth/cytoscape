#!/usr/bin/env python
import glob
import os
import sys
import xml.etree.ElementTree


verbose = False


def PrintUsage():
    print "usage: profiler [--verbose] maven_project_directory"
    exit(-1)


# Returns a triple [groupId,artifactId,version] upon success or None upon failure.
def ReadBaselineFile(maven_project_directory):
    try:
        file = open(maven_project_directory + "/baseline.xml", "r")
        tree = xml.etree.ElementTree.parse(file)
        root = tree.getroot()
        groupId = root.find("groupId")
        if groupId == None:
            return None
        artifactId = root.find("artifactId")
        if artifactId == None:
            return artifactId
        version = root.find("version")
        if version == None:
            return None
        return [groupId.text,artifactId.text,version.text]
    except:
        return None


def RunMavenTest():
#    if os.system("mvn clean test") != 0:
#    	return False
    return True


def ExtractTimingInfoFromSurefireReports(maven_project_directory):
    for file in glob.glob(maven_project_directory + "/*.xml"):
        print "Found "+file
    return {}

def SwapBundleVersionNumber():
    return True


def GenerateTimingReport(current_version, baseline_version):
    return


# Main program starts here:
if len(sys.argv) != 2 and len(sys.argv) != 3:
    PrintUsage()

if len(sys.argv) == 2:
    maven_project_directory = sys.argv[1]
else: # We have 3 arguments.
    if sys.argv[1] != "--verbose":
        PrintUsage()
    else:
        verbose = True
        maven_project_directory = sys.argv[2]

groupId_artifactId_version = ReadBaselineFile(maven_project_directory)
if groupId_artifactId_version == None:
    print "*** Failed to read baseline version from file!"
    exit(-2)

if not RunMavenTest():
    print "*** Failed to run Maven with the current version!"
    exit(-3)

timing_current_version = ExtractTimingInfoFromSurefireReports(maven_project_directory)

if not SwapBundleVersionNumber():
    print "*** Failed to replace the current version with the baseline version!"
    exit(-4)

if not RunMavenTest():
    print "*** Failed to run Maven with the baseline version!"
    exit(-6)

timing_baseline_version = ExtractTimingInfoFromSurefireReports(maven_project_directory)

GenerateTimingReport(timing_current_version, timing_baseline_version)
