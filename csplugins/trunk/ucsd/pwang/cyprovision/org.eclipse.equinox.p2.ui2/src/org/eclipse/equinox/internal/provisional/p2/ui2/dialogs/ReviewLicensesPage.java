package org.eclipse.equinox.internal.provisional.p2.ui2.dialogs;

import java.awt.Component;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Set;
import java.util.Iterator;

import org.eclipse.equinox.internal.provisional.p2.metadata.ILicense;
import org.netbeans.spi.wizard.WizardPage;

public class ReviewLicensesPage extends WizardPage{

    private HashSet checkedIUElements = null;

      
    /** Creates new form ReviewLicensesPage */
    public ReviewLicensesPage() {
        initComponents();
        buttonGroup1.add(rbtAccept);
        buttonGroup1.add(rbtNotAccept);
        
		//Populate the textarea when the panel show up the first time
		ComponentAdapter componentAdapter = new ComponentAdapter(){
		    public void componentMoved(ComponentEvent e)  {
		    	//System.out.println("component has been  moved");
		    	recycle();
		    }
		};
		this.addComponentListener(componentAdapter);
    }

    
    public static final String getDescription() {
        return "Review Licenses";
    }
    
    
    protected String validateContents (Component component, Object o) {
    	if (!rbtAccept.isSelected()){
    		return "You must accept the license to install the software!";
    	}
    	return null;
    }

    
    protected  void recycle()  {
    	rbtNotAccept.setSelected(true);
    	checkedIUElements = (HashSet) this.getWizardDataMap().get("checkedIUElements");
    	
    	if (checkedIUElements == null){
    		return;
    	}
    	
    	// Get license text
     	String licenseText = getLicenseText();
    	taLicenseText.setText(licenseText);
    }
    
    
    private String getLicenseText(){
    	
    	String retValue = "";
    	String name = "";
       	HashMap licenseMap = (HashMap) this.getWizardDataMap().get("LicenseMap");
    	
       	if (licenseMap == null || licenseMap.size() ==0){
       		return "None or Not available";
       	}
       	
       	Set keys = licenseMap.keySet();
       	Iterator it = keys.iterator();
       	while (it.hasNext()){
       		name = (String) it.next();
       		ILicense license = (ILicense) licenseMap.get(name);
       		
       		retValue += name + "\n";
       		if (license.getLocation() != null){
           		retValue += "The full text of the license can be found at " + license.getLocation().toString()+ "\n";       			
       		}
       		retValue += license.getBody();
       		retValue += "\n\n";
       	}
	
    	return retValue;
    }
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">                          
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        taLicenseText = new javax.swing.JTextArea();
        rbtAccept = new javax.swing.JRadioButton();
        rbtNotAccept = new javax.swing.JRadioButton();

        setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("License Text:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 5, 5);
        add(jLabel1, gridBagConstraints);

        taLicenseText.setColumns(20);
        taLicenseText.setRows(5);
        jScrollPane1.setViewportView(taLicenseText);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 10, 5);
        add(jScrollPane1, gridBagConstraints);

        rbtAccept.setText("I accept the term of the license agreement");
        rbtAccept.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        rbtAccept.setMargin(new java.awt.Insets(0, 0, 0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 5);
        add(rbtAccept, gridBagConstraints);

        rbtNotAccept.setText("I do not accept the terms of the license agreement");
        rbtNotAccept.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        rbtNotAccept.setMargin(new java.awt.Insets(0, 0, 0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 20, 5);
        add(rbtNotAccept, gridBagConstraints);

    }// </editor-fold>                        
    
    
    // Variables declaration - do not modify                     
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rbtAccept;
    private javax.swing.JRadioButton rbtNotAccept;
    private javax.swing.JTextArea taLicenseText;
    // End of variables declaration                   

    
}
