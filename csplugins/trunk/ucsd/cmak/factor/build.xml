<project name="mdi" default="compile" basedir=".">
    <description>
        simple example build file
    </description>
  <!-- set global properties for this build -->
  <property name="src" location="src"/>
  <property name="build" location="build"/>
  <property name="dist"  location="dist"/>
  <property name="lib"  location="lib"/>
  <property name="doc"  location="doc"/>
  <property name="test.out"  location="testOut"/>
  <property name="test.report"  location="test-report"/>
  <property name="grammar" location="grammar"/>
  <property name="gsrc" location="${build}/src/fgraph/test"/>

   <path id="project.class.path">
       <fileset dir="${lib}">
	   <include name="*.jar"/>
       </fileset>
       <pathelement location="./${build}"/>
    </path>


  <target name="cron" depends="clean,compile,test" >
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <echo message="cron ant task: ${DSTAMP}"/>

  </target>


  <target name="test2">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <echo message="${DSTAMP}"/>

  </target>

  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>

  </target>

  <target name="doc">

    <!-- Create the build directory structure used by compile -->
    <delete dir="${doc}"/>
    <mkdir dir="${doc}"/>
    <javadoc sourcepath="${src}" destdir="${doc}">
       <fileset dir="${src}">
	  <include name="**/*.java"/>
	  <exclude name="**/*Test.java"/>
        </fileset>
    </javadoc>
  </target>


  <target name="antlr" depends="init"
        description="generate source using ANTLR and compile" >
    <mkdir dir="${gsrc}"/>

   <antlr target="${grammar}/message.g"
           outputdirectory="${gsrc}"/>

    <!-- Compile the java code from ${src} into ${build}
    <javac  destdir="${build}" deprecation="no">
         <src path="${src}"/> 
        <src path="${gsrc}"/>
         <include name="ParseMain.java"/>
         <include name="T.java"/>
         <include name="L.java"/>
         <include name="P.java"/>
         <include name="TTokenTypes.java"/>

         <classpath refid="project.class.path"/>
    </javac>
    -->
  </target>


  <target name="compile" depends="init, antlr"
        description="compile the source " >
    <!-- Compile the java code from ${src} into ${build} -->
    <javac srcdir="${src}" destdir="${build}" deprecation="no">
         <src path="${gsrc}"/>
         <classpath refid="project.class.path"/>
    </javac>

  </target>

   <!-- does not work for some reason -->
  <target name="test">
         <delete dir="${test.report}"/>
         <mkdir dir="${test.out}"/>
         <mkdir dir="${test.report}"/>
         <mkdir dir="${test.report}/html"/>
         <junit printsummary="on" showoutput="false" maxmemory="512m">
	   <formatter type="xml"/>
           <classpath refid="project.class.path"/>
	   <batchtest fork="yes" todir="${test.report}">
	       <fileset dir="${src}">
	       <includesfile name="tests"/>
	       </fileset>
	   </batchtest>
	 </junit>

	 <junitreport todir="${test.report}">
	    <fileset dir="${test.report}">
	    <include name="TEST-*.xml"/>
	    </fileset>
	    <report format="frames" todir="${test.report}/html"/>
	 </junitreport>

  </target>

  <target name="plugin" depends="compile" 
          description="generate the plugin jar">
    <mkdir dir="${dist}"/>
    <delete file="${dist}/fgraph.jar"/>
    <jar jarfile="${dist}/fgraph.jar" 
         basedir="${build}"
         includes="fgraph/**"
         excludes="fgraph/test/**,**/*Test.class"
    />

    <copy file="${dist}/fgraph.jar" toDir="${user.home}/cytoscape/plugins"/>
  </target>

  <target name="dist" depends="compile"
        description="generate the distribution" >
    <!-- Create the distribution directory -->

    <!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
    <jar jarfile="${dist}/lib/mdi-${DSTAMP}.jar" 
         basedir="${build}"
         excludes="fgraph/test/**,**/*Test.class"/>
  </target>

  <target name="clean"
        description="clean up" >
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>
</project>