<?xml version="1.0"?>
<!--
	Enhanced Search Ant Build Script.
	Author:  Maital Ashkenazi
-->

<project name="EnhancedSearch" default="all" basedir="." xmlns:artifact="antlib:org.apache.maven.artifact.ant">

	<!-- =================================================================== -->
	<!-- Initialization target                                               -->
	<!-- =================================================================== -->
	<target name="init">
		<tstamp />
		<property name="name" value="EnhancedSearch" />
		<property name="version" value="1.2" />

		<echo message="Building ${name} version ${version} ..." />

		<!-- Inheritable properties -->
		<property name="debug" value="on" />
		<property name="optimize" value="off" />
		<property name="deprecation" value="on" />
		<property name="fork" value="false" />

		<!-- Define the directories -->
		<property name="root.dir" value="." />
		<property name="resources.dir" value="${root.dir}/resources" />
		<property name="src.dir" value="${root.dir}/src" />
		<property name="tests.dir" value="${root.dir}/tests" />
		<property name="build.dir" value="${root.dir}/build" />
		<property name="lib.dir" value="${root.dir}/lib" />
		<property name="log.dir" value="${build.dir}/logs" />
		<property name="junit.report.dir" value="${log.dir}/junit-reports" />

		<!-- Define the relevant files -->
		<property name="project.jar" value="${name}.jar" />
		<property name="test.jar" value="${name}-tests.jar" />

		<artifact:remoteRepository id="cytoscape_releases" url="http://cytoscape.wodaklab.org/nexus/content/repositories/releases/" />
		<artifact:remoteRepository id="cytoscape_snapshots" url="http://cytoscape.wodaklab.org/nexus/content/repositories/snapshots/" />
		<artifact:dependencies pathId="dependency.classpath">
			<dependency groupId="cytoscape" artifactId="application" version="2.8.0-SNAPSHOT" />
		</artifact:dependencies>

		<!-- Define the class path -->
		<path id="project.class.path">
			<fileset dir="/usr/share/ant/lib">
				<include name="*.jar" />
			</fileset>
			<fileset dir="${lib.dir}">
				<include name="*.jar" />
			</fileset>
			<path refid="dependency.classpath" />
		</path>

		<!-- Define the junit class path - It needs to find what we just built -->
		<path id="junit.class.path">
			<fileset dir="/usr/share/ant/lib">
				<include name="*.jar" />
			</fileset>
			<fileset dir="${root.dir}">
				<include name="*.jar" />
			</fileset>
			<fileset dir="${lib.dir}">
				<include name="*.jar" />
			</fileset>
			<path refid="dependency.classpath" />
		</path>

		<!-- Make sure tests is in the right place -->
		<condition property="tests.ok">
			<and>
				<available file="${tests.dir}" />
			</and>
		</condition>

	</target>

	<!-- =================================================================== -->
	<!-- Compiles the project                                                -->
	<!-- =================================================================== -->
	<target name="compile" depends="init">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${log.dir}" />
		<javac srcdir="${src.dir}" classpathref="project.class.path" destdir="${build.dir}" debug="${debug}" deprecation="${deprecation}" optimize="${optimize}" fork="${fork}">
		       <compilerarg line="-Xlint:unchecked"/>
			<!--
	       <compilerarg line="-Xlint:all -Xlint:-path"/>
	-->
		</javac>
		<echo message="Successfully ran compile task!" />
	</target>


	<!-- =================================================================== -->
	<!-- Creates the project jar file                                        -->
	<!-- =================================================================== -->
	<target name="jar" depends="compile">

		<!--copy file="${resources.dir}/plugin.props" todir="${build.dir}/org/cytoscape/equations/internal/googlechart" /-->
		<unjar dest="${build.dir}">
			<fileset dir="${lib.dir}">
				<include name="*.jar" />
			</fileset>
		</unjar>

		<jar destfile="${project.jar}">
			<fileset dir="${build.dir}" includes="**" />
			<manifest>
				<attribute name="Cytoscape-Plugin" value="csplugins.enhanced.search.EnhancedSearchPlugin" />
			</manifest>
		</jar>
		<echo message="Successfully ran jar task!" />
	</target>

	<!-- =================================================================== -->
	<!-- Compiles the tests                                                  -->
	<!-- Note that this compilation occurs AFTER the distribution jar has    -->
	<!-- been created, so that the tests aren't distributed.                 -->
	<!-- =================================================================== -->
	<target name="compile-tests" depends="jar" if="tests.ok">
		<javac srcdir="${tests.dir}" classpathref="junit.class.path" destdir="${build.dir}" debug="${debug}" deprecation="${deprecation}" optimize="${optimize}" fork="${fork}">
			<compilerarg line="-Xlint:all -Xlint:-path" />
		</javac>
		<echo message="Successfully ran compile-tests task!" />
	</target>

	<!-- =================================================================== -->
	<!-- Creates the project-tests.jar file                                  -->
	<!-- =================================================================== -->
	<target name="jar-tests" depends="compile-tests" if="tests.ok">
		<jar jarfile="${test.jar}" basedir="${build.dir}">
		</jar>
		<echo message="Successfully ran jar-tests task!" />
	</target>

    <!-- ==================== Run Target ================================= -->
    <target description="Runs Latest Version of Cytoscape with EnhancedSearch Plugin"
        name="run">
        <java classname="cytoscape.CyMain" classpathref="project.class.path"
            fork="true" maxmemory="1000M">
            <arg line="-p ${root.dir}"/>
        </java>
    </target>




	<!-- =================================================================== -->
	<!-- Runs the unit tests.                                                -->
	<!-- =================================================================== -->
	<target name="test" depends="jar-tests" if="tests.ok">
		<junit printsummary="yes" haltonfailure="no" maxmemory="256m">
			<classpath refid="junit.class.path" />
			<formatter type="plain" usefile="true" />
			<formatter type="xml" usefile="true" />
			<batchtest fork="yes" todir="${log.dir}" failureProperty="junit.test.failure" errorProperty="junit.test.failure">
				<fileset dir="${tests.dir}" includes="**/*Test.java" excludes="**/AllTests.java" />
			</batchtest>
		</junit>
		<mkdir dir="${junit.report.dir}" />
		<junitreport todir="${junit.report.dir}">
			<fileset dir="${log.dir}">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="${junit.report.dir}" />
		</junitreport>
		<fail message="TEST FAILURE!!! Details: ${junit.report.dir}/index.html" if="junit.test.failure" />
		<echo message="Successfully ran test task!" />
	</target>

	<!-- ==================== JUnit Test Target =========================== -->
	<target name="old-test" description="Runs all JUnit tests" depends="compile">
		<junit printsummary="yes" fork="yes" haltonfailure="yes">
			<formatter type="plain" usefile="false" />
			<test name="csplugins.enhanced.search.TestEnhancedSearch" />
			<classpath refid="junit.class.path" />
		</junit>
	</target>

	<!-- =================================================================== -->
	<!-- Do everything                                                       -->
	<!-- =================================================================== -->
	<target name="all" depends="jar,old-test,run" />

	<!-- =================================================================== -->
	<!-- Clean up, get back to original state                                -->
	<!-- =================================================================== -->
	<target name="clean" depends="init">
		<delete dir="${build.dir}" />
		<delete dir="${javadoc.dir}" />
		<delete file="${project.jar}" />
		<delete file="${test.jar}" />
		<echo message="Successfully ran clean task!" />
	</target>

</project>

