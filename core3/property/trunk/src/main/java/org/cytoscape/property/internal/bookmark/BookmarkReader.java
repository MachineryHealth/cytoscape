package org.cytoscape.property.internal.bookmark;

import java.io.IOException;
import java.io.InputStream;

import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBException;
import javax.xml.bind.Unmarshaller;

import org.cytoscape.property.PropertyReader;
import org.cytoscape.property.bookmark.Bookmarks;

public class BookmarkReader implements PropertyReader<Bookmarks> {

	// Package name generated by JAXB based on XGMML schema file
	private static final String BOOKMARK_PACKAGE = Bookmarks.class.getPackage()
			.getName();

	private Bookmarks bookmarks;

	private String resourceLocation;

	/**
	 * Creates a new BookmarkReader object.
	 */
	public BookmarkReader(String resourceLocation) {
		this.resourceLocation = resourceLocation;
	}

	public void read() throws IOException {

		InputStream is = this.getClass().getClassLoader().getResourceAsStream(
				resourceLocation);

		if (is == null)
			throw new IOException("Failed to open resource: "
					+ resourceLocation);

		try {
			readBookmarks(is);
		} catch (JAXBException e) {
			final IOException ioe = new IOException(
					"Could not read bookmark file.");
			ioe.setStackTrace(e.getStackTrace());
			throw ioe;
		} finally {
			if (is != null) {
				is.close();
				is = null;
			}
		}
	}


	public void readBookmarks(java.io.InputStream is) throws JAXBException {
		// Use JAXB-generated methods to create data structure
		// final JAXBContext jaxbContext = JAXBContext.newInstance(
		// BOOKMARK_PACKAGE, this.getClass().getClassLoader());
		//		
		final JAXBContext jaxbContext = JAXBContext
				.newInstance(BOOKMARK_PACKAGE);

		// Unmarshall the XGMML file
		final Unmarshaller unmarshaller = jaxbContext.createUnmarshaller();

		bookmarks = (Bookmarks) unmarshaller.unmarshal(is);

	}

	public Bookmarks getProperties() {
		return bookmarks;
	}

}