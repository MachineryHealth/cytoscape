<project name="cyto-performance" default="run" basedir=".">
<!-- =================================================================== -->
<!-- Initialization target                                               -->
<!-- =================================================================== -->
 <target name="init">
  <tstamp/>
  <property name="name" value="cyperf"/>
  <property name="version" value="1.0.1"/>
  <echo message="Building ${name} version ${version} ..."/>
  <property name="root.dir" value="."/>
  <property name="lib.dir" value="${root.dir}/lib"/>

  <property name="build.dir" value="${root.dir}/build"/>
  <mkdir dir="${build.dir}"/>
  <property name="run.build.dir" value="${build.dir}/run"/>
  <property name="track.build.dir" value="${build.dir}/track"/>
  <property name="ui.build.dir" value="${build.dir}/ui"/>

  <property name="src.dir" value="${root.dir}/src"/>
  <property name="run.src.dir" value="${src.dir}/run"/>
  <property name="track.src.dir" value="${src.dir}/track"/>
  <property name="ui.src.dir" value="${src.dir}/ui"/>

  <property name="plugins.dir" value="${root.dir}/plugins"/>

  <property name="run.project.jar" value="run.${name}.jar"/>
  <property name="track.project.jar" value="track.${name}.jar"/>
  <property name="ui.project.jar" value="ui.${name}.jar"/>
 </target>

<!-- =================================================================== -->
<!-- Initialization specific to running.                                 -->
<!-- =================================================================== -->
 <target name="run_init" depends="init">
  <fail message="You must specify the cytoscape source location:    ant -Dcytoscape.dir=/path/to/cytoscape [ant target]">
   <condition>
    <not>
     <isset property="cytoscape.dir"/>
    </not>
   </condition>
  </fail>
  <!--
  <fail message="You must specify the plugin source location:    ant -Dplugin.root.dir=/path/to/plugin [ant target]">
   <condition>
    <not>
     <isset property="plugin.root.dir"/>
    </not>
   </condition>
  </fail>
  -->

  <fail message="You must specify the cytoscape version:    ant -Dcytoscape.version=2.3.X [ant target]">
   <condition>
    <not>
     <isset property="cytoscape.version"/>
    </not>
   </condition>
  </fail>

  <!-- Define the directories -->
  <property name="cytoscape.lib.dir" value="${cytoscape.dir}/lib"/>
  <!-- Define the class path - Defaults to everything in the lib.dir -->
  <path id="run.class.path">
   <fileset dir="${lib.dir}">
    <include name="*.jar"/>
   </fileset>
   <fileset dir="${cytoscape.dir}/lib">
    <include name="*.jar"/>
   </fileset>
   <fileset dir="${cytoscape.dir}/plugins/core">
    <include name="*.jar"/>
   </fileset>
   <pathelement location="${track.project.jar}"/>
   <pathelement location="${ui.project.jar}"/>
  </path>
 </target>
<!-- =================================================================== -->
<!-- Compiles the project                                                -->
<!-- =================================================================== -->
 <target name="run_compile" 
         depends="track_jar,ui_jar,run_compile_plugins" >
  <taskdef resource="org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties">
   <classpath>
    <pathelement location="${lib.dir}/aspectjtools.jar"/>
    <pathelement location="${cytoscape.dir}/cytoscape.jar"/>
   </classpath>
  </taskdef>
  <mkdir dir="${run.build.dir}"/>
  <iajc classpathref="run.class.path"
        destdir="${run.build.dir}"
        source="1.5" >
   <sourceroots>
    <pathelement location="${run.src.dir}"/>
    <pathelement location="${cytoscape.dir}/src"/>
   </sourceroots>
  </iajc>
 </target>
<!-- =================================================================== -->
<!-- Compiles the plugins                                                -->
<!-- =================================================================== -->
 <target name="run_compile_plugins" 
         depends="run_init" >
		 <!--
  <property name="plugin.name" value="AutomaticLayout"/>
  <property name="plugin.dir" value="${plugin.root.dir}/AutomaticLayout"/>
  <ant target="run_compile_one_plugin" />
  -->
  <!-- reset plugin.name and plugin.dir -->
  <!-- and run again for a different plugin-->
 </target>
<!-- =================================================================== -->
<!-- Compiles a single plugin                                            -->
<!-- =================================================================== -->
 <target name="run_compile_one_plugin"> 
  <fail message="You must specify the plugin name property (plugin.name)!">
   <condition>
    <not>
     <isset property="plugin.name"/>
    </not>
   </condition>
  </fail>
  <fail message="You must specify the plugin source dir property (plugin.dir)!">
   <condition>
    <not>
     <isset property="plugin.dir"/>
    </not>
   </condition>
  </fail>

  <!-- Define the plugin class path -->
  <mkdir dir="${plugin.dir}/lib"/>
  <path id="plugin.run.class.path">
   <fileset dir="${lib.dir}">
    <include name="*.jar"/>
   </fileset>
   <fileset dir="${root.dir}">
    <include name="*.jar"/>
   </fileset>
   <fileset dir="${plugin.dir}/lib">
    <include name="*.jar"/>
   </fileset>
   <fileset dir="${cytoscape.dir}/lib">
    <include name="*.jar"/>
   </fileset>
   <fileset dir="${cytoscape.dir}/plugins/core">
    <include name="*.jar"/>
   </fileset>
   <fileset dir="${cytoscape.dir}">
    <include name="*.jar"/>
   </fileset>
   <pathelement location="${track.project.jar}"/>
   <pathelement location="${ui.project.jar}"/>
  </path>

  <!-- setup -->
  <property name="plugin.build.dir" value="${plugins.dir}/${plugin.name}-plugin"/>
  <mkdir dir="${plugin.build.dir}"/>
   
  <taskdef resource="org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties">
   <classpath>
    <pathelement location="${lib.dir}/aspectjtools.jar"/>
    <pathelement location="${cytoscape.dir}/cytoscape.jar"/>
   </classpath>
  </taskdef>

  <!-- compile the plugin -->
  <iajc classpathref="plugin.run.class.path"
        destdir="${plugin.build.dir}"
        source="1.5" >
   <sourceroots>
    <pathelement location="${plugin.dir}/src"/>
    <pathelement location="${run.src.dir}"/>
   </sourceroots>
  </iajc>

  <!-- create a jar file and put it in the plugins dir -->
  <jar destfile="${plugins.dir}/${plugin.name}.jar" >
   <fileset dir="${plugin.build.dir}"
            includes="**"/>
  </jar>
  <echo message="Successfully ran jar task!"/>
 </target>
<!-- =================================================================== -->
<!-- Creates the project jar file                                        -->
<!-- =================================================================== -->
 <target name="run_jar" 
         depends="run_compile" >
  <copy todir="${run.build.dir}">
   <fileset dir="${run.src.dir}/testData">
    <include name="*"/>
   </fileset>
  </copy>
  <copy todir="${run.build.dir}/cytoscape/performance">
   <fileset dir="${run.src.dir}/cytoscape/performance">
    <include name="*.xml"/>
   </fileset>
  </copy>
  <path id="local.classpath">
   <fileset dir="${lib.dir}">
    <include name="*.jar" />
   </fileset>
  </path>
  <pathconvert property="local.classpath.string"
               pathsep=" ">
   <path refid="local.classpath"/>
   <chainedmapper>
    <flattenmapper/>
    <globmapper from="*" to="lib/*" handledirsep="yes"/>
   </chainedmapper>
  </pathconvert>
  <path id="cytoscape.classpath">
   <fileset dir="${cytoscape.dir}/lib">
    <include name="*.jar" />
   </fileset>
  </path>
  <pathconvert property="cytoscape.classpath.string"
               pathsep=" ">
   <path refid="cytoscape.classpath"/>
   <chainedmapper>
    <flattenmapper/>
    <globmapper from="*" to="${cytoscape.dir}/lib/*" handledirsep="yes"/>
   </chainedmapper>
  </pathconvert>
  <jar destfile="${run.project.jar}" >
   <fileset dir="${run.build.dir}"
               includes="**"/>
   <manifest>
    <attribute name="Main-Class" 
               value="cytoscape.performance.RunCytoscape"/>
    <attribute name="Class-Path" 
             value="${local.classpath.string} ${cytoscape.classpath.string} ${ui.project.jar} ${track.project.jar} ${cytoscape.dir}/cytoscape.jar"/>
   </manifest>
  </jar>
  <echo message="Successfully ran jar task!"/>
 </target>
<!-- =================================================================== -->
<!-- Do everything                                                       -->
<!-- =================================================================== -->
 <target name="run"
         depends="run_jar"
         description="Runs Cytoscape">
  <mkdir dir="${plugins.dir}"/>
  <copy todir="${plugins.dir}"
        overwrite="false"> <!-- we don't want to overwrite the plugins we just built -->
   <fileset dir="${cytoscape.dir}/plugins/core">
    <include name="*.jar"/>
   </fileset>
  </copy>
  <java jar="${root.dir}/${run.project.jar}" 
        fork="true">
   <jvmarg value="-Xmx512M"/>
   <jvmarg value="-Dcytoscape.dir=${cytoscape.dir}"/>
   <jvmarg value="-Dperf.version=${cytoscape.version}"/>
   <arg value="-p"/>
   <arg value="${plugins.dir}"/>
  </java>
 </target>
<!-- =================================================================== -->
<!-- Clean up, get back to original state                                -->
<!-- =================================================================== -->
 <target name="clean" 
         depends="init">
  <delete dir="${build.dir}"/>
  <delete dir="${plugins.dir}"/>
  <delete file="${run.project.jar}"/>
  <delete file="${ui.project.jar}"/>
  <delete file="${track.project.jar}"/>
  <delete>
      <fileset dir="." includes="*.cys"/>
      <fileset dir="." includes="*.png"/>
      <fileset dir="." includes="*.html"/>
  </delete>
  <echo message="Successfully ran clean task!"/>
  <echo message="Consider the 'distclean' task if you want to clean up results as well!"/>
 </target>

<!-- =================================================================== -->
<!-- Clean up, get back to original state - including results files      -->
<!-- =================================================================== -->
 <target name="distclean" 
         depends="clean">
  <delete>
      <fileset dir="." includes="*.log"/>
      <fileset dir="." includes="*.perf"/>
  </delete>
 </target>
<!-- =================================================================== -->
<!-- Create a jar containing only the track classes.                     -->
<!-- =================================================================== -->
 <target name="track_jar" 
         depends="init">
    <mkdir dir="${track.build.dir}"/>
    <javac debug="true"
           srcdir="${track.src.dir}"
           destdir="${track.build.dir}"
           deprecation="true">
     </javac>
    <jar destfile="${track.project.jar}" >
      <fileset dir="${track.build.dir}"
               includes="**"/>
    </jar>
    <echo message="Successfully created track jar!"/>
 </target>

<!-- =================================================================== -->
<!-- Create a jar containing only the UI classes.                        -->
<!-- =================================================================== -->
 <target name="ui_jar" 
         depends="init,track_jar">
    <mkdir dir="${ui.build.dir}"/>
    <javac srcdir="${ui.src.dir}"
           destdir="${ui.build.dir}"
           deprecation="true">
   <classpath>
    <pathelement location="${track.project.jar}"/>
   </classpath>
   <compilerarg line="-Xlint:all -Xlint:-path"/>
     </javac>
    <jar destfile="${ui.project.jar}" >
      <fileset dir="${ui.build.dir}"
               includes="**"/>
    </jar>
    <echo message="Successfully created ui jar!"/>
 </target>

</project>
