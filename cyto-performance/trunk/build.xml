<project name="cyto-performance" default="all" basedir=".">
<!-- =================================================================== -->
<!-- Initialization target                                               -->
<!-- =================================================================== -->
 <target name="static-init">
  <tstamp/>
  <property name="name" value="cyto-performance"/>
  <property name="version" value="1.0.1"/>
  <echo message="Building ${name} version ${version} ..."/>
  <property name="root.dir" value="."/>
  <property name="lib.dir" value="${root.dir}/lib"/>
  <property name="src.dir" value="${root.dir}/src"/>
  <property name="tests.dir" value="${root.dir}/tests"/>
  <property name="build.dir" value="${root.dir}/build"/>
  <property name="plugins.dir" value="${root.dir}/plugins"/>
  <property name="log.dir" value="${build.dir}/logs" />
  <!-- Define the relevant files -->
  <property name="project.jar" value="${name}.jar"/>
  <property name="test.jar" value="${name}-tests.jar"/>
 </target>
 <target name="init" depends="static-init">
  <fail message="You must specify the cytoscape source location:    ant -Dcytoscape.dir=/path/to/cytoscape [ant target]">
   <condition>
    <not>
     <isset property="cytoscape.dir"/>
    </not>
   </condition>
  </fail>
  <fail message="You must specify the plugin source location:    ant -Dplugin.root.dir=/path/to/plugin [ant target]">
   <condition>
    <not>
     <isset property="plugin.root.dir"/>
    </not>
   </condition>
  </fail>

  <!-- Define the directories -->
  <property name="cytoscape.lib.dir" value="${cytoscape.dir}/lib"/>
  <!-- Define the class path - Defaults to everything in the lib.dir -->
  <path id="build.class.path">
   <fileset dir="${lib.dir}">
    <include name="*.jar"/>
   </fileset>
   <fileset dir="${cytoscape.dir}/lib">
    <include name="*.jar"/>
   </fileset>
   <fileset dir="${cytoscape.dir}/plugins/core">
    <include name="*.jar"/>
   </fileset>
  </path>
 </target>
<!-- =================================================================== -->
<!-- Compiles the project                                                -->
<!-- =================================================================== -->
 <target name="compile" 
         depends="compile-plugins" >
  <taskdef resource="org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties">
   <classpath>
    <pathelement location="${lib.dir}/aspectjtools.jar"/>
    <pathelement location="${cytoscape.dir}/cytoscape.jar"/>
   </classpath>
  </taskdef>
  <mkdir dir="${build.dir}"/>
  <iajc classpathref="build.class.path"
        destdir="${build.dir}"
        source="1.5" >
   <sourceroots>
    <pathelement location="${src.dir}"/>
    <pathelement location="${cytoscape.dir}/src"/>
   </sourceroots>
  </iajc>
 </target>
<!-- =================================================================== -->
<!-- Compiles the plugins                                                -->
<!-- =================================================================== -->
 <target name="compile-plugins" 
         depends="init" >
  <property name="plugin.name" value="AutomaticLayout"/>
  <property name="plugin.dir" value="${plugin.root.dir}/AutomaticLayout"/>
  <ant target="compile-one-plugin" />
  <!-- reset plugin.name and plugin.dir -->
  <!-- and run again for a different plugin-->
 </target>
<!-- =================================================================== -->
<!-- Compiles a single plugin                                            -->
<!-- =================================================================== -->
 <target name="compile-one-plugin"> 
  <fail message="You must specify the plugin name property (plugin.name)!">
   <condition>
    <not>
     <isset property="plugin.name"/>
    </not>
   </condition>
  </fail>
  <fail message="You must specify the plugin source dir property (plugin.dir)!">
   <condition>
    <not>
     <isset property="plugin.dir"/>
    </not>
   </condition>
  </fail>

  <!-- Define the plugin class path -->
  <mkdir dir="${plugin.dir}/lib"/>
  <path id="plugin.build.class.path">
   <fileset dir="${lib.dir}">
    <include name="*.jar"/>
   </fileset>
   <fileset dir="${root.dir}">
    <include name="*.jar"/>
   </fileset>
   <fileset dir="${plugin.dir}/lib">
    <include name="*.jar"/>
   </fileset>
   <fileset dir="${cytoscape.dir}/lib">
    <include name="*.jar"/>
   </fileset>
   <fileset dir="${cytoscape.dir}/plugins/core">
    <include name="*.jar"/>
   </fileset>
   <fileset dir="${cytoscape.dir}">
    <include name="*.jar"/>
   </fileset>
  </path>

  <!-- setup -->
  <property name="plugin.build.dir" value="${plugins.dir}/${plugin.name}-plugin"/>
  <mkdir dir="${plugin.build.dir}"/>
   
  <taskdef resource="org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties">
   <classpath>
    <pathelement location="${lib.dir}/aspectjtools.jar"/>
    <pathelement location="${cytoscape.dir}/cytoscape.jar"/>
   </classpath>
  </taskdef>

  <!-- compile the plugin -->
  <iajc classpathref="plugin.build.class.path"
        destdir="${plugin.build.dir}"
        source="1.5" >
   <sourceroots>
    <pathelement location="${plugin.dir}/src"/>
    <pathelement location="${src.dir}"/>
   </sourceroots>
  </iajc>

  <!-- create a jar file and put it in the plugins dir -->
  <jar destfile="${plugins.dir}/${plugin.name}.jar" >
   <fileset dir="${plugin.build.dir}"
            includes="**"/>
  </jar>
  <echo message="Successfully ran jar task!"/>
 </target>
<!-- =================================================================== -->
<!-- Creates the project jar file                                        -->
<!-- =================================================================== -->
 <target name="jar" 
         depends="compile" >
  <copy todir="${build.dir}/cytoscape/performance">
   <fileset dir="${src.dir}/cytoscape/performance">
    <include name="*.xml"/>
   </fileset>
  </copy>
  <path id="local.classpath">
   <fileset dir="${lib.dir}">
    <include name="*.jar" />
   </fileset>
  </path>
  <pathconvert property="local.classpath.string"
               pathsep=" ">
   <path refid="local.classpath"/>
   <chainedmapper>
    <flattenmapper/>
    <globmapper from="*" to="lib/*" handledirsep="yes"/>
   </chainedmapper>
  </pathconvert>
  <path id="cytoscape.classpath">
   <fileset dir="${cytoscape.dir}/lib">
    <include name="*.jar" />
   </fileset>
  </path>
  <pathconvert property="cytoscape.classpath.string"
               pathsep=" ">
   <path refid="cytoscape.classpath"/>
   <chainedmapper>
    <flattenmapper/>
    <globmapper from="*" to="${cytoscape.dir}/lib/*" handledirsep="yes"/>
   </chainedmapper>
  </pathconvert>
  <jar destfile="${project.jar}" >
   <fileset dir="${build.dir}"
               includes="**"/>
   <manifest>
    <attribute name="Main-Class" 
               value="cytoscape.performance.RunCytoscape"/>
    <attribute name="Class-Path" 
             value="${local.classpath.string} ${cytoscape.classpath.string} ${cytoscape.dir}/cytoscape.jar"/>
   </manifest>
  </jar>
  <echo message="Successfully ran jar task!"/>
 </target>
<!-- =================================================================== -->
<!-- Do everything                                                       -->
<!-- =================================================================== -->
 <target name="run"
         depends="jar"
         description="Runs Cytoscape">
  <mkdir dir="${plugins.dir}"/>
  <copy todir="${plugins.dir}"
        overwrite="false"> <!-- we don't want to overwrite the plugins we just built -->
   <fileset dir="${cytoscape.dir}/plugins/core">
    <include name="*.jar"/>
   </fileset>
  </copy>
  <java jar="${root.dir}/cyto-performance.jar" 
        fork="true">
   <jvmarg value="-Xmx512M"/>
   <jvmarg value="-Dcytoscape.dir=${cytoscape.dir}"/>
   <arg value="-p"/>
   <arg value="${plugins.dir}"/>
  </java>
 </target>
<!-- =================================================================== -->
<!-- Clean up, get back to original state                                -->
<!-- =================================================================== -->
 <target name="clean" 
         depends="static-init">
  <delete dir="${build.dir}"/>
  <delete dir="${plugins.dir}"/>
  <delete file="${project.jar}"/>
  <delete file="${test.jar}"/>
  <echo message="Successfully ran clean task!"/>
 </target>
</project>
