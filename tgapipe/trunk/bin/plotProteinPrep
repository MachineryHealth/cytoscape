#! /usr/bin/env python

import sys, os
myBinDir = os.path.normpath(os.path.dirname(sys.argv[0]))
sys.path.append(myBinDir + "/../../../src")

from hprd.hprdTools import HPRDdict,HPRDTbl
from cosmic.cosmicTools import COSMICTbl

def main():

   # Load COSMIC
   cosmic = COSMICTbl()

   # Load HPRD xref data
   npLookup = HPRDdict("/Users/maverick/Lab/projects/pm/data/hprd/release9/FLAT_FILES_072010/HPRD_ID_MAPPINGS.txt")

   # Load HPRD ptm data
   ptmtbl = HPRDTbl("/Users/maverick/Lab/projects/pm/data/hprd/release9/FLAT_FILES_072010/POST_TRANSLATIONAL_MODIFICATIONS.txt","ptm")

   # Load HPRD arch data
   archtbl = HPRDTbl("/Users/maverick/Lab/projects/pm/data/hprd/release9/FLAT_FILES_072010/PROTEIN_ARCHITECTURE.txt","arch")

   # Load cons data ??

   # Output = dir
   outdir = sys.argv[2]
   if outdir.endswith("/"):
      outdir = outdir[:-1]

   # Input = protein ID
   IDs = sys.argv[1]
   #varinfo = sys.argv[2]

   for ID in IDs.split(","):

      # Get NPID corresponding to hgnc symbol
      NPID = npLookup.hgncConvert(ID, "refprot")
      if NPID == None:
         sys.stderr.write("NPID not found for " + ID + "\n")
         continue
         #raise Exception(ID + " not in HPRD database")

      archfile = file(outdir + "/" + ID + ".architecture", 'w')
      varfile = file(outdir + "/" + ID + ".vars", 'w')
      ptmfile = file(outdir + "/" + ID + ".ptm", 'w')

      # Get list of variants
      cosmicVars = cosmic.getVars(ID)
      for var in cosmicVars:
         var.NPID = NPID
         if var.altAA != "":
            text = var.formatForProteinPlot()
            print >> varfile, text

      # Build protein architecture file
      print >> archfile, "architecture_name\tstart_site\tend_site"
      archlist = archtbl.getProtData(NPID)
      archlist = [] if archlist == None else archlist
      for item in archlist:
         text = item.formatForProteinPlot()
         print >> archfile, text

      # Get ptm site info
      print >> ptmfile, "site"
      sitelist = ptmtbl.getProtData(NPID)
      sitelist = [] if sitelist == None else sitelist
      for site in sitelist:
         text = site.formatForProteinPlot()
         print >> ptmfile, text

      archfile.close()
      varfile.close()
      ptmfile.close()

if __name__ == "__main__":
   main()
